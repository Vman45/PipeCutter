// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: machinetalk/protobuf/message.proto

package pb;

public final class Message {
  private Message() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb.Container)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .pb.ContainerType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .pb.ContainerType type = 1;</code>
     */
    pb.Types.ContainerType getType();

    /**
     * <code>optional sfixed64 tsc = 7;</code>
     *
     * <pre>
     * protobuf-encoded submessages
     * tags with values in the range 1 through 15 take one byte to encode
     * so place the frequently used compound messages here
     * </pre>
     */
    boolean hasTsc();
    /**
     * <code>optional sfixed64 tsc = 7;</code>
     *
     * <pre>
     * protobuf-encoded submessages
     * tags with values in the range 1 through 15 take one byte to encode
     * so place the frequently used compound messages here
     * </pre>
     */
    long getTsc();

    /**
     * <code>repeated .pb.Preview preview = 8;</code>
     */
    java.util.List<pb.PreviewOuterClass.Preview> 
        getPreviewList();
    /**
     * <code>repeated .pb.Preview preview = 8;</code>
     */
    pb.PreviewOuterClass.Preview getPreview(int index);
    /**
     * <code>repeated .pb.Preview preview = 8;</code>
     */
    int getPreviewCount();
    /**
     * <code>repeated .pb.Preview preview = 8;</code>
     */
    java.util.List<? extends pb.PreviewOuterClass.PreviewOrBuilder> 
        getPreviewOrBuilderList();
    /**
     * <code>repeated .pb.Preview preview = 8;</code>
     */
    pb.PreviewOuterClass.PreviewOrBuilder getPreviewOrBuilder(
        int index);

    /**
     * <code>optional .pb.MotionCommand motcmd = 9;</code>
     */
    boolean hasMotcmd();
    /**
     * <code>optional .pb.MotionCommand motcmd = 9;</code>
     */
    pb.Motcmds.MotionCommand getMotcmd();
    /**
     * <code>optional .pb.MotionCommand motcmd = 9;</code>
     */
    pb.Motcmds.MotionCommandOrBuilder getMotcmdOrBuilder();

    /**
     * <code>optional .pb.MotionStatus motstat = 10;</code>
     */
    boolean hasMotstat();
    /**
     * <code>optional .pb.MotionStatus motstat = 10;</code>
     */
    pb.Motcmds.MotionStatus getMotstat();
    /**
     * <code>optional .pb.MotionStatus motstat = 10;</code>
     */
    pb.Motcmds.MotionStatusOrBuilder getMotstatOrBuilder();

    /**
     * <code>optional bytes legacy_motcmd = 11;</code>
     *
     * <pre>
     * emcmot_command_t wrapped in PB
     * </pre>
     */
    boolean hasLegacyMotcmd();
    /**
     * <code>optional bytes legacy_motcmd = 11;</code>
     *
     * <pre>
     * emcmot_command_t wrapped in PB
     * </pre>
     */
    com.google.protobuf.ByteString getLegacyMotcmd();

    /**
     * <code>optional bytes legacy_motstat = 12;</code>
     *
     * <pre>
     * emcmot_status_t wrapped in PB
     * </pre>
     */
    boolean hasLegacyMotstat();
    /**
     * <code>optional bytes legacy_motstat = 12;</code>
     *
     * <pre>
     * emcmot_status_t wrapped in PB
     * </pre>
     */
    com.google.protobuf.ByteString getLegacyMotstat();

    /**
     * <code>optional .pb.RTAPI_Message rtapi_message = 13;</code>
     */
    boolean hasRtapiMessage();
    /**
     * <code>optional .pb.RTAPI_Message rtapi_message = 13;</code>
     */
    pb.RtapiMessage.RTAPI_Message getRtapiMessage();
    /**
     * <code>optional .pb.RTAPI_Message rtapi_message = 13;</code>
     */
    pb.RtapiMessage.RTAPI_MessageOrBuilder getRtapiMessageOrBuilder();

    /**
     * <code>optional .pb.TaskReply task_reply = 14;</code>
     */
    boolean hasTaskReply();
    /**
     * <code>optional .pb.TaskReply task_reply = 14;</code>
     */
    pb.Task.TaskReply getTaskReply();
    /**
     * <code>optional .pb.TaskReply task_reply = 14;</code>
     */
    pb.Task.TaskReplyOrBuilder getTaskReplyOrBuilder();

    /**
     * <code>optional .pb.TicketUpdate ticket_update = 15;</code>
     */
    boolean hasTicketUpdate();
    /**
     * <code>optional .pb.TicketUpdate ticket_update = 15;</code>
     */
    pb.Task.TicketUpdate getTicketUpdate();
    /**
     * <code>optional .pb.TicketUpdate ticket_update = 15;</code>
     */
    pb.Task.TicketUpdateOrBuilder getTicketUpdateOrBuilder();

    /**
     * <code>optional bytes syslog = 18;</code>
     *
     * <pre>
     * RFC5424 syslog(3) encoding
     * </pre>
     */
    boolean hasSyslog();
    /**
     * <code>optional bytes syslog = 18;</code>
     *
     * <pre>
     * RFC5424 syslog(3) encoding
     * </pre>
     */
    com.google.protobuf.ByteString getSyslog();

    /**
     * <code>optional bytes legacy_nml = 19;</code>
     *
     * <pre>
     * legacy NML container
     * </pre>
     */
    boolean hasLegacyNml();
    /**
     * <code>optional bytes legacy_nml = 19;</code>
     *
     * <pre>
     * legacy NML container
     * </pre>
     */
    com.google.protobuf.ByteString getLegacyNml();

    /**
     * <code>optional bytes legacy_motconfig = 20;</code>
     *
     * <pre>
     * emcmot_config_t wrapped in PB
     * </pre>
     */
    boolean hasLegacyMotconfig();
    /**
     * <code>optional bytes legacy_motconfig = 20;</code>
     *
     * <pre>
     * emcmot_config_t wrapped in PB
     * </pre>
     */
    com.google.protobuf.ByteString getLegacyMotconfig();

    /**
     * <code>optional int32 tv_sec = 21;</code>
     *
     * <pre>
     * timestamps: as per struct timespec
     * obtain with clock_gettime(CLOCK_REALTIME, &amp;spec);
     * </pre>
     */
    boolean hasTvSec();
    /**
     * <code>optional int32 tv_sec = 21;</code>
     *
     * <pre>
     * timestamps: as per struct timespec
     * obtain with clock_gettime(CLOCK_REALTIME, &amp;spec);
     * </pre>
     */
    int getTvSec();

    /**
     * <code>optional int32 tv_nsec = 22;</code>
     */
    boolean hasTvNsec();
    /**
     * <code>optional int32 tv_nsec = 22;</code>
     */
    int getTvNsec();

    /**
     * <code>optional string topic = 23;</code>
     *
     * <pre>
     * this is for messages going over pub/sub streams and wind up in JSON frames
     * duplicating the topic here allows us to drop the topic frame
     * </pre>
     */
    boolean hasTopic();
    /**
     * <code>optional string topic = 23;</code>
     *
     * <pre>
     * this is for messages going over pub/sub streams and wind up in JSON frames
     * duplicating the topic here allows us to drop the topic frame
     * </pre>
     */
    java.lang.String getTopic();
    /**
     * <code>optional string topic = 23;</code>
     *
     * <pre>
     * this is for messages going over pub/sub streams and wind up in JSON frames
     * duplicating the topic here allows us to drop the topic frame
     * </pre>
     */
    com.google.protobuf.ByteString
        getTopicBytes();

    /**
     * <code>optional bool reply_required = 24;</code>
     *
     * <pre>
     * force a response even if OK
     * </pre>
     */
    boolean hasReplyRequired();
    /**
     * <code>optional bool reply_required = 24;</code>
     *
     * <pre>
     * force a response even if OK
     * </pre>
     */
    boolean getReplyRequired();

    /**
     * <code>optional .pb.InterpreterStateType interp_state = 25;</code>
     *
     * <pre>
     * interpreter status updates, MT_INTERP_STAT
     * </pre>
     */
    boolean hasInterpState();
    /**
     * <code>optional .pb.InterpreterStateType interp_state = 25;</code>
     *
     * <pre>
     * interpreter status updates, MT_INTERP_STAT
     * </pre>
     */
    pb.Types.InterpreterStateType getInterpState();

    /**
     * <code>optional string interp_name = 26;</code>
     */
    boolean hasInterpName();
    /**
     * <code>optional string interp_name = 26;</code>
     */
    java.lang.String getInterpName();
    /**
     * <code>optional string interp_name = 26;</code>
     */
    com.google.protobuf.ByteString
        getInterpNameBytes();

    /**
     * <code>optional int32 rsvp = 30;</code>
     *
     * <pre>
     * this is an or of bits in ReplyType:
     * </pre>
     */
    boolean hasRsvp();
    /**
     * <code>optional int32 rsvp = 30;</code>
     *
     * <pre>
     * this is an or of bits in ReplyType:
     * </pre>
     */
    int getRsvp();

    /**
     * <code>optional .pb.ContainerType in_reply_to = 33;</code>
     */
    boolean hasInReplyTo();
    /**
     * <code>optional .pb.ContainerType in_reply_to = 33;</code>
     */
    pb.Types.ContainerType getInReplyTo();

    /**
     * <code>optional .pb.RCS_STATUS rcs_status = 35;</code>
     */
    boolean hasRcsStatus();
    /**
     * <code>optional .pb.RCS_STATUS rcs_status = 35;</code>
     */
    pb.Types.RCS_STATUS getRcsStatus();

    /**
     * <code>optional .pb.StatusType status = 40;</code>
     */
    boolean hasStatus();
    /**
     * <code>optional .pb.StatusType status = 40;</code>
     */
    pb.Types.StatusType getStatus();

    /**
     * <code>optional int32 serial = 45;</code>
     *
     * <pre>
     * legacy command serials
     * </pre>
     */
    boolean hasSerial();
    /**
     * <code>optional int32 serial = 45;</code>
     *
     * <pre>
     * legacy command serials
     * </pre>
     */
    int getSerial();

    /**
     * <code>optional int32 reply_serial = 50;</code>
     *
     * <pre>
     * echoes the legacy command serial
     * </pre>
     */
    boolean hasReplySerial();
    /**
     * <code>optional int32 reply_serial = 50;</code>
     *
     * <pre>
     * echoes the legacy command serial
     * </pre>
     */
    int getReplySerial();

    /**
     * <code>optional int32 ticket = 55;</code>
     *
     * <pre>
     * command serials
     * </pre>
     */
    boolean hasTicket();
    /**
     * <code>optional int32 ticket = 55;</code>
     *
     * <pre>
     * command serials
     * </pre>
     */
    int getTicket();

    /**
     * <code>optional int32 reply_ticket = 60;</code>
     *
     * <pre>
     * echoes the legacy command serial
     * </pre>
     */
    boolean hasReplyTicket();
    /**
     * <code>optional int32 reply_ticket = 60;</code>
     *
     * <pre>
     * echoes the legacy command serial
     * </pre>
     */
    int getReplyTicket();

    /**
     * <code>optional int32 sequence = 62;</code>
     *
     * <pre>
     * Credit based flow control: http://hintjens.com/blog:15
     * </pre>
     */
    boolean hasSequence();
    /**
     * <code>optional int32 sequence = 62;</code>
     *
     * <pre>
     * Credit based flow control: http://hintjens.com/blog:15
     * </pre>
     */
    int getSequence();

    /**
     * <code>optional int32 credit = 65;</code>
     *
     * <pre>
     * updated by consumer
     * </pre>
     */
    boolean hasCredit();
    /**
     * <code>optional int32 credit = 65;</code>
     *
     * <pre>
     * updated by consumer
     * </pre>
     */
    int getCredit();

    /**
     * <code>optional int32 line_number = 66;</code>
     *
     * <pre>
     * legacy line number as conveyed on interplist
     * to be replaced by source context
     * </pre>
     */
    boolean hasLineNumber();
    /**
     * <code>optional int32 line_number = 66;</code>
     *
     * <pre>
     * legacy line number as conveyed on interplist
     * to be replaced by source context
     * </pre>
     */
    int getLineNumber();

    /**
     * <code>optional string name = 67;</code>
     *
     * <pre>
     * used with MT_MESSAGEBUS_NO_DESTINATION
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 67;</code>
     *
     * <pre>
     * used with MT_MESSAGEBUS_NO_DESTINATION
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 67;</code>
     *
     * <pre>
     * used with MT_MESSAGEBUS_NO_DESTINATION
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated string note = 68;</code>
     *
     * <pre>
     * easy tack-on for debugging
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getNoteList();
    /**
     * <code>repeated string note = 68;</code>
     *
     * <pre>
     * easy tack-on for debugging
     * </pre>
     */
    int getNoteCount();
    /**
     * <code>repeated string note = 68;</code>
     *
     * <pre>
     * easy tack-on for debugging
     * </pre>
     */
    java.lang.String getNote(int index);
    /**
     * <code>repeated string note = 68;</code>
     *
     * <pre>
     * easy tack-on for debugging
     * </pre>
     */
    com.google.protobuf.ByteString
        getNoteBytes(int index);

    /**
     * <code>optional int32 retcode = 69;</code>
     *
     * <pre>
     * all purpose integer return code
     * </pre>
     */
    boolean hasRetcode();
    /**
     * <code>optional int32 retcode = 69;</code>
     *
     * <pre>
     * all purpose integer return code
     * </pre>
     */
    int getRetcode();

    /**
     * <code>optional bytes uuid = 72;</code>
     *
     * <pre>
     * uuid helps distinguish server instances
     * </pre>
     */
    boolean hasUuid();
    /**
     * <code>optional bytes uuid = 72;</code>
     *
     * <pre>
     * uuid helps distinguish server instances
     * </pre>
     */
    com.google.protobuf.ByteString getUuid();

    /**
     * <code>optional bool trace = 75;</code>
     *
     * <pre>
     * log from intermediaries
     * </pre>
     */
    boolean hasTrace();
    /**
     * <code>optional bool trace = 75;</code>
     *
     * <pre>
     * log from intermediaries
     * </pre>
     */
    boolean getTrace();

    /**
     * <code>optional int32 instance = 77;</code>
     *
     * <pre>
     * RTAPI instance if nonzero
     * </pre>
     */
    boolean hasInstance();
    /**
     * <code>optional int32 instance = 77;</code>
     *
     * <pre>
     * RTAPI instance if nonzero
     * </pre>
     */
    int getInstance();

    /**
     * <code>repeated .pb.Value value = 85;</code>
     *
     * <pre>
     * generalized polymorphic argument list
     * </pre>
     */
    java.util.List<pb.ValueOuterClass.Value> 
        getValueList();
    /**
     * <code>repeated .pb.Value value = 85;</code>
     *
     * <pre>
     * generalized polymorphic argument list
     * </pre>
     */
    pb.ValueOuterClass.Value getValue(int index);
    /**
     * <code>repeated .pb.Value value = 85;</code>
     *
     * <pre>
     * generalized polymorphic argument list
     * </pre>
     */
    int getValueCount();
    /**
     * <code>repeated .pb.Value value = 85;</code>
     *
     * <pre>
     * generalized polymorphic argument list
     * </pre>
     */
    java.util.List<? extends pb.ValueOuterClass.ValueOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .pb.Value value = 85;</code>
     *
     * <pre>
     * generalized polymorphic argument list
     * </pre>
     */
    pb.ValueOuterClass.ValueOrBuilder getValueOrBuilder(
        int index);

    /**
     * <code>optional .pb.RTAPICommand rtapicmd = 86;</code>
     */
    boolean hasRtapicmd();
    /**
     * <code>optional .pb.RTAPICommand rtapicmd = 86;</code>
     */
    pb.Rtapicommand.RTAPICommand getRtapicmd();
    /**
     * <code>optional .pb.RTAPICommand rtapicmd = 86;</code>
     */
    pb.Rtapicommand.RTAPICommandOrBuilder getRtapicmdOrBuilder();

    /**
     * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
     *
     * <pre>
     * a reply may carry several service announcements:
     * </pre>
     */
    java.util.List<pb.Object.ServiceAnnouncement> 
        getServiceAnnouncementList();
    /**
     * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
     *
     * <pre>
     * a reply may carry several service announcements:
     * </pre>
     */
    pb.Object.ServiceAnnouncement getServiceAnnouncement(int index);
    /**
     * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
     *
     * <pre>
     * a reply may carry several service announcements:
     * </pre>
     */
    int getServiceAnnouncementCount();
    /**
     * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
     *
     * <pre>
     * a reply may carry several service announcements:
     * </pre>
     */
    java.util.List<? extends pb.Object.ServiceAnnouncementOrBuilder> 
        getServiceAnnouncementOrBuilderList();
    /**
     * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
     *
     * <pre>
     * a reply may carry several service announcements:
     * </pre>
     */
    pb.Object.ServiceAnnouncementOrBuilder getServiceAnnouncementOrBuilder(
        int index);

    /**
     * <code>repeated .pb.Component comp = 100;</code>
     *
     * <pre>
     * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
     * </pre>
     */
    java.util.List<pb.Object.Component> 
        getCompList();
    /**
     * <code>repeated .pb.Component comp = 100;</code>
     *
     * <pre>
     * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
     * </pre>
     */
    pb.Object.Component getComp(int index);
    /**
     * <code>repeated .pb.Component comp = 100;</code>
     *
     * <pre>
     * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
     * </pre>
     */
    int getCompCount();
    /**
     * <code>repeated .pb.Component comp = 100;</code>
     *
     * <pre>
     * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
     * </pre>
     */
    java.util.List<? extends pb.Object.ComponentOrBuilder> 
        getCompOrBuilderList();
    /**
     * <code>repeated .pb.Component comp = 100;</code>
     *
     * <pre>
     * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
     * </pre>
     */
    pb.Object.ComponentOrBuilder getCompOrBuilder(
        int index);

    /**
     * <code>repeated .pb.Pin pin = 2;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    java.util.List<pb.Object.Pin> 
        getPinList();
    /**
     * <code>repeated .pb.Pin pin = 2;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    pb.Object.Pin getPin(int index);
    /**
     * <code>repeated .pb.Pin pin = 2;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    int getPinCount();
    /**
     * <code>repeated .pb.Pin pin = 2;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    java.util.List<? extends pb.Object.PinOrBuilder> 
        getPinOrBuilderList();
    /**
     * <code>repeated .pb.Pin pin = 2;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    pb.Object.PinOrBuilder getPinOrBuilder(
        int index);

    /**
     * <code>repeated .pb.Signal signal = 3;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    java.util.List<pb.Object.Signal> 
        getSignalList();
    /**
     * <code>repeated .pb.Signal signal = 3;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    pb.Object.Signal getSignal(int index);
    /**
     * <code>repeated .pb.Signal signal = 3;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    int getSignalCount();
    /**
     * <code>repeated .pb.Signal signal = 3;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    java.util.List<? extends pb.Object.SignalOrBuilder> 
        getSignalOrBuilderList();
    /**
     * <code>repeated .pb.Signal signal = 3;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    pb.Object.SignalOrBuilder getSignalOrBuilder(
        int index);

    /**
     * <code>repeated .pb.Param param = 103;</code>
     */
    java.util.List<pb.Object.Param> 
        getParamList();
    /**
     * <code>repeated .pb.Param param = 103;</code>
     */
    pb.Object.Param getParam(int index);
    /**
     * <code>repeated .pb.Param param = 103;</code>
     */
    int getParamCount();
    /**
     * <code>repeated .pb.Param param = 103;</code>
     */
    java.util.List<? extends pb.Object.ParamOrBuilder> 
        getParamOrBuilderList();
    /**
     * <code>repeated .pb.Param param = 103;</code>
     */
    pb.Object.ParamOrBuilder getParamOrBuilder(
        int index);

    /**
     * <code>repeated .pb.Thread thread = 104;</code>
     */
    java.util.List<pb.Object.Thread> 
        getThreadList();
    /**
     * <code>repeated .pb.Thread thread = 104;</code>
     */
    pb.Object.Thread getThread(int index);
    /**
     * <code>repeated .pb.Thread thread = 104;</code>
     */
    int getThreadCount();
    /**
     * <code>repeated .pb.Thread thread = 104;</code>
     */
    java.util.List<? extends pb.Object.ThreadOrBuilder> 
        getThreadOrBuilderList();
    /**
     * <code>repeated .pb.Thread thread = 104;</code>
     */
    pb.Object.ThreadOrBuilder getThreadOrBuilder(
        int index);

    /**
     * <code>repeated .pb.Ring ring = 105;</code>
     */
    java.util.List<pb.Object.Ring> 
        getRingList();
    /**
     * <code>repeated .pb.Ring ring = 105;</code>
     */
    pb.Object.Ring getRing(int index);
    /**
     * <code>repeated .pb.Ring ring = 105;</code>
     */
    int getRingCount();
    /**
     * <code>repeated .pb.Ring ring = 105;</code>
     */
    java.util.List<? extends pb.Object.RingOrBuilder> 
        getRingOrBuilderList();
    /**
     * <code>repeated .pb.Ring ring = 105;</code>
     */
    pb.Object.RingOrBuilder getRingOrBuilder(
        int index);

    /**
     * <code>repeated .pb.Group group = 106;</code>
     */
    java.util.List<pb.Object.Group> 
        getGroupList();
    /**
     * <code>repeated .pb.Group group = 106;</code>
     */
    pb.Object.Group getGroup(int index);
    /**
     * <code>repeated .pb.Group group = 106;</code>
     */
    int getGroupCount();
    /**
     * <code>repeated .pb.Group group = 106;</code>
     */
    java.util.List<? extends pb.Object.GroupOrBuilder> 
        getGroupOrBuilderList();
    /**
     * <code>repeated .pb.Group group = 106;</code>
     */
    pb.Object.GroupOrBuilder getGroupOrBuilder(
        int index);

    /**
     * <code>repeated .pb.Member member = 107;</code>
     */
    java.util.List<pb.Object.Member> 
        getMemberList();
    /**
     * <code>repeated .pb.Member member = 107;</code>
     */
    pb.Object.Member getMember(int index);
    /**
     * <code>repeated .pb.Member member = 107;</code>
     */
    int getMemberCount();
    /**
     * <code>repeated .pb.Member member = 107;</code>
     */
    java.util.List<? extends pb.Object.MemberOrBuilder> 
        getMemberOrBuilderList();
    /**
     * <code>repeated .pb.Member member = 107;</code>
     */
    pb.Object.MemberOrBuilder getMemberOrBuilder(
        int index);

    /**
     * <code>repeated .pb.Function function = 108;</code>
     */
    java.util.List<pb.Object.Function> 
        getFunctionList();
    /**
     * <code>repeated .pb.Function function = 108;</code>
     */
    pb.Object.Function getFunction(int index);
    /**
     * <code>repeated .pb.Function function = 108;</code>
     */
    int getFunctionCount();
    /**
     * <code>repeated .pb.Function function = 108;</code>
     */
    java.util.List<? extends pb.Object.FunctionOrBuilder> 
        getFunctionOrBuilderList();
    /**
     * <code>repeated .pb.Function function = 108;</code>
     */
    pb.Object.FunctionOrBuilder getFunctionOrBuilder(
        int index);

    /**
     * <code>optional .pb.ProtocolParameters pparams = 109;</code>
     */
    boolean hasPparams();
    /**
     * <code>optional .pb.ProtocolParameters pparams = 109;</code>
     */
    pb.Object.ProtocolParameters getPparams();
    /**
     * <code>optional .pb.ProtocolParameters pparams = 109;</code>
     */
    pb.Object.ProtocolParametersOrBuilder getPparamsOrBuilder();

    /**
     * <code>repeated .pb.Vtable vtable = 110;</code>
     */
    java.util.List<pb.Object.Vtable> 
        getVtableList();
    /**
     * <code>repeated .pb.Vtable vtable = 110;</code>
     */
    pb.Object.Vtable getVtable(int index);
    /**
     * <code>repeated .pb.Vtable vtable = 110;</code>
     */
    int getVtableCount();
    /**
     * <code>repeated .pb.Vtable vtable = 110;</code>
     */
    java.util.List<? extends pb.Object.VtableOrBuilder> 
        getVtableOrBuilderList();
    /**
     * <code>repeated .pb.Vtable vtable = 110;</code>
     */
    pb.Object.VtableOrBuilder getVtableOrBuilder(
        int index);

    /**
     * <code>repeated .pb.Inst inst = 111;</code>
     */
    java.util.List<pb.Object.Inst> 
        getInstList();
    /**
     * <code>repeated .pb.Inst inst = 111;</code>
     */
    pb.Object.Inst getInst(int index);
    /**
     * <code>repeated .pb.Inst inst = 111;</code>
     */
    int getInstCount();
    /**
     * <code>repeated .pb.Inst inst = 111;</code>
     */
    java.util.List<? extends pb.Object.InstOrBuilder> 
        getInstOrBuilderList();
    /**
     * <code>repeated .pb.Inst inst = 111;</code>
     */
    pb.Object.InstOrBuilder getInstOrBuilder(
        int index);

    /**
     * <code>repeated .pb.Application app = 120;</code>
     *
     * <pre>
     * the app field is  included as a reply to
     * a MT_LIST_APPLICATIONS and
     * MT_RETRIEVE_APPLICATION message
     * </pre>
     */
    java.util.List<pb.Config.Application> 
        getAppList();
    /**
     * <code>repeated .pb.Application app = 120;</code>
     *
     * <pre>
     * the app field is  included as a reply to
     * a MT_LIST_APPLICATIONS and
     * MT_RETRIEVE_APPLICATION message
     * </pre>
     */
    pb.Config.Application getApp(int index);
    /**
     * <code>repeated .pb.Application app = 120;</code>
     *
     * <pre>
     * the app field is  included as a reply to
     * a MT_LIST_APPLICATIONS and
     * MT_RETRIEVE_APPLICATION message
     * </pre>
     */
    int getAppCount();
    /**
     * <code>repeated .pb.Application app = 120;</code>
     *
     * <pre>
     * the app field is  included as a reply to
     * a MT_LIST_APPLICATIONS and
     * MT_RETRIEVE_APPLICATION message
     * </pre>
     */
    java.util.List<? extends pb.Config.ApplicationOrBuilder> 
        getAppOrBuilderList();
    /**
     * <code>repeated .pb.Application app = 120;</code>
     *
     * <pre>
     * the app field is  included as a reply to
     * a MT_LIST_APPLICATIONS and
     * MT_RETRIEVE_APPLICATION message
     * </pre>
     */
    pb.Config.ApplicationOrBuilder getAppOrBuilder(
        int index);

    /**
     * <code>repeated .pb.Launcher launcher = 130;</code>
     *
     * <pre>
     * the launcher field is reported by
     * a MT_LAUNCHER_FULL_UPDATE
     * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
     * </pre>
     */
    java.util.List<pb.Config.Launcher> 
        getLauncherList();
    /**
     * <code>repeated .pb.Launcher launcher = 130;</code>
     *
     * <pre>
     * the launcher field is reported by
     * a MT_LAUNCHER_FULL_UPDATE
     * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
     * </pre>
     */
    pb.Config.Launcher getLauncher(int index);
    /**
     * <code>repeated .pb.Launcher launcher = 130;</code>
     *
     * <pre>
     * the launcher field is reported by
     * a MT_LAUNCHER_FULL_UPDATE
     * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
     * </pre>
     */
    int getLauncherCount();
    /**
     * <code>repeated .pb.Launcher launcher = 130;</code>
     *
     * <pre>
     * the launcher field is reported by
     * a MT_LAUNCHER_FULL_UPDATE
     * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
     * </pre>
     */
    java.util.List<? extends pb.Config.LauncherOrBuilder> 
        getLauncherOrBuilderList();
    /**
     * <code>repeated .pb.Launcher launcher = 130;</code>
     *
     * <pre>
     * the launcher field is reported by
     * a MT_LAUNCHER_FULL_UPDATE
     * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
     * </pre>
     */
    pb.Config.LauncherOrBuilder getLauncherOrBuilder(
        int index);

    /**
     * <code>optional int32 index = 131;</code>
     */
    boolean hasIndex();
    /**
     * <code>optional int32 index = 131;</code>
     */
    int getIndex();

    /**
     * <code>optional .pb.LogMessage log_message = 87;</code>
     *
     * <pre>
     * infrequent compound messages
     *optional bytes         wou            = 160;  // Arais Wishbone-over-USB
     * </pre>
     */
    boolean hasLogMessage();
    /**
     * <code>optional .pb.LogMessage log_message = 87;</code>
     *
     * <pre>
     * infrequent compound messages
     *optional bytes         wou            = 160;  // Arais Wishbone-over-USB
     * </pre>
     */
    pb.Log.LogMessage getLogMessage();
    /**
     * <code>optional .pb.LogMessage log_message = 87;</code>
     *
     * <pre>
     * infrequent compound messages
     *optional bytes         wou            = 160;  // Arais Wishbone-over-USB
     * </pre>
     */
    pb.Log.LogMessageOrBuilder getLogMessageOrBuilder();

    /**
     * <code>optional .pb.TaskPlanExecute tpexecute = 200;</code>
     *
     * <pre>
     * taskplan (interpreter command) messages
     * </pre>
     */
    boolean hasTpexecute();
    /**
     * <code>optional .pb.TaskPlanExecute tpexecute = 200;</code>
     *
     * <pre>
     * taskplan (interpreter command) messages
     * </pre>
     */
    pb.Task.TaskPlanExecute getTpexecute();
    /**
     * <code>optional .pb.TaskPlanExecute tpexecute = 200;</code>
     *
     * <pre>
     * taskplan (interpreter command) messages
     * </pre>
     */
    pb.Task.TaskPlanExecuteOrBuilder getTpexecuteOrBuilder();

    /**
     * <code>optional .pb.TaskPlanBlockDelete tpblockdelete = 201;</code>
     */
    boolean hasTpblockdelete();
    /**
     * <code>optional .pb.TaskPlanBlockDelete tpblockdelete = 201;</code>
     */
    pb.Task.TaskPlanBlockDelete getTpblockdelete();
    /**
     * <code>optional .pb.TaskPlanBlockDelete tpblockdelete = 201;</code>
     */
    pb.Task.TaskPlanBlockDeleteOrBuilder getTpblockdeleteOrBuilder();

    /**
     * <code>optional .pb.TaskPlanOptionalStop tpoptionalstop = 202;</code>
     */
    boolean hasTpoptionalstop();
    /**
     * <code>optional .pb.TaskPlanOptionalStop tpoptionalstop = 202;</code>
     */
    pb.Task.TaskPlanOptionalStop getTpoptionalstop();
    /**
     * <code>optional .pb.TaskPlanOptionalStop tpoptionalstop = 202;</code>
     */
    pb.Task.TaskPlanOptionalStopOrBuilder getTpoptionalstopOrBuilder();

    /**
     * <code>optional .pb.TaskPlanOpen tpopen = 203;</code>
     */
    boolean hasTpopen();
    /**
     * <code>optional .pb.TaskPlanOpen tpopen = 203;</code>
     */
    pb.Task.TaskPlanOpen getTpopen();
    /**
     * <code>optional .pb.TaskPlanOpen tpopen = 203;</code>
     */
    pb.Task.TaskPlanOpenOrBuilder getTpopenOrBuilder();

    /**
     * <code>optional .pb.TaskPlanReply taskplan_reply = 210;</code>
     *
     * <pre>
     * interpreter reply
     * </pre>
     */
    boolean hasTaskplanReply();
    /**
     * <code>optional .pb.TaskPlanReply taskplan_reply = 210;</code>
     *
     * <pre>
     * interpreter reply
     * </pre>
     */
    pb.Task.TaskPlanReply getTaskplanReply();
    /**
     * <code>optional .pb.TaskPlanReply taskplan_reply = 210;</code>
     *
     * <pre>
     * interpreter reply
     * </pre>
     */
    pb.Task.TaskPlanReplyOrBuilder getTaskplanReplyOrBuilder();

    /**
     * <code>optional .pb.Emc_Traj_Set_G5x traj_set_g5x = 300;</code>
     *
     * <pre>
     * canon messages
     * </pre>
     */
    boolean hasTrajSetG5X();
    /**
     * <code>optional .pb.Emc_Traj_Set_G5x traj_set_g5x = 300;</code>
     *
     * <pre>
     * canon messages
     * </pre>
     */
    pb.Canon.Emc_Traj_Set_G5x getTrajSetG5X();
    /**
     * <code>optional .pb.Emc_Traj_Set_G5x traj_set_g5x = 300;</code>
     *
     * <pre>
     * canon messages
     * </pre>
     */
    pb.Canon.Emc_Traj_Set_G5xOrBuilder getTrajSetG5XOrBuilder();

    /**
     * <code>optional .pb.Emc_Traj_Set_G92 traj_set_g92 = 310;</code>
     */
    boolean hasTrajSetG92();
    /**
     * <code>optional .pb.Emc_Traj_Set_G92 traj_set_g92 = 310;</code>
     */
    pb.Canon.Emc_Traj_Set_G92 getTrajSetG92();
    /**
     * <code>optional .pb.Emc_Traj_Set_G92 traj_set_g92 = 310;</code>
     */
    pb.Canon.Emc_Traj_Set_G92OrBuilder getTrajSetG92OrBuilder();

    /**
     * <code>optional .pb.Emc_Traj_Set_Rotation traj_set_rotation = 320;</code>
     */
    boolean hasTrajSetRotation();
    /**
     * <code>optional .pb.Emc_Traj_Set_Rotation traj_set_rotation = 320;</code>
     */
    pb.Canon.Emc_Traj_Set_Rotation getTrajSetRotation();
    /**
     * <code>optional .pb.Emc_Traj_Set_Rotation traj_set_rotation = 320;</code>
     */
    pb.Canon.Emc_Traj_Set_RotationOrBuilder getTrajSetRotationOrBuilder();

    /**
     * <code>optional .pb.Emc_Traj_Linear_Move traj_linear_move = 330;</code>
     */
    boolean hasTrajLinearMove();
    /**
     * <code>optional .pb.Emc_Traj_Linear_Move traj_linear_move = 330;</code>
     */
    pb.Canon.Emc_Traj_Linear_Move getTrajLinearMove();
    /**
     * <code>optional .pb.Emc_Traj_Linear_Move traj_linear_move = 330;</code>
     */
    pb.Canon.Emc_Traj_Linear_MoveOrBuilder getTrajLinearMoveOrBuilder();

    /**
     * <code>optional .pb.Emc_Traj_Probe traj_probe = 340;</code>
     */
    boolean hasTrajProbe();
    /**
     * <code>optional .pb.Emc_Traj_Probe traj_probe = 340;</code>
     */
    pb.Canon.Emc_Traj_Probe getTrajProbe();
    /**
     * <code>optional .pb.Emc_Traj_Probe traj_probe = 340;</code>
     */
    pb.Canon.Emc_Traj_ProbeOrBuilder getTrajProbeOrBuilder();

    /**
     * <code>optional .pb.Emc_Traj_Circular_Move traj_circular_move = 350;</code>
     */
    boolean hasTrajCircularMove();
    /**
     * <code>optional .pb.Emc_Traj_Circular_Move traj_circular_move = 350;</code>
     */
    pb.Canon.Emc_Traj_Circular_Move getTrajCircularMove();
    /**
     * <code>optional .pb.Emc_Traj_Circular_Move traj_circular_move = 350;</code>
     */
    pb.Canon.Emc_Traj_Circular_MoveOrBuilder getTrajCircularMoveOrBuilder();

    /**
     * <code>optional .pb.Emc_Traj_Rigid_Tap traj_rigid_tap = 360;</code>
     */
    boolean hasTrajRigidTap();
    /**
     * <code>optional .pb.Emc_Traj_Rigid_Tap traj_rigid_tap = 360;</code>
     */
    pb.Canon.Emc_Traj_Rigid_Tap getTrajRigidTap();
    /**
     * <code>optional .pb.Emc_Traj_Rigid_Tap traj_rigid_tap = 360;</code>
     */
    pb.Canon.Emc_Traj_Rigid_TapOrBuilder getTrajRigidTapOrBuilder();

    /**
     * <code>optional .pb.Emc_Traj_Set_Term_Cond traj_set_term_cond = 370;</code>
     */
    boolean hasTrajSetTermCond();
    /**
     * <code>optional .pb.Emc_Traj_Set_Term_Cond traj_set_term_cond = 370;</code>
     */
    pb.Canon.Emc_Traj_Set_Term_Cond getTrajSetTermCond();
    /**
     * <code>optional .pb.Emc_Traj_Set_Term_Cond traj_set_term_cond = 370;</code>
     */
    pb.Canon.Emc_Traj_Set_Term_CondOrBuilder getTrajSetTermCondOrBuilder();

    /**
     * <code>optional .pb.Emc_Traj_Set_Spindlesync traj_set_spindlesync = 380;</code>
     */
    boolean hasTrajSetSpindlesync();
    /**
     * <code>optional .pb.Emc_Traj_Set_Spindlesync traj_set_spindlesync = 380;</code>
     */
    pb.Canon.Emc_Traj_Set_Spindlesync getTrajSetSpindlesync();
    /**
     * <code>optional .pb.Emc_Traj_Set_Spindlesync traj_set_spindlesync = 380;</code>
     */
    pb.Canon.Emc_Traj_Set_SpindlesyncOrBuilder getTrajSetSpindlesyncOrBuilder();

    /**
     * <code>optional .pb.Emc_Traj_Delay traj_delay = 390;</code>
     */
    boolean hasTrajDelay();
    /**
     * <code>optional .pb.Emc_Traj_Delay traj_delay = 390;</code>
     */
    pb.Canon.Emc_Traj_Delay getTrajDelay();
    /**
     * <code>optional .pb.Emc_Traj_Delay traj_delay = 390;</code>
     */
    pb.Canon.Emc_Traj_DelayOrBuilder getTrajDelayOrBuilder();

    /**
     * <code>optional .pb.Emc_Spindle_On spindle_on = 400;</code>
     */
    boolean hasSpindleOn();
    /**
     * <code>optional .pb.Emc_Spindle_On spindle_on = 400;</code>
     */
    pb.Canon.Emc_Spindle_On getSpindleOn();
    /**
     * <code>optional .pb.Emc_Spindle_On spindle_on = 400;</code>
     */
    pb.Canon.Emc_Spindle_OnOrBuilder getSpindleOnOrBuilder();

    /**
     * <code>optional .pb.Emc_Spindle_Speed spindle_speed = 410;</code>
     */
    boolean hasSpindleSpeed();
    /**
     * <code>optional .pb.Emc_Spindle_Speed spindle_speed = 410;</code>
     */
    pb.Canon.Emc_Spindle_Speed getSpindleSpeed();
    /**
     * <code>optional .pb.Emc_Spindle_Speed spindle_speed = 410;</code>
     */
    pb.Canon.Emc_Spindle_SpeedOrBuilder getSpindleSpeedOrBuilder();

    /**
     * <code>optional .pb.Emc_Spindle_Orient spindle_orient = 420;</code>
     */
    boolean hasSpindleOrient();
    /**
     * <code>optional .pb.Emc_Spindle_Orient spindle_orient = 420;</code>
     */
    pb.Canon.Emc_Spindle_Orient getSpindleOrient();
    /**
     * <code>optional .pb.Emc_Spindle_Orient spindle_orient = 420;</code>
     */
    pb.Canon.Emc_Spindle_OrientOrBuilder getSpindleOrientOrBuilder();

    /**
     * <code>optional .pb.Emc_Spindle_Wait_Orient_Complete spindle_wait_orient_complete = 430;</code>
     */
    boolean hasSpindleWaitOrientComplete();
    /**
     * <code>optional .pb.Emc_Spindle_Wait_Orient_Complete spindle_wait_orient_complete = 430;</code>
     */
    pb.Canon.Emc_Spindle_Wait_Orient_Complete getSpindleWaitOrientComplete();
    /**
     * <code>optional .pb.Emc_Spindle_Wait_Orient_Complete spindle_wait_orient_complete = 430;</code>
     */
    pb.Canon.Emc_Spindle_Wait_Orient_CompleteOrBuilder getSpindleWaitOrientCompleteOrBuilder();

    /**
     * <code>optional .pb.Emc_Tool_Set_Offset tool_set_offet = 440;</code>
     */
    boolean hasToolSetOffet();
    /**
     * <code>optional .pb.Emc_Tool_Set_Offset tool_set_offet = 440;</code>
     */
    pb.Canon.Emc_Tool_Set_Offset getToolSetOffet();
    /**
     * <code>optional .pb.Emc_Tool_Set_Offset tool_set_offet = 440;</code>
     */
    pb.Canon.Emc_Tool_Set_OffsetOrBuilder getToolSetOffetOrBuilder();

    /**
     * <code>optional .pb.Emc_Traj_Set_Offset traj_set_offset = 450;</code>
     */
    boolean hasTrajSetOffset();
    /**
     * <code>optional .pb.Emc_Traj_Set_Offset traj_set_offset = 450;</code>
     */
    pb.Canon.Emc_Traj_Set_Offset getTrajSetOffset();
    /**
     * <code>optional .pb.Emc_Traj_Set_Offset traj_set_offset = 450;</code>
     */
    pb.Canon.Emc_Traj_Set_OffsetOrBuilder getTrajSetOffsetOrBuilder();

    /**
     * <code>optional .pb.Emc_Tool_Prepare tool_prepare = 460;</code>
     */
    boolean hasToolPrepare();
    /**
     * <code>optional .pb.Emc_Tool_Prepare tool_prepare = 460;</code>
     */
    pb.Canon.Emc_Tool_Prepare getToolPrepare();
    /**
     * <code>optional .pb.Emc_Tool_Prepare tool_prepare = 460;</code>
     */
    pb.Canon.Emc_Tool_PrepareOrBuilder getToolPrepareOrBuilder();

    /**
     * <code>optional .pb.Emc_Tool_Set_Number tool_set_number = 470;</code>
     */
    boolean hasToolSetNumber();
    /**
     * <code>optional .pb.Emc_Tool_Set_Number tool_set_number = 470;</code>
     */
    pb.Canon.Emc_Tool_Set_Number getToolSetNumber();
    /**
     * <code>optional .pb.Emc_Tool_Set_Number tool_set_number = 470;</code>
     */
    pb.Canon.Emc_Tool_Set_NumberOrBuilder getToolSetNumberOrBuilder();

    /**
     * <code>optional .pb.Emc_Traj_Set_Fo_Enable traj_set_fo_enable = 480;</code>
     */
    boolean hasTrajSetFoEnable();
    /**
     * <code>optional .pb.Emc_Traj_Set_Fo_Enable traj_set_fo_enable = 480;</code>
     */
    pb.Canon.Emc_Traj_Set_Fo_Enable getTrajSetFoEnable();
    /**
     * <code>optional .pb.Emc_Traj_Set_Fo_Enable traj_set_fo_enable = 480;</code>
     */
    pb.Canon.Emc_Traj_Set_Fo_EnableOrBuilder getTrajSetFoEnableOrBuilder();

    /**
     * <code>optional .pb.Emc_Traj_Set_So_Enable traj_set_so_enable = 490;</code>
     */
    boolean hasTrajSetSoEnable();
    /**
     * <code>optional .pb.Emc_Traj_Set_So_Enable traj_set_so_enable = 490;</code>
     */
    pb.Canon.Emc_Traj_Set_So_Enable getTrajSetSoEnable();
    /**
     * <code>optional .pb.Emc_Traj_Set_So_Enable traj_set_so_enable = 490;</code>
     */
    pb.Canon.Emc_Traj_Set_So_EnableOrBuilder getTrajSetSoEnableOrBuilder();

    /**
     * <code>optional .pb.Emc_Traj_Set_Fh_Enable traj_set_fh_enable = 500;</code>
     */
    boolean hasTrajSetFhEnable();
    /**
     * <code>optional .pb.Emc_Traj_Set_Fh_Enable traj_set_fh_enable = 500;</code>
     */
    pb.Canon.Emc_Traj_Set_Fh_Enable getTrajSetFhEnable();
    /**
     * <code>optional .pb.Emc_Traj_Set_Fh_Enable traj_set_fh_enable = 500;</code>
     */
    pb.Canon.Emc_Traj_Set_Fh_EnableOrBuilder getTrajSetFhEnableOrBuilder();

    /**
     * <code>optional .pb.Emc_Motion_Adaptive motion_adaptive = 510;</code>
     */
    boolean hasMotionAdaptive();
    /**
     * <code>optional .pb.Emc_Motion_Adaptive motion_adaptive = 510;</code>
     */
    pb.Canon.Emc_Motion_Adaptive getMotionAdaptive();
    /**
     * <code>optional .pb.Emc_Motion_Adaptive motion_adaptive = 510;</code>
     */
    pb.Canon.Emc_Motion_AdaptiveOrBuilder getMotionAdaptiveOrBuilder();

    /**
     * <code>optional .pb.Emc_Operator_Display operator_display = 520;</code>
     */
    boolean hasOperatorDisplay();
    /**
     * <code>optional .pb.Emc_Operator_Display operator_display = 520;</code>
     */
    pb.Canon.Emc_Operator_Display getOperatorDisplay();
    /**
     * <code>optional .pb.Emc_Operator_Display operator_display = 520;</code>
     */
    pb.Canon.Emc_Operator_DisplayOrBuilder getOperatorDisplayOrBuilder();

    /**
     * <code>optional .pb.Emc_Operator_Text operator_text = 530;</code>
     */
    boolean hasOperatorText();
    /**
     * <code>optional .pb.Emc_Operator_Text operator_text = 530;</code>
     */
    pb.Canon.Emc_Operator_Text getOperatorText();
    /**
     * <code>optional .pb.Emc_Operator_Text operator_text = 530;</code>
     */
    pb.Canon.Emc_Operator_TextOrBuilder getOperatorTextOrBuilder();

    /**
     * <code>optional .pb.Emc_Operator_Error operator_error = 540;</code>
     */
    boolean hasOperatorError();
    /**
     * <code>optional .pb.Emc_Operator_Error operator_error = 540;</code>
     */
    pb.Canon.Emc_Operator_Error getOperatorError();
    /**
     * <code>optional .pb.Emc_Operator_Error operator_error = 540;</code>
     */
    pb.Canon.Emc_Operator_ErrorOrBuilder getOperatorErrorOrBuilder();

    /**
     * <code>optional .pb.Emc_Motion_Set_Dout motion_set_dout = 550;</code>
     */
    boolean hasMotionSetDout();
    /**
     * <code>optional .pb.Emc_Motion_Set_Dout motion_set_dout = 550;</code>
     */
    pb.Canon.Emc_Motion_Set_Dout getMotionSetDout();
    /**
     * <code>optional .pb.Emc_Motion_Set_Dout motion_set_dout = 550;</code>
     */
    pb.Canon.Emc_Motion_Set_DoutOrBuilder getMotionSetDoutOrBuilder();

    /**
     * <code>optional .pb.Emc_Motion_Set_Aout motion_set_aout = 560;</code>
     */
    boolean hasMotionSetAout();
    /**
     * <code>optional .pb.Emc_Motion_Set_Aout motion_set_aout = 560;</code>
     */
    pb.Canon.Emc_Motion_Set_Aout getMotionSetAout();
    /**
     * <code>optional .pb.Emc_Motion_Set_Aout motion_set_aout = 560;</code>
     */
    pb.Canon.Emc_Motion_Set_AoutOrBuilder getMotionSetAoutOrBuilder();

    /**
     * <code>optional .pb.Emc_Aux_Input_Wait aux_input_wait = 570;</code>
     */
    boolean hasAuxInputWait();
    /**
     * <code>optional .pb.Emc_Aux_Input_Wait aux_input_wait = 570;</code>
     */
    pb.Canon.Emc_Aux_Input_Wait getAuxInputWait();
    /**
     * <code>optional .pb.Emc_Aux_Input_Wait aux_input_wait = 570;</code>
     */
    pb.Canon.Emc_Aux_Input_WaitOrBuilder getAuxInputWaitOrBuilder();

    /**
     * <code>optional .pb.Emc_Exec_Plugin_Ca1l exec_plugin_call = 580;</code>
     */
    boolean hasExecPluginCall();
    /**
     * <code>optional .pb.Emc_Exec_Plugin_Ca1l exec_plugin_call = 580;</code>
     */
    pb.Canon.Emc_Exec_Plugin_Ca1l getExecPluginCall();
    /**
     * <code>optional .pb.Emc_Exec_Plugin_Ca1l exec_plugin_call = 580;</code>
     */
    pb.Canon.Emc_Exec_Plugin_Ca1lOrBuilder getExecPluginCallOrBuilder();

    /**
     * <code>optional .pb.Emc_Io_Plugin_Call io_plugin_call = 590;</code>
     */
    boolean hasIoPluginCall();
    /**
     * <code>optional .pb.Emc_Io_Plugin_Call io_plugin_call = 590;</code>
     */
    pb.Canon.Emc_Io_Plugin_Call getIoPluginCall();
    /**
     * <code>optional .pb.Emc_Io_Plugin_Call io_plugin_call = 590;</code>
     */
    pb.Canon.Emc_Io_Plugin_CallOrBuilder getIoPluginCallOrBuilder();

    /**
     * <code>optional .pb.EmcStatusConfig emc_status_config = 600;</code>
     */
    boolean hasEmcStatusConfig();
    /**
     * <code>optional .pb.EmcStatusConfig emc_status_config = 600;</code>
     */
    pb.Status.EmcStatusConfig getEmcStatusConfig();
    /**
     * <code>optional .pb.EmcStatusConfig emc_status_config = 600;</code>
     */
    pb.Status.EmcStatusConfigOrBuilder getEmcStatusConfigOrBuilder();

    /**
     * <code>optional .pb.EmcStatusMotion emc_status_motion = 601;</code>
     */
    boolean hasEmcStatusMotion();
    /**
     * <code>optional .pb.EmcStatusMotion emc_status_motion = 601;</code>
     */
    pb.Status.EmcStatusMotion getEmcStatusMotion();
    /**
     * <code>optional .pb.EmcStatusMotion emc_status_motion = 601;</code>
     */
    pb.Status.EmcStatusMotionOrBuilder getEmcStatusMotionOrBuilder();

    /**
     * <code>optional .pb.EmcStatusIo emc_status_io = 602;</code>
     */
    boolean hasEmcStatusIo();
    /**
     * <code>optional .pb.EmcStatusIo emc_status_io = 602;</code>
     */
    pb.Status.EmcStatusIo getEmcStatusIo();
    /**
     * <code>optional .pb.EmcStatusIo emc_status_io = 602;</code>
     */
    pb.Status.EmcStatusIoOrBuilder getEmcStatusIoOrBuilder();

    /**
     * <code>optional .pb.EmcStatusTask emc_status_task = 603;</code>
     */
    boolean hasEmcStatusTask();
    /**
     * <code>optional .pb.EmcStatusTask emc_status_task = 603;</code>
     */
    pb.Status.EmcStatusTask getEmcStatusTask();
    /**
     * <code>optional .pb.EmcStatusTask emc_status_task = 603;</code>
     */
    pb.Status.EmcStatusTaskOrBuilder getEmcStatusTaskOrBuilder();

    /**
     * <code>optional .pb.EmcStatusInterp emc_status_interp = 604;</code>
     */
    boolean hasEmcStatusInterp();
    /**
     * <code>optional .pb.EmcStatusInterp emc_status_interp = 604;</code>
     */
    pb.Status.EmcStatusInterp getEmcStatusInterp();
    /**
     * <code>optional .pb.EmcStatusInterp emc_status_interp = 604;</code>
     */
    pb.Status.EmcStatusInterpOrBuilder getEmcStatusInterpOrBuilder();

    /**
     * <code>optional .pb.EmcCommandParameters emc_command_params = 610;</code>
     */
    boolean hasEmcCommandParams();
    /**
     * <code>optional .pb.EmcCommandParameters emc_command_params = 610;</code>
     */
    pb.Status.EmcCommandParameters getEmcCommandParams();
    /**
     * <code>optional .pb.EmcCommandParameters emc_command_params = 610;</code>
     */
    pb.Status.EmcCommandParametersOrBuilder getEmcCommandParamsOrBuilder();
  }
  /**
   * Protobuf type {@code pb.Container}
   */
  public static final class Container extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pb.Container)
      ContainerOrBuilder {
    // Use Container.newBuilder() to construct.
    private Container(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Container(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Container defaultInstance;
    public static Container getDefaultInstance() {
      return defaultInstance;
    }

    public Container getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Container(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              pb.Types.ContainerType value = pb.Types.ContainerType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField1_ & 0x00000100) == 0x00000100)) {
                pin_ = new java.util.ArrayList<pb.Object.Pin>();
                mutable_bitField1_ |= 0x00000100;
              }
              pin_.add(input.readMessage(pb.Object.Pin.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField1_ & 0x00000200) == 0x00000200)) {
                signal_ = new java.util.ArrayList<pb.Object.Signal>();
                mutable_bitField1_ |= 0x00000200;
              }
              signal_.add(input.readMessage(pb.Object.Signal.PARSER, extensionRegistry));
              break;
            }
            case 57: {
              bitField0_ |= 0x00000002;
              tsc_ = input.readSFixed64();
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                preview_ = new java.util.ArrayList<pb.PreviewOuterClass.Preview>();
                mutable_bitField0_ |= 0x00000004;
              }
              preview_.add(input.readMessage(pb.PreviewOuterClass.Preview.PARSER, extensionRegistry));
              break;
            }
            case 74: {
              pb.Motcmds.MotionCommand.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = motcmd_.toBuilder();
              }
              motcmd_ = input.readMessage(pb.Motcmds.MotionCommand.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(motcmd_);
                motcmd_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 82: {
              pb.Motcmds.MotionStatus.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = motstat_.toBuilder();
              }
              motstat_ = input.readMessage(pb.Motcmds.MotionStatus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(motstat_);
                motstat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 90: {
              bitField0_ |= 0x00000010;
              legacyMotcmd_ = input.readBytes();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000020;
              legacyMotstat_ = input.readBytes();
              break;
            }
            case 106: {
              pb.RtapiMessage.RTAPI_Message.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = rtapiMessage_.toBuilder();
              }
              rtapiMessage_ = input.readMessage(pb.RtapiMessage.RTAPI_Message.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rtapiMessage_);
                rtapiMessage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 114: {
              pb.Task.TaskReply.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = taskReply_.toBuilder();
              }
              taskReply_ = input.readMessage(pb.Task.TaskReply.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(taskReply_);
                taskReply_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 122: {
              pb.Task.TicketUpdate.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = ticketUpdate_.toBuilder();
              }
              ticketUpdate_ = input.readMessage(pb.Task.TicketUpdate.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ticketUpdate_);
                ticketUpdate_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 146: {
              bitField0_ |= 0x00000200;
              syslog_ = input.readBytes();
              break;
            }
            case 154: {
              bitField0_ |= 0x00000400;
              legacyNml_ = input.readBytes();
              break;
            }
            case 162: {
              bitField0_ |= 0x00000800;
              legacyMotconfig_ = input.readBytes();
              break;
            }
            case 168: {
              bitField0_ |= 0x00001000;
              tvSec_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00002000;
              tvNsec_ = input.readInt32();
              break;
            }
            case 186: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00004000;
              topic_ = bs;
              break;
            }
            case 192: {
              bitField0_ |= 0x00008000;
              replyRequired_ = input.readBool();
              break;
            }
            case 200: {
              int rawValue = input.readEnum();
              pb.Types.InterpreterStateType value = pb.Types.InterpreterStateType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(25, rawValue);
              } else {
                bitField0_ |= 0x00010000;
                interpState_ = value;
              }
              break;
            }
            case 210: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00020000;
              interpName_ = bs;
              break;
            }
            case 240: {
              bitField0_ |= 0x00040000;
              rsvp_ = input.readInt32();
              break;
            }
            case 264: {
              int rawValue = input.readEnum();
              pb.Types.ContainerType value = pb.Types.ContainerType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(33, rawValue);
              } else {
                bitField0_ |= 0x00080000;
                inReplyTo_ = value;
              }
              break;
            }
            case 280: {
              int rawValue = input.readEnum();
              pb.Types.RCS_STATUS value = pb.Types.RCS_STATUS.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(35, rawValue);
              } else {
                bitField0_ |= 0x00100000;
                rcsStatus_ = value;
              }
              break;
            }
            case 320: {
              int rawValue = input.readEnum();
              pb.Types.StatusType value = pb.Types.StatusType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(40, rawValue);
              } else {
                bitField0_ |= 0x00200000;
                status_ = value;
              }
              break;
            }
            case 360: {
              bitField0_ |= 0x00400000;
              serial_ = input.readInt32();
              break;
            }
            case 400: {
              bitField0_ |= 0x00800000;
              replySerial_ = input.readInt32();
              break;
            }
            case 440: {
              bitField0_ |= 0x01000000;
              ticket_ = input.readInt32();
              break;
            }
            case 480: {
              bitField0_ |= 0x02000000;
              replyTicket_ = input.readInt32();
              break;
            }
            case 496: {
              bitField0_ |= 0x04000000;
              sequence_ = input.readInt32();
              break;
            }
            case 520: {
              bitField0_ |= 0x08000000;
              credit_ = input.readInt32();
              break;
            }
            case 528: {
              bitField0_ |= 0x10000000;
              lineNumber_ = input.readInt32();
              break;
            }
            case 538: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x20000000;
              name_ = bs;
              break;
            }
            case 546: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x80000000) == 0x80000000)) {
                note_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x80000000;
              }
              note_.add(bs);
              break;
            }
            case 552: {
              bitField0_ |= 0x40000000;
              retcode_ = input.readInt32();
              break;
            }
            case 578: {
              bitField0_ |= 0x80000000;
              uuid_ = input.readBytes();
              break;
            }
            case 600: {
              bitField1_ |= 0x00000001;
              trace_ = input.readBool();
              break;
            }
            case 616: {
              bitField1_ |= 0x00000002;
              instance_ = input.readInt32();
              break;
            }
            case 682: {
              if (!((mutable_bitField1_ & 0x00000010) == 0x00000010)) {
                value_ = new java.util.ArrayList<pb.ValueOuterClass.Value>();
                mutable_bitField1_ |= 0x00000010;
              }
              value_.add(input.readMessage(pb.ValueOuterClass.Value.PARSER, extensionRegistry));
              break;
            }
            case 690: {
              pb.Rtapicommand.RTAPICommand.Builder subBuilder = null;
              if (((bitField1_ & 0x00000004) == 0x00000004)) {
                subBuilder = rtapicmd_.toBuilder();
              }
              rtapicmd_ = input.readMessage(pb.Rtapicommand.RTAPICommand.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rtapicmd_);
                rtapicmd_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000004;
              break;
            }
            case 698: {
              pb.Log.LogMessage.Builder subBuilder = null;
              if (((bitField1_ & 0x00000020) == 0x00000020)) {
                subBuilder = logMessage_.toBuilder();
              }
              logMessage_ = input.readMessage(pb.Log.LogMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(logMessage_);
                logMessage_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000020;
              break;
            }
            case 706: {
              if (!((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
                serviceAnnouncement_ = new java.util.ArrayList<pb.Object.ServiceAnnouncement>();
                mutable_bitField1_ |= 0x00000040;
              }
              serviceAnnouncement_.add(input.readMessage(pb.Object.ServiceAnnouncement.PARSER, extensionRegistry));
              break;
            }
            case 802: {
              if (!((mutable_bitField1_ & 0x00000080) == 0x00000080)) {
                comp_ = new java.util.ArrayList<pb.Object.Component>();
                mutable_bitField1_ |= 0x00000080;
              }
              comp_.add(input.readMessage(pb.Object.Component.PARSER, extensionRegistry));
              break;
            }
            case 826: {
              if (!((mutable_bitField1_ & 0x00000400) == 0x00000400)) {
                param_ = new java.util.ArrayList<pb.Object.Param>();
                mutable_bitField1_ |= 0x00000400;
              }
              param_.add(input.readMessage(pb.Object.Param.PARSER, extensionRegistry));
              break;
            }
            case 834: {
              if (!((mutable_bitField1_ & 0x00000800) == 0x00000800)) {
                thread_ = new java.util.ArrayList<pb.Object.Thread>();
                mutable_bitField1_ |= 0x00000800;
              }
              thread_.add(input.readMessage(pb.Object.Thread.PARSER, extensionRegistry));
              break;
            }
            case 842: {
              if (!((mutable_bitField1_ & 0x00001000) == 0x00001000)) {
                ring_ = new java.util.ArrayList<pb.Object.Ring>();
                mutable_bitField1_ |= 0x00001000;
              }
              ring_.add(input.readMessage(pb.Object.Ring.PARSER, extensionRegistry));
              break;
            }
            case 850: {
              if (!((mutable_bitField1_ & 0x00002000) == 0x00002000)) {
                group_ = new java.util.ArrayList<pb.Object.Group>();
                mutable_bitField1_ |= 0x00002000;
              }
              group_.add(input.readMessage(pb.Object.Group.PARSER, extensionRegistry));
              break;
            }
            case 858: {
              if (!((mutable_bitField1_ & 0x00004000) == 0x00004000)) {
                member_ = new java.util.ArrayList<pb.Object.Member>();
                mutable_bitField1_ |= 0x00004000;
              }
              member_.add(input.readMessage(pb.Object.Member.PARSER, extensionRegistry));
              break;
            }
            case 866: {
              if (!((mutable_bitField1_ & 0x00008000) == 0x00008000)) {
                function_ = new java.util.ArrayList<pb.Object.Function>();
                mutable_bitField1_ |= 0x00008000;
              }
              function_.add(input.readMessage(pb.Object.Function.PARSER, extensionRegistry));
              break;
            }
            case 874: {
              pb.Object.ProtocolParameters.Builder subBuilder = null;
              if (((bitField1_ & 0x00000008) == 0x00000008)) {
                subBuilder = pparams_.toBuilder();
              }
              pparams_ = input.readMessage(pb.Object.ProtocolParameters.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pparams_);
                pparams_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000008;
              break;
            }
            case 882: {
              if (!((mutable_bitField1_ & 0x00020000) == 0x00020000)) {
                vtable_ = new java.util.ArrayList<pb.Object.Vtable>();
                mutable_bitField1_ |= 0x00020000;
              }
              vtable_.add(input.readMessage(pb.Object.Vtable.PARSER, extensionRegistry));
              break;
            }
            case 890: {
              if (!((mutable_bitField1_ & 0x00040000) == 0x00040000)) {
                inst_ = new java.util.ArrayList<pb.Object.Inst>();
                mutable_bitField1_ |= 0x00040000;
              }
              inst_.add(input.readMessage(pb.Object.Inst.PARSER, extensionRegistry));
              break;
            }
            case 962: {
              if (!((mutable_bitField1_ & 0x00080000) == 0x00080000)) {
                app_ = new java.util.ArrayList<pb.Config.Application>();
                mutable_bitField1_ |= 0x00080000;
              }
              app_.add(input.readMessage(pb.Config.Application.PARSER, extensionRegistry));
              break;
            }
            case 1042: {
              if (!((mutable_bitField1_ & 0x00100000) == 0x00100000)) {
                launcher_ = new java.util.ArrayList<pb.Config.Launcher>();
                mutable_bitField1_ |= 0x00100000;
              }
              launcher_.add(input.readMessage(pb.Config.Launcher.PARSER, extensionRegistry));
              break;
            }
            case 1048: {
              bitField1_ |= 0x00000010;
              index_ = input.readInt32();
              break;
            }
            case 1602: {
              pb.Task.TaskPlanExecute.Builder subBuilder = null;
              if (((bitField1_ & 0x00000040) == 0x00000040)) {
                subBuilder = tpexecute_.toBuilder();
              }
              tpexecute_ = input.readMessage(pb.Task.TaskPlanExecute.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tpexecute_);
                tpexecute_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000040;
              break;
            }
            case 1610: {
              pb.Task.TaskPlanBlockDelete.Builder subBuilder = null;
              if (((bitField1_ & 0x00000080) == 0x00000080)) {
                subBuilder = tpblockdelete_.toBuilder();
              }
              tpblockdelete_ = input.readMessage(pb.Task.TaskPlanBlockDelete.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tpblockdelete_);
                tpblockdelete_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000080;
              break;
            }
            case 1618: {
              pb.Task.TaskPlanOptionalStop.Builder subBuilder = null;
              if (((bitField1_ & 0x00000100) == 0x00000100)) {
                subBuilder = tpoptionalstop_.toBuilder();
              }
              tpoptionalstop_ = input.readMessage(pb.Task.TaskPlanOptionalStop.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tpoptionalstop_);
                tpoptionalstop_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000100;
              break;
            }
            case 1626: {
              pb.Task.TaskPlanOpen.Builder subBuilder = null;
              if (((bitField1_ & 0x00000200) == 0x00000200)) {
                subBuilder = tpopen_.toBuilder();
              }
              tpopen_ = input.readMessage(pb.Task.TaskPlanOpen.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tpopen_);
                tpopen_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000200;
              break;
            }
            case 1682: {
              pb.Task.TaskPlanReply.Builder subBuilder = null;
              if (((bitField1_ & 0x00000400) == 0x00000400)) {
                subBuilder = taskplanReply_.toBuilder();
              }
              taskplanReply_ = input.readMessage(pb.Task.TaskPlanReply.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(taskplanReply_);
                taskplanReply_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000400;
              break;
            }
            case 2402: {
              pb.Canon.Emc_Traj_Set_G5x.Builder subBuilder = null;
              if (((bitField1_ & 0x00000800) == 0x00000800)) {
                subBuilder = trajSetG5X_.toBuilder();
              }
              trajSetG5X_ = input.readMessage(pb.Canon.Emc_Traj_Set_G5x.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trajSetG5X_);
                trajSetG5X_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000800;
              break;
            }
            case 2482: {
              pb.Canon.Emc_Traj_Set_G92.Builder subBuilder = null;
              if (((bitField1_ & 0x00001000) == 0x00001000)) {
                subBuilder = trajSetG92_.toBuilder();
              }
              trajSetG92_ = input.readMessage(pb.Canon.Emc_Traj_Set_G92.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trajSetG92_);
                trajSetG92_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00001000;
              break;
            }
            case 2562: {
              pb.Canon.Emc_Traj_Set_Rotation.Builder subBuilder = null;
              if (((bitField1_ & 0x00002000) == 0x00002000)) {
                subBuilder = trajSetRotation_.toBuilder();
              }
              trajSetRotation_ = input.readMessage(pb.Canon.Emc_Traj_Set_Rotation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trajSetRotation_);
                trajSetRotation_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00002000;
              break;
            }
            case 2642: {
              pb.Canon.Emc_Traj_Linear_Move.Builder subBuilder = null;
              if (((bitField1_ & 0x00004000) == 0x00004000)) {
                subBuilder = trajLinearMove_.toBuilder();
              }
              trajLinearMove_ = input.readMessage(pb.Canon.Emc_Traj_Linear_Move.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trajLinearMove_);
                trajLinearMove_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00004000;
              break;
            }
            case 2722: {
              pb.Canon.Emc_Traj_Probe.Builder subBuilder = null;
              if (((bitField1_ & 0x00008000) == 0x00008000)) {
                subBuilder = trajProbe_.toBuilder();
              }
              trajProbe_ = input.readMessage(pb.Canon.Emc_Traj_Probe.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trajProbe_);
                trajProbe_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00008000;
              break;
            }
            case 2802: {
              pb.Canon.Emc_Traj_Circular_Move.Builder subBuilder = null;
              if (((bitField1_ & 0x00010000) == 0x00010000)) {
                subBuilder = trajCircularMove_.toBuilder();
              }
              trajCircularMove_ = input.readMessage(pb.Canon.Emc_Traj_Circular_Move.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trajCircularMove_);
                trajCircularMove_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00010000;
              break;
            }
            case 2882: {
              pb.Canon.Emc_Traj_Rigid_Tap.Builder subBuilder = null;
              if (((bitField1_ & 0x00020000) == 0x00020000)) {
                subBuilder = trajRigidTap_.toBuilder();
              }
              trajRigidTap_ = input.readMessage(pb.Canon.Emc_Traj_Rigid_Tap.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trajRigidTap_);
                trajRigidTap_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00020000;
              break;
            }
            case 2962: {
              pb.Canon.Emc_Traj_Set_Term_Cond.Builder subBuilder = null;
              if (((bitField1_ & 0x00040000) == 0x00040000)) {
                subBuilder = trajSetTermCond_.toBuilder();
              }
              trajSetTermCond_ = input.readMessage(pb.Canon.Emc_Traj_Set_Term_Cond.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trajSetTermCond_);
                trajSetTermCond_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00040000;
              break;
            }
            case 3042: {
              pb.Canon.Emc_Traj_Set_Spindlesync.Builder subBuilder = null;
              if (((bitField1_ & 0x00080000) == 0x00080000)) {
                subBuilder = trajSetSpindlesync_.toBuilder();
              }
              trajSetSpindlesync_ = input.readMessage(pb.Canon.Emc_Traj_Set_Spindlesync.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trajSetSpindlesync_);
                trajSetSpindlesync_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00080000;
              break;
            }
            case 3122: {
              pb.Canon.Emc_Traj_Delay.Builder subBuilder = null;
              if (((bitField1_ & 0x00100000) == 0x00100000)) {
                subBuilder = trajDelay_.toBuilder();
              }
              trajDelay_ = input.readMessage(pb.Canon.Emc_Traj_Delay.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trajDelay_);
                trajDelay_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00100000;
              break;
            }
            case 3202: {
              pb.Canon.Emc_Spindle_On.Builder subBuilder = null;
              if (((bitField1_ & 0x00200000) == 0x00200000)) {
                subBuilder = spindleOn_.toBuilder();
              }
              spindleOn_ = input.readMessage(pb.Canon.Emc_Spindle_On.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(spindleOn_);
                spindleOn_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00200000;
              break;
            }
            case 3282: {
              pb.Canon.Emc_Spindle_Speed.Builder subBuilder = null;
              if (((bitField1_ & 0x00400000) == 0x00400000)) {
                subBuilder = spindleSpeed_.toBuilder();
              }
              spindleSpeed_ = input.readMessage(pb.Canon.Emc_Spindle_Speed.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(spindleSpeed_);
                spindleSpeed_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00400000;
              break;
            }
            case 3362: {
              pb.Canon.Emc_Spindle_Orient.Builder subBuilder = null;
              if (((bitField1_ & 0x00800000) == 0x00800000)) {
                subBuilder = spindleOrient_.toBuilder();
              }
              spindleOrient_ = input.readMessage(pb.Canon.Emc_Spindle_Orient.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(spindleOrient_);
                spindleOrient_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00800000;
              break;
            }
            case 3442: {
              pb.Canon.Emc_Spindle_Wait_Orient_Complete.Builder subBuilder = null;
              if (((bitField1_ & 0x01000000) == 0x01000000)) {
                subBuilder = spindleWaitOrientComplete_.toBuilder();
              }
              spindleWaitOrientComplete_ = input.readMessage(pb.Canon.Emc_Spindle_Wait_Orient_Complete.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(spindleWaitOrientComplete_);
                spindleWaitOrientComplete_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x01000000;
              break;
            }
            case 3522: {
              pb.Canon.Emc_Tool_Set_Offset.Builder subBuilder = null;
              if (((bitField1_ & 0x02000000) == 0x02000000)) {
                subBuilder = toolSetOffet_.toBuilder();
              }
              toolSetOffet_ = input.readMessage(pb.Canon.Emc_Tool_Set_Offset.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toolSetOffet_);
                toolSetOffet_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x02000000;
              break;
            }
            case 3602: {
              pb.Canon.Emc_Traj_Set_Offset.Builder subBuilder = null;
              if (((bitField1_ & 0x04000000) == 0x04000000)) {
                subBuilder = trajSetOffset_.toBuilder();
              }
              trajSetOffset_ = input.readMessage(pb.Canon.Emc_Traj_Set_Offset.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trajSetOffset_);
                trajSetOffset_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x04000000;
              break;
            }
            case 3682: {
              pb.Canon.Emc_Tool_Prepare.Builder subBuilder = null;
              if (((bitField1_ & 0x08000000) == 0x08000000)) {
                subBuilder = toolPrepare_.toBuilder();
              }
              toolPrepare_ = input.readMessage(pb.Canon.Emc_Tool_Prepare.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toolPrepare_);
                toolPrepare_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x08000000;
              break;
            }
            case 3762: {
              pb.Canon.Emc_Tool_Set_Number.Builder subBuilder = null;
              if (((bitField1_ & 0x10000000) == 0x10000000)) {
                subBuilder = toolSetNumber_.toBuilder();
              }
              toolSetNumber_ = input.readMessage(pb.Canon.Emc_Tool_Set_Number.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toolSetNumber_);
                toolSetNumber_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x10000000;
              break;
            }
            case 3842: {
              pb.Canon.Emc_Traj_Set_Fo_Enable.Builder subBuilder = null;
              if (((bitField1_ & 0x20000000) == 0x20000000)) {
                subBuilder = trajSetFoEnable_.toBuilder();
              }
              trajSetFoEnable_ = input.readMessage(pb.Canon.Emc_Traj_Set_Fo_Enable.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trajSetFoEnable_);
                trajSetFoEnable_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x20000000;
              break;
            }
            case 3922: {
              pb.Canon.Emc_Traj_Set_So_Enable.Builder subBuilder = null;
              if (((bitField1_ & 0x40000000) == 0x40000000)) {
                subBuilder = trajSetSoEnable_.toBuilder();
              }
              trajSetSoEnable_ = input.readMessage(pb.Canon.Emc_Traj_Set_So_Enable.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trajSetSoEnable_);
                trajSetSoEnable_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x40000000;
              break;
            }
            case 4002: {
              pb.Canon.Emc_Traj_Set_Fh_Enable.Builder subBuilder = null;
              if (((bitField1_ & 0x80000000) == 0x80000000)) {
                subBuilder = trajSetFhEnable_.toBuilder();
              }
              trajSetFhEnable_ = input.readMessage(pb.Canon.Emc_Traj_Set_Fh_Enable.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trajSetFhEnable_);
                trajSetFhEnable_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x80000000;
              break;
            }
            case 4082: {
              pb.Canon.Emc_Motion_Adaptive.Builder subBuilder = null;
              if (((bitField2_ & 0x00000001) == 0x00000001)) {
                subBuilder = motionAdaptive_.toBuilder();
              }
              motionAdaptive_ = input.readMessage(pb.Canon.Emc_Motion_Adaptive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(motionAdaptive_);
                motionAdaptive_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000001;
              break;
            }
            case 4162: {
              pb.Canon.Emc_Operator_Display.Builder subBuilder = null;
              if (((bitField2_ & 0x00000002) == 0x00000002)) {
                subBuilder = operatorDisplay_.toBuilder();
              }
              operatorDisplay_ = input.readMessage(pb.Canon.Emc_Operator_Display.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(operatorDisplay_);
                operatorDisplay_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000002;
              break;
            }
            case 4242: {
              pb.Canon.Emc_Operator_Text.Builder subBuilder = null;
              if (((bitField2_ & 0x00000004) == 0x00000004)) {
                subBuilder = operatorText_.toBuilder();
              }
              operatorText_ = input.readMessage(pb.Canon.Emc_Operator_Text.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(operatorText_);
                operatorText_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000004;
              break;
            }
            case 4322: {
              pb.Canon.Emc_Operator_Error.Builder subBuilder = null;
              if (((bitField2_ & 0x00000008) == 0x00000008)) {
                subBuilder = operatorError_.toBuilder();
              }
              operatorError_ = input.readMessage(pb.Canon.Emc_Operator_Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(operatorError_);
                operatorError_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000008;
              break;
            }
            case 4402: {
              pb.Canon.Emc_Motion_Set_Dout.Builder subBuilder = null;
              if (((bitField2_ & 0x00000010) == 0x00000010)) {
                subBuilder = motionSetDout_.toBuilder();
              }
              motionSetDout_ = input.readMessage(pb.Canon.Emc_Motion_Set_Dout.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(motionSetDout_);
                motionSetDout_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000010;
              break;
            }
            case 4482: {
              pb.Canon.Emc_Motion_Set_Aout.Builder subBuilder = null;
              if (((bitField2_ & 0x00000020) == 0x00000020)) {
                subBuilder = motionSetAout_.toBuilder();
              }
              motionSetAout_ = input.readMessage(pb.Canon.Emc_Motion_Set_Aout.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(motionSetAout_);
                motionSetAout_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000020;
              break;
            }
            case 4562: {
              pb.Canon.Emc_Aux_Input_Wait.Builder subBuilder = null;
              if (((bitField2_ & 0x00000040) == 0x00000040)) {
                subBuilder = auxInputWait_.toBuilder();
              }
              auxInputWait_ = input.readMessage(pb.Canon.Emc_Aux_Input_Wait.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(auxInputWait_);
                auxInputWait_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000040;
              break;
            }
            case 4642: {
              pb.Canon.Emc_Exec_Plugin_Ca1l.Builder subBuilder = null;
              if (((bitField2_ & 0x00000080) == 0x00000080)) {
                subBuilder = execPluginCall_.toBuilder();
              }
              execPluginCall_ = input.readMessage(pb.Canon.Emc_Exec_Plugin_Ca1l.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(execPluginCall_);
                execPluginCall_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000080;
              break;
            }
            case 4722: {
              pb.Canon.Emc_Io_Plugin_Call.Builder subBuilder = null;
              if (((bitField2_ & 0x00000100) == 0x00000100)) {
                subBuilder = ioPluginCall_.toBuilder();
              }
              ioPluginCall_ = input.readMessage(pb.Canon.Emc_Io_Plugin_Call.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ioPluginCall_);
                ioPluginCall_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000100;
              break;
            }
            case 4802: {
              pb.Status.EmcStatusConfig.Builder subBuilder = null;
              if (((bitField2_ & 0x00000200) == 0x00000200)) {
                subBuilder = emcStatusConfig_.toBuilder();
              }
              emcStatusConfig_ = input.readMessage(pb.Status.EmcStatusConfig.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(emcStatusConfig_);
                emcStatusConfig_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000200;
              break;
            }
            case 4810: {
              pb.Status.EmcStatusMotion.Builder subBuilder = null;
              if (((bitField2_ & 0x00000400) == 0x00000400)) {
                subBuilder = emcStatusMotion_.toBuilder();
              }
              emcStatusMotion_ = input.readMessage(pb.Status.EmcStatusMotion.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(emcStatusMotion_);
                emcStatusMotion_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000400;
              break;
            }
            case 4818: {
              pb.Status.EmcStatusIo.Builder subBuilder = null;
              if (((bitField2_ & 0x00000800) == 0x00000800)) {
                subBuilder = emcStatusIo_.toBuilder();
              }
              emcStatusIo_ = input.readMessage(pb.Status.EmcStatusIo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(emcStatusIo_);
                emcStatusIo_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000800;
              break;
            }
            case 4826: {
              pb.Status.EmcStatusTask.Builder subBuilder = null;
              if (((bitField2_ & 0x00001000) == 0x00001000)) {
                subBuilder = emcStatusTask_.toBuilder();
              }
              emcStatusTask_ = input.readMessage(pb.Status.EmcStatusTask.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(emcStatusTask_);
                emcStatusTask_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00001000;
              break;
            }
            case 4834: {
              pb.Status.EmcStatusInterp.Builder subBuilder = null;
              if (((bitField2_ & 0x00002000) == 0x00002000)) {
                subBuilder = emcStatusInterp_.toBuilder();
              }
              emcStatusInterp_ = input.readMessage(pb.Status.EmcStatusInterp.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(emcStatusInterp_);
                emcStatusInterp_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00002000;
              break;
            }
            case 4882: {
              pb.Status.EmcCommandParameters.Builder subBuilder = null;
              if (((bitField2_ & 0x00004000) == 0x00004000)) {
                subBuilder = emcCommandParams_.toBuilder();
              }
              emcCommandParams_ = input.readMessage(pb.Status.EmcCommandParameters.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(emcCommandParams_);
                emcCommandParams_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00004000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField1_ & 0x00000100) == 0x00000100)) {
          pin_ = java.util.Collections.unmodifiableList(pin_);
        }
        if (((mutable_bitField1_ & 0x00000200) == 0x00000200)) {
          signal_ = java.util.Collections.unmodifiableList(signal_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          preview_ = java.util.Collections.unmodifiableList(preview_);
        }
        if (((mutable_bitField0_ & 0x80000000) == 0x80000000)) {
          note_ = note_.getUnmodifiableView();
        }
        if (((mutable_bitField1_ & 0x00000010) == 0x00000010)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        if (((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
          serviceAnnouncement_ = java.util.Collections.unmodifiableList(serviceAnnouncement_);
        }
        if (((mutable_bitField1_ & 0x00000080) == 0x00000080)) {
          comp_ = java.util.Collections.unmodifiableList(comp_);
        }
        if (((mutable_bitField1_ & 0x00000400) == 0x00000400)) {
          param_ = java.util.Collections.unmodifiableList(param_);
        }
        if (((mutable_bitField1_ & 0x00000800) == 0x00000800)) {
          thread_ = java.util.Collections.unmodifiableList(thread_);
        }
        if (((mutable_bitField1_ & 0x00001000) == 0x00001000)) {
          ring_ = java.util.Collections.unmodifiableList(ring_);
        }
        if (((mutable_bitField1_ & 0x00002000) == 0x00002000)) {
          group_ = java.util.Collections.unmodifiableList(group_);
        }
        if (((mutable_bitField1_ & 0x00004000) == 0x00004000)) {
          member_ = java.util.Collections.unmodifiableList(member_);
        }
        if (((mutable_bitField1_ & 0x00008000) == 0x00008000)) {
          function_ = java.util.Collections.unmodifiableList(function_);
        }
        if (((mutable_bitField1_ & 0x00020000) == 0x00020000)) {
          vtable_ = java.util.Collections.unmodifiableList(vtable_);
        }
        if (((mutable_bitField1_ & 0x00040000) == 0x00040000)) {
          inst_ = java.util.Collections.unmodifiableList(inst_);
        }
        if (((mutable_bitField1_ & 0x00080000) == 0x00080000)) {
          app_ = java.util.Collections.unmodifiableList(app_);
        }
        if (((mutable_bitField1_ & 0x00100000) == 0x00100000)) {
          launcher_ = java.util.Collections.unmodifiableList(launcher_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb.Message.internal_static_pb_Container_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb.Message.internal_static_pb_Container_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb.Message.Container.class, pb.Message.Container.Builder.class);
    }

    public static com.google.protobuf.Parser<Container> PARSER =
        new com.google.protobuf.AbstractParser<Container>() {
      public Container parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Container(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Container> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    private int bitField2_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private pb.Types.ContainerType type_;
    /**
     * <code>required .pb.ContainerType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .pb.ContainerType type = 1;</code>
     */
    public pb.Types.ContainerType getType() {
      return type_;
    }

    public static final int TSC_FIELD_NUMBER = 7;
    private long tsc_;
    /**
     * <code>optional sfixed64 tsc = 7;</code>
     *
     * <pre>
     * protobuf-encoded submessages
     * tags with values in the range 1 through 15 take one byte to encode
     * so place the frequently used compound messages here
     * </pre>
     */
    public boolean hasTsc() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sfixed64 tsc = 7;</code>
     *
     * <pre>
     * protobuf-encoded submessages
     * tags with values in the range 1 through 15 take one byte to encode
     * so place the frequently used compound messages here
     * </pre>
     */
    public long getTsc() {
      return tsc_;
    }

    public static final int PREVIEW_FIELD_NUMBER = 8;
    private java.util.List<pb.PreviewOuterClass.Preview> preview_;
    /**
     * <code>repeated .pb.Preview preview = 8;</code>
     */
    public java.util.List<pb.PreviewOuterClass.Preview> getPreviewList() {
      return preview_;
    }
    /**
     * <code>repeated .pb.Preview preview = 8;</code>
     */
    public java.util.List<? extends pb.PreviewOuterClass.PreviewOrBuilder> 
        getPreviewOrBuilderList() {
      return preview_;
    }
    /**
     * <code>repeated .pb.Preview preview = 8;</code>
     */
    public int getPreviewCount() {
      return preview_.size();
    }
    /**
     * <code>repeated .pb.Preview preview = 8;</code>
     */
    public pb.PreviewOuterClass.Preview getPreview(int index) {
      return preview_.get(index);
    }
    /**
     * <code>repeated .pb.Preview preview = 8;</code>
     */
    public pb.PreviewOuterClass.PreviewOrBuilder getPreviewOrBuilder(
        int index) {
      return preview_.get(index);
    }

    public static final int MOTCMD_FIELD_NUMBER = 9;
    private pb.Motcmds.MotionCommand motcmd_;
    /**
     * <code>optional .pb.MotionCommand motcmd = 9;</code>
     */
    public boolean hasMotcmd() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .pb.MotionCommand motcmd = 9;</code>
     */
    public pb.Motcmds.MotionCommand getMotcmd() {
      return motcmd_;
    }
    /**
     * <code>optional .pb.MotionCommand motcmd = 9;</code>
     */
    public pb.Motcmds.MotionCommandOrBuilder getMotcmdOrBuilder() {
      return motcmd_;
    }

    public static final int MOTSTAT_FIELD_NUMBER = 10;
    private pb.Motcmds.MotionStatus motstat_;
    /**
     * <code>optional .pb.MotionStatus motstat = 10;</code>
     */
    public boolean hasMotstat() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .pb.MotionStatus motstat = 10;</code>
     */
    public pb.Motcmds.MotionStatus getMotstat() {
      return motstat_;
    }
    /**
     * <code>optional .pb.MotionStatus motstat = 10;</code>
     */
    public pb.Motcmds.MotionStatusOrBuilder getMotstatOrBuilder() {
      return motstat_;
    }

    public static final int LEGACY_MOTCMD_FIELD_NUMBER = 11;
    private com.google.protobuf.ByteString legacyMotcmd_;
    /**
     * <code>optional bytes legacy_motcmd = 11;</code>
     *
     * <pre>
     * emcmot_command_t wrapped in PB
     * </pre>
     */
    public boolean hasLegacyMotcmd() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes legacy_motcmd = 11;</code>
     *
     * <pre>
     * emcmot_command_t wrapped in PB
     * </pre>
     */
    public com.google.protobuf.ByteString getLegacyMotcmd() {
      return legacyMotcmd_;
    }

    public static final int LEGACY_MOTSTAT_FIELD_NUMBER = 12;
    private com.google.protobuf.ByteString legacyMotstat_;
    /**
     * <code>optional bytes legacy_motstat = 12;</code>
     *
     * <pre>
     * emcmot_status_t wrapped in PB
     * </pre>
     */
    public boolean hasLegacyMotstat() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bytes legacy_motstat = 12;</code>
     *
     * <pre>
     * emcmot_status_t wrapped in PB
     * </pre>
     */
    public com.google.protobuf.ByteString getLegacyMotstat() {
      return legacyMotstat_;
    }

    public static final int RTAPI_MESSAGE_FIELD_NUMBER = 13;
    private pb.RtapiMessage.RTAPI_Message rtapiMessage_;
    /**
     * <code>optional .pb.RTAPI_Message rtapi_message = 13;</code>
     */
    public boolean hasRtapiMessage() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .pb.RTAPI_Message rtapi_message = 13;</code>
     */
    public pb.RtapiMessage.RTAPI_Message getRtapiMessage() {
      return rtapiMessage_;
    }
    /**
     * <code>optional .pb.RTAPI_Message rtapi_message = 13;</code>
     */
    public pb.RtapiMessage.RTAPI_MessageOrBuilder getRtapiMessageOrBuilder() {
      return rtapiMessage_;
    }

    public static final int TASK_REPLY_FIELD_NUMBER = 14;
    private pb.Task.TaskReply taskReply_;
    /**
     * <code>optional .pb.TaskReply task_reply = 14;</code>
     */
    public boolean hasTaskReply() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .pb.TaskReply task_reply = 14;</code>
     */
    public pb.Task.TaskReply getTaskReply() {
      return taskReply_;
    }
    /**
     * <code>optional .pb.TaskReply task_reply = 14;</code>
     */
    public pb.Task.TaskReplyOrBuilder getTaskReplyOrBuilder() {
      return taskReply_;
    }

    public static final int TICKET_UPDATE_FIELD_NUMBER = 15;
    private pb.Task.TicketUpdate ticketUpdate_;
    /**
     * <code>optional .pb.TicketUpdate ticket_update = 15;</code>
     */
    public boolean hasTicketUpdate() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .pb.TicketUpdate ticket_update = 15;</code>
     */
    public pb.Task.TicketUpdate getTicketUpdate() {
      return ticketUpdate_;
    }
    /**
     * <code>optional .pb.TicketUpdate ticket_update = 15;</code>
     */
    public pb.Task.TicketUpdateOrBuilder getTicketUpdateOrBuilder() {
      return ticketUpdate_;
    }

    public static final int SYSLOG_FIELD_NUMBER = 18;
    private com.google.protobuf.ByteString syslog_;
    /**
     * <code>optional bytes syslog = 18;</code>
     *
     * <pre>
     * RFC5424 syslog(3) encoding
     * </pre>
     */
    public boolean hasSyslog() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bytes syslog = 18;</code>
     *
     * <pre>
     * RFC5424 syslog(3) encoding
     * </pre>
     */
    public com.google.protobuf.ByteString getSyslog() {
      return syslog_;
    }

    public static final int LEGACY_NML_FIELD_NUMBER = 19;
    private com.google.protobuf.ByteString legacyNml_;
    /**
     * <code>optional bytes legacy_nml = 19;</code>
     *
     * <pre>
     * legacy NML container
     * </pre>
     */
    public boolean hasLegacyNml() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bytes legacy_nml = 19;</code>
     *
     * <pre>
     * legacy NML container
     * </pre>
     */
    public com.google.protobuf.ByteString getLegacyNml() {
      return legacyNml_;
    }

    public static final int LEGACY_MOTCONFIG_FIELD_NUMBER = 20;
    private com.google.protobuf.ByteString legacyMotconfig_;
    /**
     * <code>optional bytes legacy_motconfig = 20;</code>
     *
     * <pre>
     * emcmot_config_t wrapped in PB
     * </pre>
     */
    public boolean hasLegacyMotconfig() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bytes legacy_motconfig = 20;</code>
     *
     * <pre>
     * emcmot_config_t wrapped in PB
     * </pre>
     */
    public com.google.protobuf.ByteString getLegacyMotconfig() {
      return legacyMotconfig_;
    }

    public static final int TV_SEC_FIELD_NUMBER = 21;
    private int tvSec_;
    /**
     * <code>optional int32 tv_sec = 21;</code>
     *
     * <pre>
     * timestamps: as per struct timespec
     * obtain with clock_gettime(CLOCK_REALTIME, &amp;spec);
     * </pre>
     */
    public boolean hasTvSec() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 tv_sec = 21;</code>
     *
     * <pre>
     * timestamps: as per struct timespec
     * obtain with clock_gettime(CLOCK_REALTIME, &amp;spec);
     * </pre>
     */
    public int getTvSec() {
      return tvSec_;
    }

    public static final int TV_NSEC_FIELD_NUMBER = 22;
    private int tvNsec_;
    /**
     * <code>optional int32 tv_nsec = 22;</code>
     */
    public boolean hasTvNsec() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 tv_nsec = 22;</code>
     */
    public int getTvNsec() {
      return tvNsec_;
    }

    public static final int TOPIC_FIELD_NUMBER = 23;
    private java.lang.Object topic_;
    /**
     * <code>optional string topic = 23;</code>
     *
     * <pre>
     * this is for messages going over pub/sub streams and wind up in JSON frames
     * duplicating the topic here allows us to drop the topic frame
     * </pre>
     */
    public boolean hasTopic() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string topic = 23;</code>
     *
     * <pre>
     * this is for messages going over pub/sub streams and wind up in JSON frames
     * duplicating the topic here allows us to drop the topic frame
     * </pre>
     */
    public java.lang.String getTopic() {
      java.lang.Object ref = topic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          topic_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string topic = 23;</code>
     *
     * <pre>
     * this is for messages going over pub/sub streams and wind up in JSON frames
     * duplicating the topic here allows us to drop the topic frame
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTopicBytes() {
      java.lang.Object ref = topic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        topic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REPLY_REQUIRED_FIELD_NUMBER = 24;
    private boolean replyRequired_;
    /**
     * <code>optional bool reply_required = 24;</code>
     *
     * <pre>
     * force a response even if OK
     * </pre>
     */
    public boolean hasReplyRequired() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional bool reply_required = 24;</code>
     *
     * <pre>
     * force a response even if OK
     * </pre>
     */
    public boolean getReplyRequired() {
      return replyRequired_;
    }

    public static final int INTERP_STATE_FIELD_NUMBER = 25;
    private pb.Types.InterpreterStateType interpState_;
    /**
     * <code>optional .pb.InterpreterStateType interp_state = 25;</code>
     *
     * <pre>
     * interpreter status updates, MT_INTERP_STAT
     * </pre>
     */
    public boolean hasInterpState() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .pb.InterpreterStateType interp_state = 25;</code>
     *
     * <pre>
     * interpreter status updates, MT_INTERP_STAT
     * </pre>
     */
    public pb.Types.InterpreterStateType getInterpState() {
      return interpState_;
    }

    public static final int INTERP_NAME_FIELD_NUMBER = 26;
    private java.lang.Object interpName_;
    /**
     * <code>optional string interp_name = 26;</code>
     */
    public boolean hasInterpName() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional string interp_name = 26;</code>
     */
    public java.lang.String getInterpName() {
      java.lang.Object ref = interpName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          interpName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string interp_name = 26;</code>
     */
    public com.google.protobuf.ByteString
        getInterpNameBytes() {
      java.lang.Object ref = interpName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        interpName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RSVP_FIELD_NUMBER = 30;
    private int rsvp_;
    /**
     * <code>optional int32 rsvp = 30;</code>
     *
     * <pre>
     * this is an or of bits in ReplyType:
     * </pre>
     */
    public boolean hasRsvp() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 rsvp = 30;</code>
     *
     * <pre>
     * this is an or of bits in ReplyType:
     * </pre>
     */
    public int getRsvp() {
      return rsvp_;
    }

    public static final int IN_REPLY_TO_FIELD_NUMBER = 33;
    private pb.Types.ContainerType inReplyTo_;
    /**
     * <code>optional .pb.ContainerType in_reply_to = 33;</code>
     */
    public boolean hasInReplyTo() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional .pb.ContainerType in_reply_to = 33;</code>
     */
    public pb.Types.ContainerType getInReplyTo() {
      return inReplyTo_;
    }

    public static final int RCS_STATUS_FIELD_NUMBER = 35;
    private pb.Types.RCS_STATUS rcsStatus_;
    /**
     * <code>optional .pb.RCS_STATUS rcs_status = 35;</code>
     */
    public boolean hasRcsStatus() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .pb.RCS_STATUS rcs_status = 35;</code>
     */
    public pb.Types.RCS_STATUS getRcsStatus() {
      return rcsStatus_;
    }

    public static final int STATUS_FIELD_NUMBER = 40;
    private pb.Types.StatusType status_;
    /**
     * <code>optional .pb.StatusType status = 40;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .pb.StatusType status = 40;</code>
     */
    public pb.Types.StatusType getStatus() {
      return status_;
    }

    public static final int SERIAL_FIELD_NUMBER = 45;
    private int serial_;
    /**
     * <code>optional int32 serial = 45;</code>
     *
     * <pre>
     * legacy command serials
     * </pre>
     */
    public boolean hasSerial() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 serial = 45;</code>
     *
     * <pre>
     * legacy command serials
     * </pre>
     */
    public int getSerial() {
      return serial_;
    }

    public static final int REPLY_SERIAL_FIELD_NUMBER = 50;
    private int replySerial_;
    /**
     * <code>optional int32 reply_serial = 50;</code>
     *
     * <pre>
     * echoes the legacy command serial
     * </pre>
     */
    public boolean hasReplySerial() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 reply_serial = 50;</code>
     *
     * <pre>
     * echoes the legacy command serial
     * </pre>
     */
    public int getReplySerial() {
      return replySerial_;
    }

    public static final int TICKET_FIELD_NUMBER = 55;
    private int ticket_;
    /**
     * <code>optional int32 ticket = 55;</code>
     *
     * <pre>
     * command serials
     * </pre>
     */
    public boolean hasTicket() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 ticket = 55;</code>
     *
     * <pre>
     * command serials
     * </pre>
     */
    public int getTicket() {
      return ticket_;
    }

    public static final int REPLY_TICKET_FIELD_NUMBER = 60;
    private int replyTicket_;
    /**
     * <code>optional int32 reply_ticket = 60;</code>
     *
     * <pre>
     * echoes the legacy command serial
     * </pre>
     */
    public boolean hasReplyTicket() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 reply_ticket = 60;</code>
     *
     * <pre>
     * echoes the legacy command serial
     * </pre>
     */
    public int getReplyTicket() {
      return replyTicket_;
    }

    public static final int SEQUENCE_FIELD_NUMBER = 62;
    private int sequence_;
    /**
     * <code>optional int32 sequence = 62;</code>
     *
     * <pre>
     * Credit based flow control: http://hintjens.com/blog:15
     * </pre>
     */
    public boolean hasSequence() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 sequence = 62;</code>
     *
     * <pre>
     * Credit based flow control: http://hintjens.com/blog:15
     * </pre>
     */
    public int getSequence() {
      return sequence_;
    }

    public static final int CREDIT_FIELD_NUMBER = 65;
    private int credit_;
    /**
     * <code>optional int32 credit = 65;</code>
     *
     * <pre>
     * updated by consumer
     * </pre>
     */
    public boolean hasCredit() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 credit = 65;</code>
     *
     * <pre>
     * updated by consumer
     * </pre>
     */
    public int getCredit() {
      return credit_;
    }

    public static final int LINE_NUMBER_FIELD_NUMBER = 66;
    private int lineNumber_;
    /**
     * <code>optional int32 line_number = 66;</code>
     *
     * <pre>
     * legacy line number as conveyed on interplist
     * to be replaced by source context
     * </pre>
     */
    public boolean hasLineNumber() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 line_number = 66;</code>
     *
     * <pre>
     * legacy line number as conveyed on interplist
     * to be replaced by source context
     * </pre>
     */
    public int getLineNumber() {
      return lineNumber_;
    }

    public static final int NAME_FIELD_NUMBER = 67;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 67;</code>
     *
     * <pre>
     * used with MT_MESSAGEBUS_NO_DESTINATION
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional string name = 67;</code>
     *
     * <pre>
     * used with MT_MESSAGEBUS_NO_DESTINATION
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 67;</code>
     *
     * <pre>
     * used with MT_MESSAGEBUS_NO_DESTINATION
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NOTE_FIELD_NUMBER = 68;
    private com.google.protobuf.LazyStringList note_;
    /**
     * <code>repeated string note = 68;</code>
     *
     * <pre>
     * easy tack-on for debugging
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getNoteList() {
      return note_;
    }
    /**
     * <code>repeated string note = 68;</code>
     *
     * <pre>
     * easy tack-on for debugging
     * </pre>
     */
    public int getNoteCount() {
      return note_.size();
    }
    /**
     * <code>repeated string note = 68;</code>
     *
     * <pre>
     * easy tack-on for debugging
     * </pre>
     */
    public java.lang.String getNote(int index) {
      return note_.get(index);
    }
    /**
     * <code>repeated string note = 68;</code>
     *
     * <pre>
     * easy tack-on for debugging
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNoteBytes(int index) {
      return note_.getByteString(index);
    }

    public static final int RETCODE_FIELD_NUMBER = 69;
    private int retcode_;
    /**
     * <code>optional int32 retcode = 69;</code>
     *
     * <pre>
     * all purpose integer return code
     * </pre>
     */
    public boolean hasRetcode() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int32 retcode = 69;</code>
     *
     * <pre>
     * all purpose integer return code
     * </pre>
     */
    public int getRetcode() {
      return retcode_;
    }

    public static final int UUID_FIELD_NUMBER = 72;
    private com.google.protobuf.ByteString uuid_;
    /**
     * <code>optional bytes uuid = 72;</code>
     *
     * <pre>
     * uuid helps distinguish server instances
     * </pre>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional bytes uuid = 72;</code>
     *
     * <pre>
     * uuid helps distinguish server instances
     * </pre>
     */
    public com.google.protobuf.ByteString getUuid() {
      return uuid_;
    }

    public static final int TRACE_FIELD_NUMBER = 75;
    private boolean trace_;
    /**
     * <code>optional bool trace = 75;</code>
     *
     * <pre>
     * log from intermediaries
     * </pre>
     */
    public boolean hasTrace() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool trace = 75;</code>
     *
     * <pre>
     * log from intermediaries
     * </pre>
     */
    public boolean getTrace() {
      return trace_;
    }

    public static final int INSTANCE_FIELD_NUMBER = 77;
    private int instance_;
    /**
     * <code>optional int32 instance = 77;</code>
     *
     * <pre>
     * RTAPI instance if nonzero
     * </pre>
     */
    public boolean hasInstance() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 instance = 77;</code>
     *
     * <pre>
     * RTAPI instance if nonzero
     * </pre>
     */
    public int getInstance() {
      return instance_;
    }

    public static final int VALUE_FIELD_NUMBER = 85;
    private java.util.List<pb.ValueOuterClass.Value> value_;
    /**
     * <code>repeated .pb.Value value = 85;</code>
     *
     * <pre>
     * generalized polymorphic argument list
     * </pre>
     */
    public java.util.List<pb.ValueOuterClass.Value> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .pb.Value value = 85;</code>
     *
     * <pre>
     * generalized polymorphic argument list
     * </pre>
     */
    public java.util.List<? extends pb.ValueOuterClass.ValueOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .pb.Value value = 85;</code>
     *
     * <pre>
     * generalized polymorphic argument list
     * </pre>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .pb.Value value = 85;</code>
     *
     * <pre>
     * generalized polymorphic argument list
     * </pre>
     */
    public pb.ValueOuterClass.Value getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .pb.Value value = 85;</code>
     *
     * <pre>
     * generalized polymorphic argument list
     * </pre>
     */
    public pb.ValueOuterClass.ValueOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    public static final int RTAPICMD_FIELD_NUMBER = 86;
    private pb.Rtapicommand.RTAPICommand rtapicmd_;
    /**
     * <code>optional .pb.RTAPICommand rtapicmd = 86;</code>
     */
    public boolean hasRtapicmd() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .pb.RTAPICommand rtapicmd = 86;</code>
     */
    public pb.Rtapicommand.RTAPICommand getRtapicmd() {
      return rtapicmd_;
    }
    /**
     * <code>optional .pb.RTAPICommand rtapicmd = 86;</code>
     */
    public pb.Rtapicommand.RTAPICommandOrBuilder getRtapicmdOrBuilder() {
      return rtapicmd_;
    }

    public static final int SERVICE_ANNOUNCEMENT_FIELD_NUMBER = 88;
    private java.util.List<pb.Object.ServiceAnnouncement> serviceAnnouncement_;
    /**
     * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
     *
     * <pre>
     * a reply may carry several service announcements:
     * </pre>
     */
    public java.util.List<pb.Object.ServiceAnnouncement> getServiceAnnouncementList() {
      return serviceAnnouncement_;
    }
    /**
     * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
     *
     * <pre>
     * a reply may carry several service announcements:
     * </pre>
     */
    public java.util.List<? extends pb.Object.ServiceAnnouncementOrBuilder> 
        getServiceAnnouncementOrBuilderList() {
      return serviceAnnouncement_;
    }
    /**
     * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
     *
     * <pre>
     * a reply may carry several service announcements:
     * </pre>
     */
    public int getServiceAnnouncementCount() {
      return serviceAnnouncement_.size();
    }
    /**
     * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
     *
     * <pre>
     * a reply may carry several service announcements:
     * </pre>
     */
    public pb.Object.ServiceAnnouncement getServiceAnnouncement(int index) {
      return serviceAnnouncement_.get(index);
    }
    /**
     * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
     *
     * <pre>
     * a reply may carry several service announcements:
     * </pre>
     */
    public pb.Object.ServiceAnnouncementOrBuilder getServiceAnnouncementOrBuilder(
        int index) {
      return serviceAnnouncement_.get(index);
    }

    public static final int COMP_FIELD_NUMBER = 100;
    private java.util.List<pb.Object.Component> comp_;
    /**
     * <code>repeated .pb.Component comp = 100;</code>
     *
     * <pre>
     * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
     * </pre>
     */
    public java.util.List<pb.Object.Component> getCompList() {
      return comp_;
    }
    /**
     * <code>repeated .pb.Component comp = 100;</code>
     *
     * <pre>
     * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
     * </pre>
     */
    public java.util.List<? extends pb.Object.ComponentOrBuilder> 
        getCompOrBuilderList() {
      return comp_;
    }
    /**
     * <code>repeated .pb.Component comp = 100;</code>
     *
     * <pre>
     * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
     * </pre>
     */
    public int getCompCount() {
      return comp_.size();
    }
    /**
     * <code>repeated .pb.Component comp = 100;</code>
     *
     * <pre>
     * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
     * </pre>
     */
    public pb.Object.Component getComp(int index) {
      return comp_.get(index);
    }
    /**
     * <code>repeated .pb.Component comp = 100;</code>
     *
     * <pre>
     * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
     * </pre>
     */
    public pb.Object.ComponentOrBuilder getCompOrBuilder(
        int index) {
      return comp_.get(index);
    }

    public static final int PIN_FIELD_NUMBER = 2;
    private java.util.List<pb.Object.Pin> pin_;
    /**
     * <code>repeated .pb.Pin pin = 2;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    public java.util.List<pb.Object.Pin> getPinList() {
      return pin_;
    }
    /**
     * <code>repeated .pb.Pin pin = 2;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    public java.util.List<? extends pb.Object.PinOrBuilder> 
        getPinOrBuilderList() {
      return pin_;
    }
    /**
     * <code>repeated .pb.Pin pin = 2;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    public int getPinCount() {
      return pin_.size();
    }
    /**
     * <code>repeated .pb.Pin pin = 2;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    public pb.Object.Pin getPin(int index) {
      return pin_.get(index);
    }
    /**
     * <code>repeated .pb.Pin pin = 2;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    public pb.Object.PinOrBuilder getPinOrBuilder(
        int index) {
      return pin_.get(index);
    }

    public static final int SIGNAL_FIELD_NUMBER = 3;
    private java.util.List<pb.Object.Signal> signal_;
    /**
     * <code>repeated .pb.Signal signal = 3;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    public java.util.List<pb.Object.Signal> getSignalList() {
      return signal_;
    }
    /**
     * <code>repeated .pb.Signal signal = 3;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    public java.util.List<? extends pb.Object.SignalOrBuilder> 
        getSignalOrBuilderList() {
      return signal_;
    }
    /**
     * <code>repeated .pb.Signal signal = 3;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    public int getSignalCount() {
      return signal_.size();
    }
    /**
     * <code>repeated .pb.Signal signal = 3;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    public pb.Object.Signal getSignal(int index) {
      return signal_.get(index);
    }
    /**
     * <code>repeated .pb.Signal signal = 3;</code>
     *
     * <pre>
     * high frequency - use single byte tag
     * </pre>
     */
    public pb.Object.SignalOrBuilder getSignalOrBuilder(
        int index) {
      return signal_.get(index);
    }

    public static final int PARAM_FIELD_NUMBER = 103;
    private java.util.List<pb.Object.Param> param_;
    /**
     * <code>repeated .pb.Param param = 103;</code>
     */
    public java.util.List<pb.Object.Param> getParamList() {
      return param_;
    }
    /**
     * <code>repeated .pb.Param param = 103;</code>
     */
    public java.util.List<? extends pb.Object.ParamOrBuilder> 
        getParamOrBuilderList() {
      return param_;
    }
    /**
     * <code>repeated .pb.Param param = 103;</code>
     */
    public int getParamCount() {
      return param_.size();
    }
    /**
     * <code>repeated .pb.Param param = 103;</code>
     */
    public pb.Object.Param getParam(int index) {
      return param_.get(index);
    }
    /**
     * <code>repeated .pb.Param param = 103;</code>
     */
    public pb.Object.ParamOrBuilder getParamOrBuilder(
        int index) {
      return param_.get(index);
    }

    public static final int THREAD_FIELD_NUMBER = 104;
    private java.util.List<pb.Object.Thread> thread_;
    /**
     * <code>repeated .pb.Thread thread = 104;</code>
     */
    public java.util.List<pb.Object.Thread> getThreadList() {
      return thread_;
    }
    /**
     * <code>repeated .pb.Thread thread = 104;</code>
     */
    public java.util.List<? extends pb.Object.ThreadOrBuilder> 
        getThreadOrBuilderList() {
      return thread_;
    }
    /**
     * <code>repeated .pb.Thread thread = 104;</code>
     */
    public int getThreadCount() {
      return thread_.size();
    }
    /**
     * <code>repeated .pb.Thread thread = 104;</code>
     */
    public pb.Object.Thread getThread(int index) {
      return thread_.get(index);
    }
    /**
     * <code>repeated .pb.Thread thread = 104;</code>
     */
    public pb.Object.ThreadOrBuilder getThreadOrBuilder(
        int index) {
      return thread_.get(index);
    }

    public static final int RING_FIELD_NUMBER = 105;
    private java.util.List<pb.Object.Ring> ring_;
    /**
     * <code>repeated .pb.Ring ring = 105;</code>
     */
    public java.util.List<pb.Object.Ring> getRingList() {
      return ring_;
    }
    /**
     * <code>repeated .pb.Ring ring = 105;</code>
     */
    public java.util.List<? extends pb.Object.RingOrBuilder> 
        getRingOrBuilderList() {
      return ring_;
    }
    /**
     * <code>repeated .pb.Ring ring = 105;</code>
     */
    public int getRingCount() {
      return ring_.size();
    }
    /**
     * <code>repeated .pb.Ring ring = 105;</code>
     */
    public pb.Object.Ring getRing(int index) {
      return ring_.get(index);
    }
    /**
     * <code>repeated .pb.Ring ring = 105;</code>
     */
    public pb.Object.RingOrBuilder getRingOrBuilder(
        int index) {
      return ring_.get(index);
    }

    public static final int GROUP_FIELD_NUMBER = 106;
    private java.util.List<pb.Object.Group> group_;
    /**
     * <code>repeated .pb.Group group = 106;</code>
     */
    public java.util.List<pb.Object.Group> getGroupList() {
      return group_;
    }
    /**
     * <code>repeated .pb.Group group = 106;</code>
     */
    public java.util.List<? extends pb.Object.GroupOrBuilder> 
        getGroupOrBuilderList() {
      return group_;
    }
    /**
     * <code>repeated .pb.Group group = 106;</code>
     */
    public int getGroupCount() {
      return group_.size();
    }
    /**
     * <code>repeated .pb.Group group = 106;</code>
     */
    public pb.Object.Group getGroup(int index) {
      return group_.get(index);
    }
    /**
     * <code>repeated .pb.Group group = 106;</code>
     */
    public pb.Object.GroupOrBuilder getGroupOrBuilder(
        int index) {
      return group_.get(index);
    }

    public static final int MEMBER_FIELD_NUMBER = 107;
    private java.util.List<pb.Object.Member> member_;
    /**
     * <code>repeated .pb.Member member = 107;</code>
     */
    public java.util.List<pb.Object.Member> getMemberList() {
      return member_;
    }
    /**
     * <code>repeated .pb.Member member = 107;</code>
     */
    public java.util.List<? extends pb.Object.MemberOrBuilder> 
        getMemberOrBuilderList() {
      return member_;
    }
    /**
     * <code>repeated .pb.Member member = 107;</code>
     */
    public int getMemberCount() {
      return member_.size();
    }
    /**
     * <code>repeated .pb.Member member = 107;</code>
     */
    public pb.Object.Member getMember(int index) {
      return member_.get(index);
    }
    /**
     * <code>repeated .pb.Member member = 107;</code>
     */
    public pb.Object.MemberOrBuilder getMemberOrBuilder(
        int index) {
      return member_.get(index);
    }

    public static final int FUNCTION_FIELD_NUMBER = 108;
    private java.util.List<pb.Object.Function> function_;
    /**
     * <code>repeated .pb.Function function = 108;</code>
     */
    public java.util.List<pb.Object.Function> getFunctionList() {
      return function_;
    }
    /**
     * <code>repeated .pb.Function function = 108;</code>
     */
    public java.util.List<? extends pb.Object.FunctionOrBuilder> 
        getFunctionOrBuilderList() {
      return function_;
    }
    /**
     * <code>repeated .pb.Function function = 108;</code>
     */
    public int getFunctionCount() {
      return function_.size();
    }
    /**
     * <code>repeated .pb.Function function = 108;</code>
     */
    public pb.Object.Function getFunction(int index) {
      return function_.get(index);
    }
    /**
     * <code>repeated .pb.Function function = 108;</code>
     */
    public pb.Object.FunctionOrBuilder getFunctionOrBuilder(
        int index) {
      return function_.get(index);
    }

    public static final int PPARAMS_FIELD_NUMBER = 109;
    private pb.Object.ProtocolParameters pparams_;
    /**
     * <code>optional .pb.ProtocolParameters pparams = 109;</code>
     */
    public boolean hasPparams() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .pb.ProtocolParameters pparams = 109;</code>
     */
    public pb.Object.ProtocolParameters getPparams() {
      return pparams_;
    }
    /**
     * <code>optional .pb.ProtocolParameters pparams = 109;</code>
     */
    public pb.Object.ProtocolParametersOrBuilder getPparamsOrBuilder() {
      return pparams_;
    }

    public static final int VTABLE_FIELD_NUMBER = 110;
    private java.util.List<pb.Object.Vtable> vtable_;
    /**
     * <code>repeated .pb.Vtable vtable = 110;</code>
     */
    public java.util.List<pb.Object.Vtable> getVtableList() {
      return vtable_;
    }
    /**
     * <code>repeated .pb.Vtable vtable = 110;</code>
     */
    public java.util.List<? extends pb.Object.VtableOrBuilder> 
        getVtableOrBuilderList() {
      return vtable_;
    }
    /**
     * <code>repeated .pb.Vtable vtable = 110;</code>
     */
    public int getVtableCount() {
      return vtable_.size();
    }
    /**
     * <code>repeated .pb.Vtable vtable = 110;</code>
     */
    public pb.Object.Vtable getVtable(int index) {
      return vtable_.get(index);
    }
    /**
     * <code>repeated .pb.Vtable vtable = 110;</code>
     */
    public pb.Object.VtableOrBuilder getVtableOrBuilder(
        int index) {
      return vtable_.get(index);
    }

    public static final int INST_FIELD_NUMBER = 111;
    private java.util.List<pb.Object.Inst> inst_;
    /**
     * <code>repeated .pb.Inst inst = 111;</code>
     */
    public java.util.List<pb.Object.Inst> getInstList() {
      return inst_;
    }
    /**
     * <code>repeated .pb.Inst inst = 111;</code>
     */
    public java.util.List<? extends pb.Object.InstOrBuilder> 
        getInstOrBuilderList() {
      return inst_;
    }
    /**
     * <code>repeated .pb.Inst inst = 111;</code>
     */
    public int getInstCount() {
      return inst_.size();
    }
    /**
     * <code>repeated .pb.Inst inst = 111;</code>
     */
    public pb.Object.Inst getInst(int index) {
      return inst_.get(index);
    }
    /**
     * <code>repeated .pb.Inst inst = 111;</code>
     */
    public pb.Object.InstOrBuilder getInstOrBuilder(
        int index) {
      return inst_.get(index);
    }

    public static final int APP_FIELD_NUMBER = 120;
    private java.util.List<pb.Config.Application> app_;
    /**
     * <code>repeated .pb.Application app = 120;</code>
     *
     * <pre>
     * the app field is  included as a reply to
     * a MT_LIST_APPLICATIONS and
     * MT_RETRIEVE_APPLICATION message
     * </pre>
     */
    public java.util.List<pb.Config.Application> getAppList() {
      return app_;
    }
    /**
     * <code>repeated .pb.Application app = 120;</code>
     *
     * <pre>
     * the app field is  included as a reply to
     * a MT_LIST_APPLICATIONS and
     * MT_RETRIEVE_APPLICATION message
     * </pre>
     */
    public java.util.List<? extends pb.Config.ApplicationOrBuilder> 
        getAppOrBuilderList() {
      return app_;
    }
    /**
     * <code>repeated .pb.Application app = 120;</code>
     *
     * <pre>
     * the app field is  included as a reply to
     * a MT_LIST_APPLICATIONS and
     * MT_RETRIEVE_APPLICATION message
     * </pre>
     */
    public int getAppCount() {
      return app_.size();
    }
    /**
     * <code>repeated .pb.Application app = 120;</code>
     *
     * <pre>
     * the app field is  included as a reply to
     * a MT_LIST_APPLICATIONS and
     * MT_RETRIEVE_APPLICATION message
     * </pre>
     */
    public pb.Config.Application getApp(int index) {
      return app_.get(index);
    }
    /**
     * <code>repeated .pb.Application app = 120;</code>
     *
     * <pre>
     * the app field is  included as a reply to
     * a MT_LIST_APPLICATIONS and
     * MT_RETRIEVE_APPLICATION message
     * </pre>
     */
    public pb.Config.ApplicationOrBuilder getAppOrBuilder(
        int index) {
      return app_.get(index);
    }

    public static final int LAUNCHER_FIELD_NUMBER = 130;
    private java.util.List<pb.Config.Launcher> launcher_;
    /**
     * <code>repeated .pb.Launcher launcher = 130;</code>
     *
     * <pre>
     * the launcher field is reported by
     * a MT_LAUNCHER_FULL_UPDATE
     * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
     * </pre>
     */
    public java.util.List<pb.Config.Launcher> getLauncherList() {
      return launcher_;
    }
    /**
     * <code>repeated .pb.Launcher launcher = 130;</code>
     *
     * <pre>
     * the launcher field is reported by
     * a MT_LAUNCHER_FULL_UPDATE
     * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
     * </pre>
     */
    public java.util.List<? extends pb.Config.LauncherOrBuilder> 
        getLauncherOrBuilderList() {
      return launcher_;
    }
    /**
     * <code>repeated .pb.Launcher launcher = 130;</code>
     *
     * <pre>
     * the launcher field is reported by
     * a MT_LAUNCHER_FULL_UPDATE
     * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
     * </pre>
     */
    public int getLauncherCount() {
      return launcher_.size();
    }
    /**
     * <code>repeated .pb.Launcher launcher = 130;</code>
     *
     * <pre>
     * the launcher field is reported by
     * a MT_LAUNCHER_FULL_UPDATE
     * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
     * </pre>
     */
    public pb.Config.Launcher getLauncher(int index) {
      return launcher_.get(index);
    }
    /**
     * <code>repeated .pb.Launcher launcher = 130;</code>
     *
     * <pre>
     * the launcher field is reported by
     * a MT_LAUNCHER_FULL_UPDATE
     * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
     * </pre>
     */
    public pb.Config.LauncherOrBuilder getLauncherOrBuilder(
        int index) {
      return launcher_.get(index);
    }

    public static final int INDEX_FIELD_NUMBER = 131;
    private int index_;
    /**
     * <code>optional int32 index = 131;</code>
     */
    public boolean hasIndex() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 index = 131;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int LOG_MESSAGE_FIELD_NUMBER = 87;
    private pb.Log.LogMessage logMessage_;
    /**
     * <code>optional .pb.LogMessage log_message = 87;</code>
     *
     * <pre>
     * infrequent compound messages
     *optional bytes         wou            = 160;  // Arais Wishbone-over-USB
     * </pre>
     */
    public boolean hasLogMessage() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .pb.LogMessage log_message = 87;</code>
     *
     * <pre>
     * infrequent compound messages
     *optional bytes         wou            = 160;  // Arais Wishbone-over-USB
     * </pre>
     */
    public pb.Log.LogMessage getLogMessage() {
      return logMessage_;
    }
    /**
     * <code>optional .pb.LogMessage log_message = 87;</code>
     *
     * <pre>
     * infrequent compound messages
     *optional bytes         wou            = 160;  // Arais Wishbone-over-USB
     * </pre>
     */
    public pb.Log.LogMessageOrBuilder getLogMessageOrBuilder() {
      return logMessage_;
    }

    public static final int TPEXECUTE_FIELD_NUMBER = 200;
    private pb.Task.TaskPlanExecute tpexecute_;
    /**
     * <code>optional .pb.TaskPlanExecute tpexecute = 200;</code>
     *
     * <pre>
     * taskplan (interpreter command) messages
     * </pre>
     */
    public boolean hasTpexecute() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .pb.TaskPlanExecute tpexecute = 200;</code>
     *
     * <pre>
     * taskplan (interpreter command) messages
     * </pre>
     */
    public pb.Task.TaskPlanExecute getTpexecute() {
      return tpexecute_;
    }
    /**
     * <code>optional .pb.TaskPlanExecute tpexecute = 200;</code>
     *
     * <pre>
     * taskplan (interpreter command) messages
     * </pre>
     */
    public pb.Task.TaskPlanExecuteOrBuilder getTpexecuteOrBuilder() {
      return tpexecute_;
    }

    public static final int TPBLOCKDELETE_FIELD_NUMBER = 201;
    private pb.Task.TaskPlanBlockDelete tpblockdelete_;
    /**
     * <code>optional .pb.TaskPlanBlockDelete tpblockdelete = 201;</code>
     */
    public boolean hasTpblockdelete() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .pb.TaskPlanBlockDelete tpblockdelete = 201;</code>
     */
    public pb.Task.TaskPlanBlockDelete getTpblockdelete() {
      return tpblockdelete_;
    }
    /**
     * <code>optional .pb.TaskPlanBlockDelete tpblockdelete = 201;</code>
     */
    public pb.Task.TaskPlanBlockDeleteOrBuilder getTpblockdeleteOrBuilder() {
      return tpblockdelete_;
    }

    public static final int TPOPTIONALSTOP_FIELD_NUMBER = 202;
    private pb.Task.TaskPlanOptionalStop tpoptionalstop_;
    /**
     * <code>optional .pb.TaskPlanOptionalStop tpoptionalstop = 202;</code>
     */
    public boolean hasTpoptionalstop() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .pb.TaskPlanOptionalStop tpoptionalstop = 202;</code>
     */
    public pb.Task.TaskPlanOptionalStop getTpoptionalstop() {
      return tpoptionalstop_;
    }
    /**
     * <code>optional .pb.TaskPlanOptionalStop tpoptionalstop = 202;</code>
     */
    public pb.Task.TaskPlanOptionalStopOrBuilder getTpoptionalstopOrBuilder() {
      return tpoptionalstop_;
    }

    public static final int TPOPEN_FIELD_NUMBER = 203;
    private pb.Task.TaskPlanOpen tpopen_;
    /**
     * <code>optional .pb.TaskPlanOpen tpopen = 203;</code>
     */
    public boolean hasTpopen() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .pb.TaskPlanOpen tpopen = 203;</code>
     */
    public pb.Task.TaskPlanOpen getTpopen() {
      return tpopen_;
    }
    /**
     * <code>optional .pb.TaskPlanOpen tpopen = 203;</code>
     */
    public pb.Task.TaskPlanOpenOrBuilder getTpopenOrBuilder() {
      return tpopen_;
    }

    public static final int TASKPLAN_REPLY_FIELD_NUMBER = 210;
    private pb.Task.TaskPlanReply taskplanReply_;
    /**
     * <code>optional .pb.TaskPlanReply taskplan_reply = 210;</code>
     *
     * <pre>
     * interpreter reply
     * </pre>
     */
    public boolean hasTaskplanReply() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .pb.TaskPlanReply taskplan_reply = 210;</code>
     *
     * <pre>
     * interpreter reply
     * </pre>
     */
    public pb.Task.TaskPlanReply getTaskplanReply() {
      return taskplanReply_;
    }
    /**
     * <code>optional .pb.TaskPlanReply taskplan_reply = 210;</code>
     *
     * <pre>
     * interpreter reply
     * </pre>
     */
    public pb.Task.TaskPlanReplyOrBuilder getTaskplanReplyOrBuilder() {
      return taskplanReply_;
    }

    public static final int TRAJ_SET_G5X_FIELD_NUMBER = 300;
    private pb.Canon.Emc_Traj_Set_G5x trajSetG5X_;
    /**
     * <code>optional .pb.Emc_Traj_Set_G5x traj_set_g5x = 300;</code>
     *
     * <pre>
     * canon messages
     * </pre>
     */
    public boolean hasTrajSetG5X() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_G5x traj_set_g5x = 300;</code>
     *
     * <pre>
     * canon messages
     * </pre>
     */
    public pb.Canon.Emc_Traj_Set_G5x getTrajSetG5X() {
      return trajSetG5X_;
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_G5x traj_set_g5x = 300;</code>
     *
     * <pre>
     * canon messages
     * </pre>
     */
    public pb.Canon.Emc_Traj_Set_G5xOrBuilder getTrajSetG5XOrBuilder() {
      return trajSetG5X_;
    }

    public static final int TRAJ_SET_G92_FIELD_NUMBER = 310;
    private pb.Canon.Emc_Traj_Set_G92 trajSetG92_;
    /**
     * <code>optional .pb.Emc_Traj_Set_G92 traj_set_g92 = 310;</code>
     */
    public boolean hasTrajSetG92() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_G92 traj_set_g92 = 310;</code>
     */
    public pb.Canon.Emc_Traj_Set_G92 getTrajSetG92() {
      return trajSetG92_;
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_G92 traj_set_g92 = 310;</code>
     */
    public pb.Canon.Emc_Traj_Set_G92OrBuilder getTrajSetG92OrBuilder() {
      return trajSetG92_;
    }

    public static final int TRAJ_SET_ROTATION_FIELD_NUMBER = 320;
    private pb.Canon.Emc_Traj_Set_Rotation trajSetRotation_;
    /**
     * <code>optional .pb.Emc_Traj_Set_Rotation traj_set_rotation = 320;</code>
     */
    public boolean hasTrajSetRotation() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_Rotation traj_set_rotation = 320;</code>
     */
    public pb.Canon.Emc_Traj_Set_Rotation getTrajSetRotation() {
      return trajSetRotation_;
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_Rotation traj_set_rotation = 320;</code>
     */
    public pb.Canon.Emc_Traj_Set_RotationOrBuilder getTrajSetRotationOrBuilder() {
      return trajSetRotation_;
    }

    public static final int TRAJ_LINEAR_MOVE_FIELD_NUMBER = 330;
    private pb.Canon.Emc_Traj_Linear_Move trajLinearMove_;
    /**
     * <code>optional .pb.Emc_Traj_Linear_Move traj_linear_move = 330;</code>
     */
    public boolean hasTrajLinearMove() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .pb.Emc_Traj_Linear_Move traj_linear_move = 330;</code>
     */
    public pb.Canon.Emc_Traj_Linear_Move getTrajLinearMove() {
      return trajLinearMove_;
    }
    /**
     * <code>optional .pb.Emc_Traj_Linear_Move traj_linear_move = 330;</code>
     */
    public pb.Canon.Emc_Traj_Linear_MoveOrBuilder getTrajLinearMoveOrBuilder() {
      return trajLinearMove_;
    }

    public static final int TRAJ_PROBE_FIELD_NUMBER = 340;
    private pb.Canon.Emc_Traj_Probe trajProbe_;
    /**
     * <code>optional .pb.Emc_Traj_Probe traj_probe = 340;</code>
     */
    public boolean hasTrajProbe() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .pb.Emc_Traj_Probe traj_probe = 340;</code>
     */
    public pb.Canon.Emc_Traj_Probe getTrajProbe() {
      return trajProbe_;
    }
    /**
     * <code>optional .pb.Emc_Traj_Probe traj_probe = 340;</code>
     */
    public pb.Canon.Emc_Traj_ProbeOrBuilder getTrajProbeOrBuilder() {
      return trajProbe_;
    }

    public static final int TRAJ_CIRCULAR_MOVE_FIELD_NUMBER = 350;
    private pb.Canon.Emc_Traj_Circular_Move trajCircularMove_;
    /**
     * <code>optional .pb.Emc_Traj_Circular_Move traj_circular_move = 350;</code>
     */
    public boolean hasTrajCircularMove() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .pb.Emc_Traj_Circular_Move traj_circular_move = 350;</code>
     */
    public pb.Canon.Emc_Traj_Circular_Move getTrajCircularMove() {
      return trajCircularMove_;
    }
    /**
     * <code>optional .pb.Emc_Traj_Circular_Move traj_circular_move = 350;</code>
     */
    public pb.Canon.Emc_Traj_Circular_MoveOrBuilder getTrajCircularMoveOrBuilder() {
      return trajCircularMove_;
    }

    public static final int TRAJ_RIGID_TAP_FIELD_NUMBER = 360;
    private pb.Canon.Emc_Traj_Rigid_Tap trajRigidTap_;
    /**
     * <code>optional .pb.Emc_Traj_Rigid_Tap traj_rigid_tap = 360;</code>
     */
    public boolean hasTrajRigidTap() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .pb.Emc_Traj_Rigid_Tap traj_rigid_tap = 360;</code>
     */
    public pb.Canon.Emc_Traj_Rigid_Tap getTrajRigidTap() {
      return trajRigidTap_;
    }
    /**
     * <code>optional .pb.Emc_Traj_Rigid_Tap traj_rigid_tap = 360;</code>
     */
    public pb.Canon.Emc_Traj_Rigid_TapOrBuilder getTrajRigidTapOrBuilder() {
      return trajRigidTap_;
    }

    public static final int TRAJ_SET_TERM_COND_FIELD_NUMBER = 370;
    private pb.Canon.Emc_Traj_Set_Term_Cond trajSetTermCond_;
    /**
     * <code>optional .pb.Emc_Traj_Set_Term_Cond traj_set_term_cond = 370;</code>
     */
    public boolean hasTrajSetTermCond() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_Term_Cond traj_set_term_cond = 370;</code>
     */
    public pb.Canon.Emc_Traj_Set_Term_Cond getTrajSetTermCond() {
      return trajSetTermCond_;
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_Term_Cond traj_set_term_cond = 370;</code>
     */
    public pb.Canon.Emc_Traj_Set_Term_CondOrBuilder getTrajSetTermCondOrBuilder() {
      return trajSetTermCond_;
    }

    public static final int TRAJ_SET_SPINDLESYNC_FIELD_NUMBER = 380;
    private pb.Canon.Emc_Traj_Set_Spindlesync trajSetSpindlesync_;
    /**
     * <code>optional .pb.Emc_Traj_Set_Spindlesync traj_set_spindlesync = 380;</code>
     */
    public boolean hasTrajSetSpindlesync() {
      return ((bitField1_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_Spindlesync traj_set_spindlesync = 380;</code>
     */
    public pb.Canon.Emc_Traj_Set_Spindlesync getTrajSetSpindlesync() {
      return trajSetSpindlesync_;
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_Spindlesync traj_set_spindlesync = 380;</code>
     */
    public pb.Canon.Emc_Traj_Set_SpindlesyncOrBuilder getTrajSetSpindlesyncOrBuilder() {
      return trajSetSpindlesync_;
    }

    public static final int TRAJ_DELAY_FIELD_NUMBER = 390;
    private pb.Canon.Emc_Traj_Delay trajDelay_;
    /**
     * <code>optional .pb.Emc_Traj_Delay traj_delay = 390;</code>
     */
    public boolean hasTrajDelay() {
      return ((bitField1_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .pb.Emc_Traj_Delay traj_delay = 390;</code>
     */
    public pb.Canon.Emc_Traj_Delay getTrajDelay() {
      return trajDelay_;
    }
    /**
     * <code>optional .pb.Emc_Traj_Delay traj_delay = 390;</code>
     */
    public pb.Canon.Emc_Traj_DelayOrBuilder getTrajDelayOrBuilder() {
      return trajDelay_;
    }

    public static final int SPINDLE_ON_FIELD_NUMBER = 400;
    private pb.Canon.Emc_Spindle_On spindleOn_;
    /**
     * <code>optional .pb.Emc_Spindle_On spindle_on = 400;</code>
     */
    public boolean hasSpindleOn() {
      return ((bitField1_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .pb.Emc_Spindle_On spindle_on = 400;</code>
     */
    public pb.Canon.Emc_Spindle_On getSpindleOn() {
      return spindleOn_;
    }
    /**
     * <code>optional .pb.Emc_Spindle_On spindle_on = 400;</code>
     */
    public pb.Canon.Emc_Spindle_OnOrBuilder getSpindleOnOrBuilder() {
      return spindleOn_;
    }

    public static final int SPINDLE_SPEED_FIELD_NUMBER = 410;
    private pb.Canon.Emc_Spindle_Speed spindleSpeed_;
    /**
     * <code>optional .pb.Emc_Spindle_Speed spindle_speed = 410;</code>
     */
    public boolean hasSpindleSpeed() {
      return ((bitField1_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .pb.Emc_Spindle_Speed spindle_speed = 410;</code>
     */
    public pb.Canon.Emc_Spindle_Speed getSpindleSpeed() {
      return spindleSpeed_;
    }
    /**
     * <code>optional .pb.Emc_Spindle_Speed spindle_speed = 410;</code>
     */
    public pb.Canon.Emc_Spindle_SpeedOrBuilder getSpindleSpeedOrBuilder() {
      return spindleSpeed_;
    }

    public static final int SPINDLE_ORIENT_FIELD_NUMBER = 420;
    private pb.Canon.Emc_Spindle_Orient spindleOrient_;
    /**
     * <code>optional .pb.Emc_Spindle_Orient spindle_orient = 420;</code>
     */
    public boolean hasSpindleOrient() {
      return ((bitField1_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .pb.Emc_Spindle_Orient spindle_orient = 420;</code>
     */
    public pb.Canon.Emc_Spindle_Orient getSpindleOrient() {
      return spindleOrient_;
    }
    /**
     * <code>optional .pb.Emc_Spindle_Orient spindle_orient = 420;</code>
     */
    public pb.Canon.Emc_Spindle_OrientOrBuilder getSpindleOrientOrBuilder() {
      return spindleOrient_;
    }

    public static final int SPINDLE_WAIT_ORIENT_COMPLETE_FIELD_NUMBER = 430;
    private pb.Canon.Emc_Spindle_Wait_Orient_Complete spindleWaitOrientComplete_;
    /**
     * <code>optional .pb.Emc_Spindle_Wait_Orient_Complete spindle_wait_orient_complete = 430;</code>
     */
    public boolean hasSpindleWaitOrientComplete() {
      return ((bitField1_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional .pb.Emc_Spindle_Wait_Orient_Complete spindle_wait_orient_complete = 430;</code>
     */
    public pb.Canon.Emc_Spindle_Wait_Orient_Complete getSpindleWaitOrientComplete() {
      return spindleWaitOrientComplete_;
    }
    /**
     * <code>optional .pb.Emc_Spindle_Wait_Orient_Complete spindle_wait_orient_complete = 430;</code>
     */
    public pb.Canon.Emc_Spindle_Wait_Orient_CompleteOrBuilder getSpindleWaitOrientCompleteOrBuilder() {
      return spindleWaitOrientComplete_;
    }

    public static final int TOOL_SET_OFFET_FIELD_NUMBER = 440;
    private pb.Canon.Emc_Tool_Set_Offset toolSetOffet_;
    /**
     * <code>optional .pb.Emc_Tool_Set_Offset tool_set_offet = 440;</code>
     */
    public boolean hasToolSetOffet() {
      return ((bitField1_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional .pb.Emc_Tool_Set_Offset tool_set_offet = 440;</code>
     */
    public pb.Canon.Emc_Tool_Set_Offset getToolSetOffet() {
      return toolSetOffet_;
    }
    /**
     * <code>optional .pb.Emc_Tool_Set_Offset tool_set_offet = 440;</code>
     */
    public pb.Canon.Emc_Tool_Set_OffsetOrBuilder getToolSetOffetOrBuilder() {
      return toolSetOffet_;
    }

    public static final int TRAJ_SET_OFFSET_FIELD_NUMBER = 450;
    private pb.Canon.Emc_Traj_Set_Offset trajSetOffset_;
    /**
     * <code>optional .pb.Emc_Traj_Set_Offset traj_set_offset = 450;</code>
     */
    public boolean hasTrajSetOffset() {
      return ((bitField1_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_Offset traj_set_offset = 450;</code>
     */
    public pb.Canon.Emc_Traj_Set_Offset getTrajSetOffset() {
      return trajSetOffset_;
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_Offset traj_set_offset = 450;</code>
     */
    public pb.Canon.Emc_Traj_Set_OffsetOrBuilder getTrajSetOffsetOrBuilder() {
      return trajSetOffset_;
    }

    public static final int TOOL_PREPARE_FIELD_NUMBER = 460;
    private pb.Canon.Emc_Tool_Prepare toolPrepare_;
    /**
     * <code>optional .pb.Emc_Tool_Prepare tool_prepare = 460;</code>
     */
    public boolean hasToolPrepare() {
      return ((bitField1_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional .pb.Emc_Tool_Prepare tool_prepare = 460;</code>
     */
    public pb.Canon.Emc_Tool_Prepare getToolPrepare() {
      return toolPrepare_;
    }
    /**
     * <code>optional .pb.Emc_Tool_Prepare tool_prepare = 460;</code>
     */
    public pb.Canon.Emc_Tool_PrepareOrBuilder getToolPrepareOrBuilder() {
      return toolPrepare_;
    }

    public static final int TOOL_SET_NUMBER_FIELD_NUMBER = 470;
    private pb.Canon.Emc_Tool_Set_Number toolSetNumber_;
    /**
     * <code>optional .pb.Emc_Tool_Set_Number tool_set_number = 470;</code>
     */
    public boolean hasToolSetNumber() {
      return ((bitField1_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional .pb.Emc_Tool_Set_Number tool_set_number = 470;</code>
     */
    public pb.Canon.Emc_Tool_Set_Number getToolSetNumber() {
      return toolSetNumber_;
    }
    /**
     * <code>optional .pb.Emc_Tool_Set_Number tool_set_number = 470;</code>
     */
    public pb.Canon.Emc_Tool_Set_NumberOrBuilder getToolSetNumberOrBuilder() {
      return toolSetNumber_;
    }

    public static final int TRAJ_SET_FO_ENABLE_FIELD_NUMBER = 480;
    private pb.Canon.Emc_Traj_Set_Fo_Enable trajSetFoEnable_;
    /**
     * <code>optional .pb.Emc_Traj_Set_Fo_Enable traj_set_fo_enable = 480;</code>
     */
    public boolean hasTrajSetFoEnable() {
      return ((bitField1_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_Fo_Enable traj_set_fo_enable = 480;</code>
     */
    public pb.Canon.Emc_Traj_Set_Fo_Enable getTrajSetFoEnable() {
      return trajSetFoEnable_;
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_Fo_Enable traj_set_fo_enable = 480;</code>
     */
    public pb.Canon.Emc_Traj_Set_Fo_EnableOrBuilder getTrajSetFoEnableOrBuilder() {
      return trajSetFoEnable_;
    }

    public static final int TRAJ_SET_SO_ENABLE_FIELD_NUMBER = 490;
    private pb.Canon.Emc_Traj_Set_So_Enable trajSetSoEnable_;
    /**
     * <code>optional .pb.Emc_Traj_Set_So_Enable traj_set_so_enable = 490;</code>
     */
    public boolean hasTrajSetSoEnable() {
      return ((bitField1_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_So_Enable traj_set_so_enable = 490;</code>
     */
    public pb.Canon.Emc_Traj_Set_So_Enable getTrajSetSoEnable() {
      return trajSetSoEnable_;
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_So_Enable traj_set_so_enable = 490;</code>
     */
    public pb.Canon.Emc_Traj_Set_So_EnableOrBuilder getTrajSetSoEnableOrBuilder() {
      return trajSetSoEnable_;
    }

    public static final int TRAJ_SET_FH_ENABLE_FIELD_NUMBER = 500;
    private pb.Canon.Emc_Traj_Set_Fh_Enable trajSetFhEnable_;
    /**
     * <code>optional .pb.Emc_Traj_Set_Fh_Enable traj_set_fh_enable = 500;</code>
     */
    public boolean hasTrajSetFhEnable() {
      return ((bitField1_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_Fh_Enable traj_set_fh_enable = 500;</code>
     */
    public pb.Canon.Emc_Traj_Set_Fh_Enable getTrajSetFhEnable() {
      return trajSetFhEnable_;
    }
    /**
     * <code>optional .pb.Emc_Traj_Set_Fh_Enable traj_set_fh_enable = 500;</code>
     */
    public pb.Canon.Emc_Traj_Set_Fh_EnableOrBuilder getTrajSetFhEnableOrBuilder() {
      return trajSetFhEnable_;
    }

    public static final int MOTION_ADAPTIVE_FIELD_NUMBER = 510;
    private pb.Canon.Emc_Motion_Adaptive motionAdaptive_;
    /**
     * <code>optional .pb.Emc_Motion_Adaptive motion_adaptive = 510;</code>
     */
    public boolean hasMotionAdaptive() {
      return ((bitField2_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .pb.Emc_Motion_Adaptive motion_adaptive = 510;</code>
     */
    public pb.Canon.Emc_Motion_Adaptive getMotionAdaptive() {
      return motionAdaptive_;
    }
    /**
     * <code>optional .pb.Emc_Motion_Adaptive motion_adaptive = 510;</code>
     */
    public pb.Canon.Emc_Motion_AdaptiveOrBuilder getMotionAdaptiveOrBuilder() {
      return motionAdaptive_;
    }

    public static final int OPERATOR_DISPLAY_FIELD_NUMBER = 520;
    private pb.Canon.Emc_Operator_Display operatorDisplay_;
    /**
     * <code>optional .pb.Emc_Operator_Display operator_display = 520;</code>
     */
    public boolean hasOperatorDisplay() {
      return ((bitField2_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .pb.Emc_Operator_Display operator_display = 520;</code>
     */
    public pb.Canon.Emc_Operator_Display getOperatorDisplay() {
      return operatorDisplay_;
    }
    /**
     * <code>optional .pb.Emc_Operator_Display operator_display = 520;</code>
     */
    public pb.Canon.Emc_Operator_DisplayOrBuilder getOperatorDisplayOrBuilder() {
      return operatorDisplay_;
    }

    public static final int OPERATOR_TEXT_FIELD_NUMBER = 530;
    private pb.Canon.Emc_Operator_Text operatorText_;
    /**
     * <code>optional .pb.Emc_Operator_Text operator_text = 530;</code>
     */
    public boolean hasOperatorText() {
      return ((bitField2_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .pb.Emc_Operator_Text operator_text = 530;</code>
     */
    public pb.Canon.Emc_Operator_Text getOperatorText() {
      return operatorText_;
    }
    /**
     * <code>optional .pb.Emc_Operator_Text operator_text = 530;</code>
     */
    public pb.Canon.Emc_Operator_TextOrBuilder getOperatorTextOrBuilder() {
      return operatorText_;
    }

    public static final int OPERATOR_ERROR_FIELD_NUMBER = 540;
    private pb.Canon.Emc_Operator_Error operatorError_;
    /**
     * <code>optional .pb.Emc_Operator_Error operator_error = 540;</code>
     */
    public boolean hasOperatorError() {
      return ((bitField2_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .pb.Emc_Operator_Error operator_error = 540;</code>
     */
    public pb.Canon.Emc_Operator_Error getOperatorError() {
      return operatorError_;
    }
    /**
     * <code>optional .pb.Emc_Operator_Error operator_error = 540;</code>
     */
    public pb.Canon.Emc_Operator_ErrorOrBuilder getOperatorErrorOrBuilder() {
      return operatorError_;
    }

    public static final int MOTION_SET_DOUT_FIELD_NUMBER = 550;
    private pb.Canon.Emc_Motion_Set_Dout motionSetDout_;
    /**
     * <code>optional .pb.Emc_Motion_Set_Dout motion_set_dout = 550;</code>
     */
    public boolean hasMotionSetDout() {
      return ((bitField2_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .pb.Emc_Motion_Set_Dout motion_set_dout = 550;</code>
     */
    public pb.Canon.Emc_Motion_Set_Dout getMotionSetDout() {
      return motionSetDout_;
    }
    /**
     * <code>optional .pb.Emc_Motion_Set_Dout motion_set_dout = 550;</code>
     */
    public pb.Canon.Emc_Motion_Set_DoutOrBuilder getMotionSetDoutOrBuilder() {
      return motionSetDout_;
    }

    public static final int MOTION_SET_AOUT_FIELD_NUMBER = 560;
    private pb.Canon.Emc_Motion_Set_Aout motionSetAout_;
    /**
     * <code>optional .pb.Emc_Motion_Set_Aout motion_set_aout = 560;</code>
     */
    public boolean hasMotionSetAout() {
      return ((bitField2_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .pb.Emc_Motion_Set_Aout motion_set_aout = 560;</code>
     */
    public pb.Canon.Emc_Motion_Set_Aout getMotionSetAout() {
      return motionSetAout_;
    }
    /**
     * <code>optional .pb.Emc_Motion_Set_Aout motion_set_aout = 560;</code>
     */
    public pb.Canon.Emc_Motion_Set_AoutOrBuilder getMotionSetAoutOrBuilder() {
      return motionSetAout_;
    }

    public static final int AUX_INPUT_WAIT_FIELD_NUMBER = 570;
    private pb.Canon.Emc_Aux_Input_Wait auxInputWait_;
    /**
     * <code>optional .pb.Emc_Aux_Input_Wait aux_input_wait = 570;</code>
     */
    public boolean hasAuxInputWait() {
      return ((bitField2_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .pb.Emc_Aux_Input_Wait aux_input_wait = 570;</code>
     */
    public pb.Canon.Emc_Aux_Input_Wait getAuxInputWait() {
      return auxInputWait_;
    }
    /**
     * <code>optional .pb.Emc_Aux_Input_Wait aux_input_wait = 570;</code>
     */
    public pb.Canon.Emc_Aux_Input_WaitOrBuilder getAuxInputWaitOrBuilder() {
      return auxInputWait_;
    }

    public static final int EXEC_PLUGIN_CALL_FIELD_NUMBER = 580;
    private pb.Canon.Emc_Exec_Plugin_Ca1l execPluginCall_;
    /**
     * <code>optional .pb.Emc_Exec_Plugin_Ca1l exec_plugin_call = 580;</code>
     */
    public boolean hasExecPluginCall() {
      return ((bitField2_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .pb.Emc_Exec_Plugin_Ca1l exec_plugin_call = 580;</code>
     */
    public pb.Canon.Emc_Exec_Plugin_Ca1l getExecPluginCall() {
      return execPluginCall_;
    }
    /**
     * <code>optional .pb.Emc_Exec_Plugin_Ca1l exec_plugin_call = 580;</code>
     */
    public pb.Canon.Emc_Exec_Plugin_Ca1lOrBuilder getExecPluginCallOrBuilder() {
      return execPluginCall_;
    }

    public static final int IO_PLUGIN_CALL_FIELD_NUMBER = 590;
    private pb.Canon.Emc_Io_Plugin_Call ioPluginCall_;
    /**
     * <code>optional .pb.Emc_Io_Plugin_Call io_plugin_call = 590;</code>
     */
    public boolean hasIoPluginCall() {
      return ((bitField2_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .pb.Emc_Io_Plugin_Call io_plugin_call = 590;</code>
     */
    public pb.Canon.Emc_Io_Plugin_Call getIoPluginCall() {
      return ioPluginCall_;
    }
    /**
     * <code>optional .pb.Emc_Io_Plugin_Call io_plugin_call = 590;</code>
     */
    public pb.Canon.Emc_Io_Plugin_CallOrBuilder getIoPluginCallOrBuilder() {
      return ioPluginCall_;
    }

    public static final int EMC_STATUS_CONFIG_FIELD_NUMBER = 600;
    private pb.Status.EmcStatusConfig emcStatusConfig_;
    /**
     * <code>optional .pb.EmcStatusConfig emc_status_config = 600;</code>
     */
    public boolean hasEmcStatusConfig() {
      return ((bitField2_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .pb.EmcStatusConfig emc_status_config = 600;</code>
     */
    public pb.Status.EmcStatusConfig getEmcStatusConfig() {
      return emcStatusConfig_;
    }
    /**
     * <code>optional .pb.EmcStatusConfig emc_status_config = 600;</code>
     */
    public pb.Status.EmcStatusConfigOrBuilder getEmcStatusConfigOrBuilder() {
      return emcStatusConfig_;
    }

    public static final int EMC_STATUS_MOTION_FIELD_NUMBER = 601;
    private pb.Status.EmcStatusMotion emcStatusMotion_;
    /**
     * <code>optional .pb.EmcStatusMotion emc_status_motion = 601;</code>
     */
    public boolean hasEmcStatusMotion() {
      return ((bitField2_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .pb.EmcStatusMotion emc_status_motion = 601;</code>
     */
    public pb.Status.EmcStatusMotion getEmcStatusMotion() {
      return emcStatusMotion_;
    }
    /**
     * <code>optional .pb.EmcStatusMotion emc_status_motion = 601;</code>
     */
    public pb.Status.EmcStatusMotionOrBuilder getEmcStatusMotionOrBuilder() {
      return emcStatusMotion_;
    }

    public static final int EMC_STATUS_IO_FIELD_NUMBER = 602;
    private pb.Status.EmcStatusIo emcStatusIo_;
    /**
     * <code>optional .pb.EmcStatusIo emc_status_io = 602;</code>
     */
    public boolean hasEmcStatusIo() {
      return ((bitField2_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .pb.EmcStatusIo emc_status_io = 602;</code>
     */
    public pb.Status.EmcStatusIo getEmcStatusIo() {
      return emcStatusIo_;
    }
    /**
     * <code>optional .pb.EmcStatusIo emc_status_io = 602;</code>
     */
    public pb.Status.EmcStatusIoOrBuilder getEmcStatusIoOrBuilder() {
      return emcStatusIo_;
    }

    public static final int EMC_STATUS_TASK_FIELD_NUMBER = 603;
    private pb.Status.EmcStatusTask emcStatusTask_;
    /**
     * <code>optional .pb.EmcStatusTask emc_status_task = 603;</code>
     */
    public boolean hasEmcStatusTask() {
      return ((bitField2_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .pb.EmcStatusTask emc_status_task = 603;</code>
     */
    public pb.Status.EmcStatusTask getEmcStatusTask() {
      return emcStatusTask_;
    }
    /**
     * <code>optional .pb.EmcStatusTask emc_status_task = 603;</code>
     */
    public pb.Status.EmcStatusTaskOrBuilder getEmcStatusTaskOrBuilder() {
      return emcStatusTask_;
    }

    public static final int EMC_STATUS_INTERP_FIELD_NUMBER = 604;
    private pb.Status.EmcStatusInterp emcStatusInterp_;
    /**
     * <code>optional .pb.EmcStatusInterp emc_status_interp = 604;</code>
     */
    public boolean hasEmcStatusInterp() {
      return ((bitField2_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .pb.EmcStatusInterp emc_status_interp = 604;</code>
     */
    public pb.Status.EmcStatusInterp getEmcStatusInterp() {
      return emcStatusInterp_;
    }
    /**
     * <code>optional .pb.EmcStatusInterp emc_status_interp = 604;</code>
     */
    public pb.Status.EmcStatusInterpOrBuilder getEmcStatusInterpOrBuilder() {
      return emcStatusInterp_;
    }

    public static final int EMC_COMMAND_PARAMS_FIELD_NUMBER = 610;
    private pb.Status.EmcCommandParameters emcCommandParams_;
    /**
     * <code>optional .pb.EmcCommandParameters emc_command_params = 610;</code>
     */
    public boolean hasEmcCommandParams() {
      return ((bitField2_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .pb.EmcCommandParameters emc_command_params = 610;</code>
     */
    public pb.Status.EmcCommandParameters getEmcCommandParams() {
      return emcCommandParams_;
    }
    /**
     * <code>optional .pb.EmcCommandParameters emc_command_params = 610;</code>
     */
    public pb.Status.EmcCommandParametersOrBuilder getEmcCommandParamsOrBuilder() {
      return emcCommandParams_;
    }

    private void initFields() {
      type_ = pb.Types.ContainerType.MT_RTMESSAGE;
      tsc_ = 0L;
      preview_ = java.util.Collections.emptyList();
      motcmd_ = pb.Motcmds.MotionCommand.getDefaultInstance();
      motstat_ = pb.Motcmds.MotionStatus.getDefaultInstance();
      legacyMotcmd_ = com.google.protobuf.ByteString.EMPTY;
      legacyMotstat_ = com.google.protobuf.ByteString.EMPTY;
      rtapiMessage_ = pb.RtapiMessage.RTAPI_Message.getDefaultInstance();
      taskReply_ = pb.Task.TaskReply.getDefaultInstance();
      ticketUpdate_ = pb.Task.TicketUpdate.getDefaultInstance();
      syslog_ = com.google.protobuf.ByteString.EMPTY;
      legacyNml_ = com.google.protobuf.ByteString.EMPTY;
      legacyMotconfig_ = com.google.protobuf.ByteString.EMPTY;
      tvSec_ = 0;
      tvNsec_ = 0;
      topic_ = "";
      replyRequired_ = false;
      interpState_ = pb.Types.InterpreterStateType.INTERP_IDLE;
      interpName_ = "";
      rsvp_ = 0;
      inReplyTo_ = pb.Types.ContainerType.MT_RTMESSAGE;
      rcsStatus_ = pb.Types.RCS_STATUS.UNINITIALIZED_STATUS;
      status_ = pb.Types.StatusType.ENQUEUED;
      serial_ = 0;
      replySerial_ = 0;
      ticket_ = 0;
      replyTicket_ = 0;
      sequence_ = 0;
      credit_ = 0;
      lineNumber_ = 0;
      name_ = "";
      note_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      retcode_ = 0;
      uuid_ = com.google.protobuf.ByteString.EMPTY;
      trace_ = false;
      instance_ = 0;
      value_ = java.util.Collections.emptyList();
      rtapicmd_ = pb.Rtapicommand.RTAPICommand.getDefaultInstance();
      serviceAnnouncement_ = java.util.Collections.emptyList();
      comp_ = java.util.Collections.emptyList();
      pin_ = java.util.Collections.emptyList();
      signal_ = java.util.Collections.emptyList();
      param_ = java.util.Collections.emptyList();
      thread_ = java.util.Collections.emptyList();
      ring_ = java.util.Collections.emptyList();
      group_ = java.util.Collections.emptyList();
      member_ = java.util.Collections.emptyList();
      function_ = java.util.Collections.emptyList();
      pparams_ = pb.Object.ProtocolParameters.getDefaultInstance();
      vtable_ = java.util.Collections.emptyList();
      inst_ = java.util.Collections.emptyList();
      app_ = java.util.Collections.emptyList();
      launcher_ = java.util.Collections.emptyList();
      index_ = 0;
      logMessage_ = pb.Log.LogMessage.getDefaultInstance();
      tpexecute_ = pb.Task.TaskPlanExecute.getDefaultInstance();
      tpblockdelete_ = pb.Task.TaskPlanBlockDelete.getDefaultInstance();
      tpoptionalstop_ = pb.Task.TaskPlanOptionalStop.getDefaultInstance();
      tpopen_ = pb.Task.TaskPlanOpen.getDefaultInstance();
      taskplanReply_ = pb.Task.TaskPlanReply.getDefaultInstance();
      trajSetG5X_ = pb.Canon.Emc_Traj_Set_G5x.getDefaultInstance();
      trajSetG92_ = pb.Canon.Emc_Traj_Set_G92.getDefaultInstance();
      trajSetRotation_ = pb.Canon.Emc_Traj_Set_Rotation.getDefaultInstance();
      trajLinearMove_ = pb.Canon.Emc_Traj_Linear_Move.getDefaultInstance();
      trajProbe_ = pb.Canon.Emc_Traj_Probe.getDefaultInstance();
      trajCircularMove_ = pb.Canon.Emc_Traj_Circular_Move.getDefaultInstance();
      trajRigidTap_ = pb.Canon.Emc_Traj_Rigid_Tap.getDefaultInstance();
      trajSetTermCond_ = pb.Canon.Emc_Traj_Set_Term_Cond.getDefaultInstance();
      trajSetSpindlesync_ = pb.Canon.Emc_Traj_Set_Spindlesync.getDefaultInstance();
      trajDelay_ = pb.Canon.Emc_Traj_Delay.getDefaultInstance();
      spindleOn_ = pb.Canon.Emc_Spindle_On.getDefaultInstance();
      spindleSpeed_ = pb.Canon.Emc_Spindle_Speed.getDefaultInstance();
      spindleOrient_ = pb.Canon.Emc_Spindle_Orient.getDefaultInstance();
      spindleWaitOrientComplete_ = pb.Canon.Emc_Spindle_Wait_Orient_Complete.getDefaultInstance();
      toolSetOffet_ = pb.Canon.Emc_Tool_Set_Offset.getDefaultInstance();
      trajSetOffset_ = pb.Canon.Emc_Traj_Set_Offset.getDefaultInstance();
      toolPrepare_ = pb.Canon.Emc_Tool_Prepare.getDefaultInstance();
      toolSetNumber_ = pb.Canon.Emc_Tool_Set_Number.getDefaultInstance();
      trajSetFoEnable_ = pb.Canon.Emc_Traj_Set_Fo_Enable.getDefaultInstance();
      trajSetSoEnable_ = pb.Canon.Emc_Traj_Set_So_Enable.getDefaultInstance();
      trajSetFhEnable_ = pb.Canon.Emc_Traj_Set_Fh_Enable.getDefaultInstance();
      motionAdaptive_ = pb.Canon.Emc_Motion_Adaptive.getDefaultInstance();
      operatorDisplay_ = pb.Canon.Emc_Operator_Display.getDefaultInstance();
      operatorText_ = pb.Canon.Emc_Operator_Text.getDefaultInstance();
      operatorError_ = pb.Canon.Emc_Operator_Error.getDefaultInstance();
      motionSetDout_ = pb.Canon.Emc_Motion_Set_Dout.getDefaultInstance();
      motionSetAout_ = pb.Canon.Emc_Motion_Set_Aout.getDefaultInstance();
      auxInputWait_ = pb.Canon.Emc_Aux_Input_Wait.getDefaultInstance();
      execPluginCall_ = pb.Canon.Emc_Exec_Plugin_Ca1l.getDefaultInstance();
      ioPluginCall_ = pb.Canon.Emc_Io_Plugin_Call.getDefaultInstance();
      emcStatusConfig_ = pb.Status.EmcStatusConfig.getDefaultInstance();
      emcStatusMotion_ = pb.Status.EmcStatusMotion.getDefaultInstance();
      emcStatusIo_ = pb.Status.EmcStatusIo.getDefaultInstance();
      emcStatusTask_ = pb.Status.EmcStatusTask.getDefaultInstance();
      emcStatusInterp_ = pb.Status.EmcStatusInterp.getDefaultInstance();
      emcCommandParams_ = pb.Status.EmcCommandParameters.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPreviewCount(); i++) {
        if (!getPreview(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMotcmd()) {
        if (!getMotcmd().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMotstat()) {
        if (!getMotstat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasRtapiMessage()) {
        if (!getRtapiMessage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTaskReply()) {
        if (!getTaskReply().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTicketUpdate()) {
        if (!getTicketUpdate().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getValueCount(); i++) {
        if (!getValue(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasRtapicmd()) {
        if (!getRtapicmd().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getServiceAnnouncementCount(); i++) {
        if (!getServiceAnnouncement(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAppCount(); i++) {
        if (!getApp(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getLauncherCount(); i++) {
        if (!getLauncher(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLogMessage()) {
        if (!getLogMessage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTpblockdelete()) {
        if (!getTpblockdelete().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTpoptionalstop()) {
        if (!getTpoptionalstop().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTpopen()) {
        if (!getTpopen().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTaskplanReply()) {
        if (!getTaskplanReply().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTrajSetG5X()) {
        if (!getTrajSetG5X().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTrajSetG92()) {
        if (!getTrajSetG92().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTrajSetRotation()) {
        if (!getTrajSetRotation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTrajLinearMove()) {
        if (!getTrajLinearMove().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTrajProbe()) {
        if (!getTrajProbe().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTrajCircularMove()) {
        if (!getTrajCircularMove().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTrajRigidTap()) {
        if (!getTrajRigidTap().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTrajSetTermCond()) {
        if (!getTrajSetTermCond().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTrajSetSpindlesync()) {
        if (!getTrajSetSpindlesync().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTrajDelay()) {
        if (!getTrajDelay().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSpindleOn()) {
        if (!getSpindleOn().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSpindleSpeed()) {
        if (!getSpindleSpeed().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSpindleOrient()) {
        if (!getSpindleOrient().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSpindleWaitOrientComplete()) {
        if (!getSpindleWaitOrientComplete().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasToolSetOffet()) {
        if (!getToolSetOffet().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTrajSetOffset()) {
        if (!getTrajSetOffset().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasToolPrepare()) {
        if (!getToolPrepare().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasToolSetNumber()) {
        if (!getToolSetNumber().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTrajSetFoEnable()) {
        if (!getTrajSetFoEnable().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTrajSetSoEnable()) {
        if (!getTrajSetSoEnable().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTrajSetFhEnable()) {
        if (!getTrajSetFhEnable().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMotionAdaptive()) {
        if (!getMotionAdaptive().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasOperatorDisplay()) {
        if (!getOperatorDisplay().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasOperatorText()) {
        if (!getOperatorText().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasOperatorError()) {
        if (!getOperatorError().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMotionSetDout()) {
        if (!getMotionSetDout().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMotionSetAout()) {
        if (!getMotionSetAout().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasAuxInputWait()) {
        if (!getAuxInputWait().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasExecPluginCall()) {
        if (!getExecPluginCall().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasIoPluginCall()) {
        if (!getIoPluginCall().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasEmcStatusConfig()) {
        if (!getEmcStatusConfig().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasEmcStatusMotion()) {
        if (!getEmcStatusMotion().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasEmcStatusIo()) {
        if (!getEmcStatusIo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasEmcStatusInterp()) {
        if (!getEmcStatusInterp().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasEmcCommandParams()) {
        if (!getEmcCommandParams().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      for (int i = 0; i < pin_.size(); i++) {
        output.writeMessage(2, pin_.get(i));
      }
      for (int i = 0; i < signal_.size(); i++) {
        output.writeMessage(3, signal_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSFixed64(7, tsc_);
      }
      for (int i = 0; i < preview_.size(); i++) {
        output.writeMessage(8, preview_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(9, motcmd_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(10, motstat_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(11, legacyMotcmd_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(12, legacyMotstat_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(13, rtapiMessage_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(14, taskReply_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(15, ticketUpdate_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(18, syslog_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(19, legacyNml_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(20, legacyMotconfig_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(21, tvSec_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(22, tvNsec_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(23, getTopicBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBool(24, replyRequired_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeEnum(25, interpState_.getNumber());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBytes(26, getInterpNameBytes());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(30, rsvp_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeEnum(33, inReplyTo_.getNumber());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeEnum(35, rcsStatus_.getNumber());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeEnum(40, status_.getNumber());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(45, serial_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(50, replySerial_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(55, ticket_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(60, replyTicket_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(62, sequence_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(65, credit_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(66, lineNumber_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeBytes(67, getNameBytes());
      }
      for (int i = 0; i < note_.size(); i++) {
        output.writeBytes(68, note_.getByteString(i));
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(69, retcode_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeBytes(72, uuid_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeBool(75, trace_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(77, instance_);
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(85, value_.get(i));
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(86, rtapicmd_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(87, logMessage_);
      }
      for (int i = 0; i < serviceAnnouncement_.size(); i++) {
        output.writeMessage(88, serviceAnnouncement_.get(i));
      }
      for (int i = 0; i < comp_.size(); i++) {
        output.writeMessage(100, comp_.get(i));
      }
      for (int i = 0; i < param_.size(); i++) {
        output.writeMessage(103, param_.get(i));
      }
      for (int i = 0; i < thread_.size(); i++) {
        output.writeMessage(104, thread_.get(i));
      }
      for (int i = 0; i < ring_.size(); i++) {
        output.writeMessage(105, ring_.get(i));
      }
      for (int i = 0; i < group_.size(); i++) {
        output.writeMessage(106, group_.get(i));
      }
      for (int i = 0; i < member_.size(); i++) {
        output.writeMessage(107, member_.get(i));
      }
      for (int i = 0; i < function_.size(); i++) {
        output.writeMessage(108, function_.get(i));
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(109, pparams_);
      }
      for (int i = 0; i < vtable_.size(); i++) {
        output.writeMessage(110, vtable_.get(i));
      }
      for (int i = 0; i < inst_.size(); i++) {
        output.writeMessage(111, inst_.get(i));
      }
      for (int i = 0; i < app_.size(); i++) {
        output.writeMessage(120, app_.get(i));
      }
      for (int i = 0; i < launcher_.size(); i++) {
        output.writeMessage(130, launcher_.get(i));
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(131, index_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(200, tpexecute_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(201, tpblockdelete_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(202, tpoptionalstop_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(203, tpopen_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(210, taskplanReply_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(300, trajSetG5X_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(310, trajSetG92_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(320, trajSetRotation_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(330, trajLinearMove_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(340, trajProbe_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(350, trajCircularMove_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(360, trajRigidTap_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(370, trajSetTermCond_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        output.writeMessage(380, trajSetSpindlesync_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        output.writeMessage(390, trajDelay_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        output.writeMessage(400, spindleOn_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(410, spindleSpeed_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(420, spindleOrient_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        output.writeMessage(430, spindleWaitOrientComplete_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        output.writeMessage(440, toolSetOffet_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        output.writeMessage(450, trajSetOffset_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        output.writeMessage(460, toolPrepare_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        output.writeMessage(470, toolSetNumber_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        output.writeMessage(480, trajSetFoEnable_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        output.writeMessage(490, trajSetSoEnable_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        output.writeMessage(500, trajSetFhEnable_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(510, motionAdaptive_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(520, operatorDisplay_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(530, operatorText_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(540, operatorError_);
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(550, motionSetDout_);
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(560, motionSetAout_);
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(570, auxInputWait_);
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(580, execPluginCall_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(590, ioPluginCall_);
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(600, emcStatusConfig_);
      }
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(601, emcStatusMotion_);
      }
      if (((bitField2_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(602, emcStatusIo_);
      }
      if (((bitField2_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(603, emcStatusTask_);
      }
      if (((bitField2_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(604, emcStatusInterp_);
      }
      if (((bitField2_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(610, emcCommandParams_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      for (int i = 0; i < pin_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, pin_.get(i));
      }
      for (int i = 0; i < signal_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, signal_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(7, tsc_);
      }
      for (int i = 0; i < preview_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, preview_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, motcmd_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, motstat_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, legacyMotcmd_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, legacyMotstat_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, rtapiMessage_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, taskReply_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, ticketUpdate_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(18, syslog_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(19, legacyNml_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, legacyMotconfig_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, tvSec_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, tvNsec_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(23, getTopicBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(24, replyRequired_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(25, interpState_.getNumber());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(26, getInterpNameBytes());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, rsvp_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(33, inReplyTo_.getNumber());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(35, rcsStatus_.getNumber());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(40, status_.getNumber());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(45, serial_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(50, replySerial_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(55, ticket_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(60, replyTicket_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(62, sequence_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(65, credit_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(66, lineNumber_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(67, getNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < note_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(note_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getNoteList().size();
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(69, retcode_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(72, uuid_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(75, trace_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(77, instance_);
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(85, value_.get(i));
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(86, rtapicmd_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(87, logMessage_);
      }
      for (int i = 0; i < serviceAnnouncement_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(88, serviceAnnouncement_.get(i));
      }
      for (int i = 0; i < comp_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, comp_.get(i));
      }
      for (int i = 0; i < param_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(103, param_.get(i));
      }
      for (int i = 0; i < thread_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(104, thread_.get(i));
      }
      for (int i = 0; i < ring_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(105, ring_.get(i));
      }
      for (int i = 0; i < group_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(106, group_.get(i));
      }
      for (int i = 0; i < member_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(107, member_.get(i));
      }
      for (int i = 0; i < function_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(108, function_.get(i));
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(109, pparams_);
      }
      for (int i = 0; i < vtable_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(110, vtable_.get(i));
      }
      for (int i = 0; i < inst_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(111, inst_.get(i));
      }
      for (int i = 0; i < app_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(120, app_.get(i));
      }
      for (int i = 0; i < launcher_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(130, launcher_.get(i));
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(131, index_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(200, tpexecute_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(201, tpblockdelete_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(202, tpoptionalstop_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(203, tpopen_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(210, taskplanReply_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(300, trajSetG5X_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(310, trajSetG92_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(320, trajSetRotation_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(330, trajLinearMove_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(340, trajProbe_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(350, trajCircularMove_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(360, trajRigidTap_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(370, trajSetTermCond_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(380, trajSetSpindlesync_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(390, trajDelay_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(400, spindleOn_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(410, spindleSpeed_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(420, spindleOrient_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(430, spindleWaitOrientComplete_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(440, toolSetOffet_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(450, trajSetOffset_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(460, toolPrepare_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(470, toolSetNumber_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(480, trajSetFoEnable_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(490, trajSetSoEnable_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(500, trajSetFhEnable_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(510, motionAdaptive_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(520, operatorDisplay_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(530, operatorText_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(540, operatorError_);
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(550, motionSetDout_);
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(560, motionSetAout_);
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(570, auxInputWait_);
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(580, execPluginCall_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(590, ioPluginCall_);
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(600, emcStatusConfig_);
      }
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(601, emcStatusMotion_);
      }
      if (((bitField2_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(602, emcStatusIo_);
      }
      if (((bitField2_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(603, emcStatusTask_);
      }
      if (((bitField2_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(604, emcStatusInterp_);
      }
      if (((bitField2_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(610, emcCommandParams_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pb.Message.Container parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pb.Message.Container parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pb.Message.Container parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pb.Message.Container parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pb.Message.Container parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pb.Message.Container parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pb.Message.Container parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pb.Message.Container parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pb.Message.Container parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pb.Message.Container parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pb.Message.Container prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pb.Container}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb.Container)
        pb.Message.ContainerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pb.Message.internal_static_pb_Container_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pb.Message.internal_static_pb_Container_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pb.Message.Container.class, pb.Message.Container.Builder.class);
      }

      // Construct using pb.Message.Container.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPreviewFieldBuilder();
          getMotcmdFieldBuilder();
          getMotstatFieldBuilder();
          getRtapiMessageFieldBuilder();
          getTaskReplyFieldBuilder();
          getTicketUpdateFieldBuilder();
          getValueFieldBuilder();
          getRtapicmdFieldBuilder();
          getServiceAnnouncementFieldBuilder();
          getCompFieldBuilder();
          getPinFieldBuilder();
          getSignalFieldBuilder();
          getParamFieldBuilder();
          getThreadFieldBuilder();
          getRingFieldBuilder();
          getGroupFieldBuilder();
          getMemberFieldBuilder();
          getFunctionFieldBuilder();
          getPparamsFieldBuilder();
          getVtableFieldBuilder();
          getInstFieldBuilder();
          getAppFieldBuilder();
          getLauncherFieldBuilder();
          getLogMessageFieldBuilder();
          getTpexecuteFieldBuilder();
          getTpblockdeleteFieldBuilder();
          getTpoptionalstopFieldBuilder();
          getTpopenFieldBuilder();
          getTaskplanReplyFieldBuilder();
          getTrajSetG5XFieldBuilder();
          getTrajSetG92FieldBuilder();
          getTrajSetRotationFieldBuilder();
          getTrajLinearMoveFieldBuilder();
          getTrajProbeFieldBuilder();
          getTrajCircularMoveFieldBuilder();
          getTrajRigidTapFieldBuilder();
          getTrajSetTermCondFieldBuilder();
          getTrajSetSpindlesyncFieldBuilder();
          getTrajDelayFieldBuilder();
          getSpindleOnFieldBuilder();
          getSpindleSpeedFieldBuilder();
          getSpindleOrientFieldBuilder();
          getSpindleWaitOrientCompleteFieldBuilder();
          getToolSetOffetFieldBuilder();
          getTrajSetOffsetFieldBuilder();
          getToolPrepareFieldBuilder();
          getToolSetNumberFieldBuilder();
          getTrajSetFoEnableFieldBuilder();
          getTrajSetSoEnableFieldBuilder();
          getTrajSetFhEnableFieldBuilder();
          getMotionAdaptiveFieldBuilder();
          getOperatorDisplayFieldBuilder();
          getOperatorTextFieldBuilder();
          getOperatorErrorFieldBuilder();
          getMotionSetDoutFieldBuilder();
          getMotionSetAoutFieldBuilder();
          getAuxInputWaitFieldBuilder();
          getExecPluginCallFieldBuilder();
          getIoPluginCallFieldBuilder();
          getEmcStatusConfigFieldBuilder();
          getEmcStatusMotionFieldBuilder();
          getEmcStatusIoFieldBuilder();
          getEmcStatusTaskFieldBuilder();
          getEmcStatusInterpFieldBuilder();
          getEmcCommandParamsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = pb.Types.ContainerType.MT_RTMESSAGE;
        bitField0_ = (bitField0_ & ~0x00000001);
        tsc_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (previewBuilder_ == null) {
          preview_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          previewBuilder_.clear();
        }
        if (motcmdBuilder_ == null) {
          motcmd_ = pb.Motcmds.MotionCommand.getDefaultInstance();
        } else {
          motcmdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (motstatBuilder_ == null) {
          motstat_ = pb.Motcmds.MotionStatus.getDefaultInstance();
        } else {
          motstatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        legacyMotcmd_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        legacyMotstat_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (rtapiMessageBuilder_ == null) {
          rtapiMessage_ = pb.RtapiMessage.RTAPI_Message.getDefaultInstance();
        } else {
          rtapiMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (taskReplyBuilder_ == null) {
          taskReply_ = pb.Task.TaskReply.getDefaultInstance();
        } else {
          taskReplyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (ticketUpdateBuilder_ == null) {
          ticketUpdate_ = pb.Task.TicketUpdate.getDefaultInstance();
        } else {
          ticketUpdateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        syslog_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000400);
        legacyNml_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000800);
        legacyMotconfig_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00001000);
        tvSec_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        tvNsec_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        topic_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        replyRequired_ = false;
        bitField0_ = (bitField0_ & ~0x00010000);
        interpState_ = pb.Types.InterpreterStateType.INTERP_IDLE;
        bitField0_ = (bitField0_ & ~0x00020000);
        interpName_ = "";
        bitField0_ = (bitField0_ & ~0x00040000);
        rsvp_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        inReplyTo_ = pb.Types.ContainerType.MT_RTMESSAGE;
        bitField0_ = (bitField0_ & ~0x00100000);
        rcsStatus_ = pb.Types.RCS_STATUS.UNINITIALIZED_STATUS;
        bitField0_ = (bitField0_ & ~0x00200000);
        status_ = pb.Types.StatusType.ENQUEUED;
        bitField0_ = (bitField0_ & ~0x00400000);
        serial_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        replySerial_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        ticket_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        replyTicket_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        sequence_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        credit_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        lineNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x40000000);
        note_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x80000000);
        retcode_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        uuid_ = com.google.protobuf.ByteString.EMPTY;
        bitField1_ = (bitField1_ & ~0x00000002);
        trace_ = false;
        bitField1_ = (bitField1_ & ~0x00000004);
        instance_ = 0;
        bitField1_ = (bitField1_ & ~0x00000008);
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000010);
        } else {
          valueBuilder_.clear();
        }
        if (rtapicmdBuilder_ == null) {
          rtapicmd_ = pb.Rtapicommand.RTAPICommand.getDefaultInstance();
        } else {
          rtapicmdBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000020);
        if (serviceAnnouncementBuilder_ == null) {
          serviceAnnouncement_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000040);
        } else {
          serviceAnnouncementBuilder_.clear();
        }
        if (compBuilder_ == null) {
          comp_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000080);
        } else {
          compBuilder_.clear();
        }
        if (pinBuilder_ == null) {
          pin_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000100);
        } else {
          pinBuilder_.clear();
        }
        if (signalBuilder_ == null) {
          signal_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000200);
        } else {
          signalBuilder_.clear();
        }
        if (paramBuilder_ == null) {
          param_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000400);
        } else {
          paramBuilder_.clear();
        }
        if (threadBuilder_ == null) {
          thread_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000800);
        } else {
          threadBuilder_.clear();
        }
        if (ringBuilder_ == null) {
          ring_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00001000);
        } else {
          ringBuilder_.clear();
        }
        if (groupBuilder_ == null) {
          group_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00002000);
        } else {
          groupBuilder_.clear();
        }
        if (memberBuilder_ == null) {
          member_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00004000);
        } else {
          memberBuilder_.clear();
        }
        if (functionBuilder_ == null) {
          function_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00008000);
        } else {
          functionBuilder_.clear();
        }
        if (pparamsBuilder_ == null) {
          pparams_ = pb.Object.ProtocolParameters.getDefaultInstance();
        } else {
          pparamsBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00010000);
        if (vtableBuilder_ == null) {
          vtable_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00020000);
        } else {
          vtableBuilder_.clear();
        }
        if (instBuilder_ == null) {
          inst_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00040000);
        } else {
          instBuilder_.clear();
        }
        if (appBuilder_ == null) {
          app_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00080000);
        } else {
          appBuilder_.clear();
        }
        if (launcherBuilder_ == null) {
          launcher_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00100000);
        } else {
          launcherBuilder_.clear();
        }
        index_ = 0;
        bitField1_ = (bitField1_ & ~0x00200000);
        if (logMessageBuilder_ == null) {
          logMessage_ = pb.Log.LogMessage.getDefaultInstance();
        } else {
          logMessageBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00400000);
        if (tpexecuteBuilder_ == null) {
          tpexecute_ = pb.Task.TaskPlanExecute.getDefaultInstance();
        } else {
          tpexecuteBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00800000);
        if (tpblockdeleteBuilder_ == null) {
          tpblockdelete_ = pb.Task.TaskPlanBlockDelete.getDefaultInstance();
        } else {
          tpblockdeleteBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x01000000);
        if (tpoptionalstopBuilder_ == null) {
          tpoptionalstop_ = pb.Task.TaskPlanOptionalStop.getDefaultInstance();
        } else {
          tpoptionalstopBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x02000000);
        if (tpopenBuilder_ == null) {
          tpopen_ = pb.Task.TaskPlanOpen.getDefaultInstance();
        } else {
          tpopenBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x04000000);
        if (taskplanReplyBuilder_ == null) {
          taskplanReply_ = pb.Task.TaskPlanReply.getDefaultInstance();
        } else {
          taskplanReplyBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x08000000);
        if (trajSetG5XBuilder_ == null) {
          trajSetG5X_ = pb.Canon.Emc_Traj_Set_G5x.getDefaultInstance();
        } else {
          trajSetG5XBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x10000000);
        if (trajSetG92Builder_ == null) {
          trajSetG92_ = pb.Canon.Emc_Traj_Set_G92.getDefaultInstance();
        } else {
          trajSetG92Builder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x20000000);
        if (trajSetRotationBuilder_ == null) {
          trajSetRotation_ = pb.Canon.Emc_Traj_Set_Rotation.getDefaultInstance();
        } else {
          trajSetRotationBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x40000000);
        if (trajLinearMoveBuilder_ == null) {
          trajLinearMove_ = pb.Canon.Emc_Traj_Linear_Move.getDefaultInstance();
        } else {
          trajLinearMoveBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x80000000);
        if (trajProbeBuilder_ == null) {
          trajProbe_ = pb.Canon.Emc_Traj_Probe.getDefaultInstance();
        } else {
          trajProbeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000001);
        if (trajCircularMoveBuilder_ == null) {
          trajCircularMove_ = pb.Canon.Emc_Traj_Circular_Move.getDefaultInstance();
        } else {
          trajCircularMoveBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000002);
        if (trajRigidTapBuilder_ == null) {
          trajRigidTap_ = pb.Canon.Emc_Traj_Rigid_Tap.getDefaultInstance();
        } else {
          trajRigidTapBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000004);
        if (trajSetTermCondBuilder_ == null) {
          trajSetTermCond_ = pb.Canon.Emc_Traj_Set_Term_Cond.getDefaultInstance();
        } else {
          trajSetTermCondBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000008);
        if (trajSetSpindlesyncBuilder_ == null) {
          trajSetSpindlesync_ = pb.Canon.Emc_Traj_Set_Spindlesync.getDefaultInstance();
        } else {
          trajSetSpindlesyncBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000010);
        if (trajDelayBuilder_ == null) {
          trajDelay_ = pb.Canon.Emc_Traj_Delay.getDefaultInstance();
        } else {
          trajDelayBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000020);
        if (spindleOnBuilder_ == null) {
          spindleOn_ = pb.Canon.Emc_Spindle_On.getDefaultInstance();
        } else {
          spindleOnBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000040);
        if (spindleSpeedBuilder_ == null) {
          spindleSpeed_ = pb.Canon.Emc_Spindle_Speed.getDefaultInstance();
        } else {
          spindleSpeedBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000080);
        if (spindleOrientBuilder_ == null) {
          spindleOrient_ = pb.Canon.Emc_Spindle_Orient.getDefaultInstance();
        } else {
          spindleOrientBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000100);
        if (spindleWaitOrientCompleteBuilder_ == null) {
          spindleWaitOrientComplete_ = pb.Canon.Emc_Spindle_Wait_Orient_Complete.getDefaultInstance();
        } else {
          spindleWaitOrientCompleteBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000200);
        if (toolSetOffetBuilder_ == null) {
          toolSetOffet_ = pb.Canon.Emc_Tool_Set_Offset.getDefaultInstance();
        } else {
          toolSetOffetBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000400);
        if (trajSetOffsetBuilder_ == null) {
          trajSetOffset_ = pb.Canon.Emc_Traj_Set_Offset.getDefaultInstance();
        } else {
          trajSetOffsetBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000800);
        if (toolPrepareBuilder_ == null) {
          toolPrepare_ = pb.Canon.Emc_Tool_Prepare.getDefaultInstance();
        } else {
          toolPrepareBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00001000);
        if (toolSetNumberBuilder_ == null) {
          toolSetNumber_ = pb.Canon.Emc_Tool_Set_Number.getDefaultInstance();
        } else {
          toolSetNumberBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00002000);
        if (trajSetFoEnableBuilder_ == null) {
          trajSetFoEnable_ = pb.Canon.Emc_Traj_Set_Fo_Enable.getDefaultInstance();
        } else {
          trajSetFoEnableBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00004000);
        if (trajSetSoEnableBuilder_ == null) {
          trajSetSoEnable_ = pb.Canon.Emc_Traj_Set_So_Enable.getDefaultInstance();
        } else {
          trajSetSoEnableBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00008000);
        if (trajSetFhEnableBuilder_ == null) {
          trajSetFhEnable_ = pb.Canon.Emc_Traj_Set_Fh_Enable.getDefaultInstance();
        } else {
          trajSetFhEnableBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00010000);
        if (motionAdaptiveBuilder_ == null) {
          motionAdaptive_ = pb.Canon.Emc_Motion_Adaptive.getDefaultInstance();
        } else {
          motionAdaptiveBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00020000);
        if (operatorDisplayBuilder_ == null) {
          operatorDisplay_ = pb.Canon.Emc_Operator_Display.getDefaultInstance();
        } else {
          operatorDisplayBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00040000);
        if (operatorTextBuilder_ == null) {
          operatorText_ = pb.Canon.Emc_Operator_Text.getDefaultInstance();
        } else {
          operatorTextBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00080000);
        if (operatorErrorBuilder_ == null) {
          operatorError_ = pb.Canon.Emc_Operator_Error.getDefaultInstance();
        } else {
          operatorErrorBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00100000);
        if (motionSetDoutBuilder_ == null) {
          motionSetDout_ = pb.Canon.Emc_Motion_Set_Dout.getDefaultInstance();
        } else {
          motionSetDoutBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00200000);
        if (motionSetAoutBuilder_ == null) {
          motionSetAout_ = pb.Canon.Emc_Motion_Set_Aout.getDefaultInstance();
        } else {
          motionSetAoutBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00400000);
        if (auxInputWaitBuilder_ == null) {
          auxInputWait_ = pb.Canon.Emc_Aux_Input_Wait.getDefaultInstance();
        } else {
          auxInputWaitBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00800000);
        if (execPluginCallBuilder_ == null) {
          execPluginCall_ = pb.Canon.Emc_Exec_Plugin_Ca1l.getDefaultInstance();
        } else {
          execPluginCallBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x01000000);
        if (ioPluginCallBuilder_ == null) {
          ioPluginCall_ = pb.Canon.Emc_Io_Plugin_Call.getDefaultInstance();
        } else {
          ioPluginCallBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x02000000);
        if (emcStatusConfigBuilder_ == null) {
          emcStatusConfig_ = pb.Status.EmcStatusConfig.getDefaultInstance();
        } else {
          emcStatusConfigBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x04000000);
        if (emcStatusMotionBuilder_ == null) {
          emcStatusMotion_ = pb.Status.EmcStatusMotion.getDefaultInstance();
        } else {
          emcStatusMotionBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x08000000);
        if (emcStatusIoBuilder_ == null) {
          emcStatusIo_ = pb.Status.EmcStatusIo.getDefaultInstance();
        } else {
          emcStatusIoBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x10000000);
        if (emcStatusTaskBuilder_ == null) {
          emcStatusTask_ = pb.Status.EmcStatusTask.getDefaultInstance();
        } else {
          emcStatusTaskBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x20000000);
        if (emcStatusInterpBuilder_ == null) {
          emcStatusInterp_ = pb.Status.EmcStatusInterp.getDefaultInstance();
        } else {
          emcStatusInterpBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x40000000);
        if (emcCommandParamsBuilder_ == null) {
          emcCommandParams_ = pb.Status.EmcCommandParameters.getDefaultInstance();
        } else {
          emcCommandParamsBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x80000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pb.Message.internal_static_pb_Container_descriptor;
      }

      public pb.Message.Container getDefaultInstanceForType() {
        return pb.Message.Container.getDefaultInstance();
      }

      public pb.Message.Container build() {
        pb.Message.Container result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pb.Message.Container buildPartial() {
        pb.Message.Container result = new pb.Message.Container(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int from_bitField2_ = bitField2_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        int to_bitField2_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tsc_ = tsc_;
        if (previewBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            preview_ = java.util.Collections.unmodifiableList(preview_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.preview_ = preview_;
        } else {
          result.preview_ = previewBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        if (motcmdBuilder_ == null) {
          result.motcmd_ = motcmd_;
        } else {
          result.motcmd_ = motcmdBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        if (motstatBuilder_ == null) {
          result.motstat_ = motstat_;
        } else {
          result.motstat_ = motstatBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.legacyMotcmd_ = legacyMotcmd_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.legacyMotstat_ = legacyMotstat_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        if (rtapiMessageBuilder_ == null) {
          result.rtapiMessage_ = rtapiMessage_;
        } else {
          result.rtapiMessage_ = rtapiMessageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        if (taskReplyBuilder_ == null) {
          result.taskReply_ = taskReply_;
        } else {
          result.taskReply_ = taskReplyBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        if (ticketUpdateBuilder_ == null) {
          result.ticketUpdate_ = ticketUpdate_;
        } else {
          result.ticketUpdate_ = ticketUpdateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.syslog_ = syslog_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.legacyNml_ = legacyNml_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.legacyMotconfig_ = legacyMotconfig_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.tvSec_ = tvSec_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.tvNsec_ = tvNsec_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.topic_ = topic_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.replyRequired_ = replyRequired_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.interpState_ = interpState_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.interpName_ = interpName_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.rsvp_ = rsvp_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.inReplyTo_ = inReplyTo_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.rcsStatus_ = rcsStatus_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.serial_ = serial_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.replySerial_ = replySerial_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.ticket_ = ticket_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.replyTicket_ = replyTicket_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.sequence_ = sequence_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.credit_ = credit_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.lineNumber_ = lineNumber_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.name_ = name_;
        if (((bitField0_ & 0x80000000) == 0x80000000)) {
          note_ = note_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x80000000);
        }
        result.note_ = note_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x40000000;
        }
        result.retcode_ = retcode_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x80000000;
        }
        result.uuid_ = uuid_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000001;
        }
        result.trace_ = trace_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000002;
        }
        result.instance_ = instance_;
        if (valueBuilder_ == null) {
          if (((bitField1_ & 0x00000010) == 0x00000010)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField1_ = (bitField1_ & ~0x00000010);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000004;
        }
        if (rtapicmdBuilder_ == null) {
          result.rtapicmd_ = rtapicmd_;
        } else {
          result.rtapicmd_ = rtapicmdBuilder_.build();
        }
        if (serviceAnnouncementBuilder_ == null) {
          if (((bitField1_ & 0x00000040) == 0x00000040)) {
            serviceAnnouncement_ = java.util.Collections.unmodifiableList(serviceAnnouncement_);
            bitField1_ = (bitField1_ & ~0x00000040);
          }
          result.serviceAnnouncement_ = serviceAnnouncement_;
        } else {
          result.serviceAnnouncement_ = serviceAnnouncementBuilder_.build();
        }
        if (compBuilder_ == null) {
          if (((bitField1_ & 0x00000080) == 0x00000080)) {
            comp_ = java.util.Collections.unmodifiableList(comp_);
            bitField1_ = (bitField1_ & ~0x00000080);
          }
          result.comp_ = comp_;
        } else {
          result.comp_ = compBuilder_.build();
        }
        if (pinBuilder_ == null) {
          if (((bitField1_ & 0x00000100) == 0x00000100)) {
            pin_ = java.util.Collections.unmodifiableList(pin_);
            bitField1_ = (bitField1_ & ~0x00000100);
          }
          result.pin_ = pin_;
        } else {
          result.pin_ = pinBuilder_.build();
        }
        if (signalBuilder_ == null) {
          if (((bitField1_ & 0x00000200) == 0x00000200)) {
            signal_ = java.util.Collections.unmodifiableList(signal_);
            bitField1_ = (bitField1_ & ~0x00000200);
          }
          result.signal_ = signal_;
        } else {
          result.signal_ = signalBuilder_.build();
        }
        if (paramBuilder_ == null) {
          if (((bitField1_ & 0x00000400) == 0x00000400)) {
            param_ = java.util.Collections.unmodifiableList(param_);
            bitField1_ = (bitField1_ & ~0x00000400);
          }
          result.param_ = param_;
        } else {
          result.param_ = paramBuilder_.build();
        }
        if (threadBuilder_ == null) {
          if (((bitField1_ & 0x00000800) == 0x00000800)) {
            thread_ = java.util.Collections.unmodifiableList(thread_);
            bitField1_ = (bitField1_ & ~0x00000800);
          }
          result.thread_ = thread_;
        } else {
          result.thread_ = threadBuilder_.build();
        }
        if (ringBuilder_ == null) {
          if (((bitField1_ & 0x00001000) == 0x00001000)) {
            ring_ = java.util.Collections.unmodifiableList(ring_);
            bitField1_ = (bitField1_ & ~0x00001000);
          }
          result.ring_ = ring_;
        } else {
          result.ring_ = ringBuilder_.build();
        }
        if (groupBuilder_ == null) {
          if (((bitField1_ & 0x00002000) == 0x00002000)) {
            group_ = java.util.Collections.unmodifiableList(group_);
            bitField1_ = (bitField1_ & ~0x00002000);
          }
          result.group_ = group_;
        } else {
          result.group_ = groupBuilder_.build();
        }
        if (memberBuilder_ == null) {
          if (((bitField1_ & 0x00004000) == 0x00004000)) {
            member_ = java.util.Collections.unmodifiableList(member_);
            bitField1_ = (bitField1_ & ~0x00004000);
          }
          result.member_ = member_;
        } else {
          result.member_ = memberBuilder_.build();
        }
        if (functionBuilder_ == null) {
          if (((bitField1_ & 0x00008000) == 0x00008000)) {
            function_ = java.util.Collections.unmodifiableList(function_);
            bitField1_ = (bitField1_ & ~0x00008000);
          }
          result.function_ = function_;
        } else {
          result.function_ = functionBuilder_.build();
        }
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00000008;
        }
        if (pparamsBuilder_ == null) {
          result.pparams_ = pparams_;
        } else {
          result.pparams_ = pparamsBuilder_.build();
        }
        if (vtableBuilder_ == null) {
          if (((bitField1_ & 0x00020000) == 0x00020000)) {
            vtable_ = java.util.Collections.unmodifiableList(vtable_);
            bitField1_ = (bitField1_ & ~0x00020000);
          }
          result.vtable_ = vtable_;
        } else {
          result.vtable_ = vtableBuilder_.build();
        }
        if (instBuilder_ == null) {
          if (((bitField1_ & 0x00040000) == 0x00040000)) {
            inst_ = java.util.Collections.unmodifiableList(inst_);
            bitField1_ = (bitField1_ & ~0x00040000);
          }
          result.inst_ = inst_;
        } else {
          result.inst_ = instBuilder_.build();
        }
        if (appBuilder_ == null) {
          if (((bitField1_ & 0x00080000) == 0x00080000)) {
            app_ = java.util.Collections.unmodifiableList(app_);
            bitField1_ = (bitField1_ & ~0x00080000);
          }
          result.app_ = app_;
        } else {
          result.app_ = appBuilder_.build();
        }
        if (launcherBuilder_ == null) {
          if (((bitField1_ & 0x00100000) == 0x00100000)) {
            launcher_ = java.util.Collections.unmodifiableList(launcher_);
            bitField1_ = (bitField1_ & ~0x00100000);
          }
          result.launcher_ = launcher_;
        } else {
          result.launcher_ = launcherBuilder_.build();
        }
        if (((from_bitField1_ & 0x00200000) == 0x00200000)) {
          to_bitField1_ |= 0x00000010;
        }
        result.index_ = index_;
        if (((from_bitField1_ & 0x00400000) == 0x00400000)) {
          to_bitField1_ |= 0x00000020;
        }
        if (logMessageBuilder_ == null) {
          result.logMessage_ = logMessage_;
        } else {
          result.logMessage_ = logMessageBuilder_.build();
        }
        if (((from_bitField1_ & 0x00800000) == 0x00800000)) {
          to_bitField1_ |= 0x00000040;
        }
        if (tpexecuteBuilder_ == null) {
          result.tpexecute_ = tpexecute_;
        } else {
          result.tpexecute_ = tpexecuteBuilder_.build();
        }
        if (((from_bitField1_ & 0x01000000) == 0x01000000)) {
          to_bitField1_ |= 0x00000080;
        }
        if (tpblockdeleteBuilder_ == null) {
          result.tpblockdelete_ = tpblockdelete_;
        } else {
          result.tpblockdelete_ = tpblockdeleteBuilder_.build();
        }
        if (((from_bitField1_ & 0x02000000) == 0x02000000)) {
          to_bitField1_ |= 0x00000100;
        }
        if (tpoptionalstopBuilder_ == null) {
          result.tpoptionalstop_ = tpoptionalstop_;
        } else {
          result.tpoptionalstop_ = tpoptionalstopBuilder_.build();
        }
        if (((from_bitField1_ & 0x04000000) == 0x04000000)) {
          to_bitField1_ |= 0x00000200;
        }
        if (tpopenBuilder_ == null) {
          result.tpopen_ = tpopen_;
        } else {
          result.tpopen_ = tpopenBuilder_.build();
        }
        if (((from_bitField1_ & 0x08000000) == 0x08000000)) {
          to_bitField1_ |= 0x00000400;
        }
        if (taskplanReplyBuilder_ == null) {
          result.taskplanReply_ = taskplanReply_;
        } else {
          result.taskplanReply_ = taskplanReplyBuilder_.build();
        }
        if (((from_bitField1_ & 0x10000000) == 0x10000000)) {
          to_bitField1_ |= 0x00000800;
        }
        if (trajSetG5XBuilder_ == null) {
          result.trajSetG5X_ = trajSetG5X_;
        } else {
          result.trajSetG5X_ = trajSetG5XBuilder_.build();
        }
        if (((from_bitField1_ & 0x20000000) == 0x20000000)) {
          to_bitField1_ |= 0x00001000;
        }
        if (trajSetG92Builder_ == null) {
          result.trajSetG92_ = trajSetG92_;
        } else {
          result.trajSetG92_ = trajSetG92Builder_.build();
        }
        if (((from_bitField1_ & 0x40000000) == 0x40000000)) {
          to_bitField1_ |= 0x00002000;
        }
        if (trajSetRotationBuilder_ == null) {
          result.trajSetRotation_ = trajSetRotation_;
        } else {
          result.trajSetRotation_ = trajSetRotationBuilder_.build();
        }
        if (((from_bitField1_ & 0x80000000) == 0x80000000)) {
          to_bitField1_ |= 0x00004000;
        }
        if (trajLinearMoveBuilder_ == null) {
          result.trajLinearMove_ = trajLinearMove_;
        } else {
          result.trajLinearMove_ = trajLinearMoveBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00008000;
        }
        if (trajProbeBuilder_ == null) {
          result.trajProbe_ = trajProbe_;
        } else {
          result.trajProbe_ = trajProbeBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00010000;
        }
        if (trajCircularMoveBuilder_ == null) {
          result.trajCircularMove_ = trajCircularMove_;
        } else {
          result.trajCircularMove_ = trajCircularMoveBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00020000;
        }
        if (trajRigidTapBuilder_ == null) {
          result.trajRigidTap_ = trajRigidTap_;
        } else {
          result.trajRigidTap_ = trajRigidTapBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00040000;
        }
        if (trajSetTermCondBuilder_ == null) {
          result.trajSetTermCond_ = trajSetTermCond_;
        } else {
          result.trajSetTermCond_ = trajSetTermCondBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00080000;
        }
        if (trajSetSpindlesyncBuilder_ == null) {
          result.trajSetSpindlesync_ = trajSetSpindlesync_;
        } else {
          result.trajSetSpindlesync_ = trajSetSpindlesyncBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00100000;
        }
        if (trajDelayBuilder_ == null) {
          result.trajDelay_ = trajDelay_;
        } else {
          result.trajDelay_ = trajDelayBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00200000;
        }
        if (spindleOnBuilder_ == null) {
          result.spindleOn_ = spindleOn_;
        } else {
          result.spindleOn_ = spindleOnBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00400000;
        }
        if (spindleSpeedBuilder_ == null) {
          result.spindleSpeed_ = spindleSpeed_;
        } else {
          result.spindleSpeed_ = spindleSpeedBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00800000;
        }
        if (spindleOrientBuilder_ == null) {
          result.spindleOrient_ = spindleOrient_;
        } else {
          result.spindleOrient_ = spindleOrientBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x01000000;
        }
        if (spindleWaitOrientCompleteBuilder_ == null) {
          result.spindleWaitOrientComplete_ = spindleWaitOrientComplete_;
        } else {
          result.spindleWaitOrientComplete_ = spindleWaitOrientCompleteBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x02000000;
        }
        if (toolSetOffetBuilder_ == null) {
          result.toolSetOffet_ = toolSetOffet_;
        } else {
          result.toolSetOffet_ = toolSetOffetBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x04000000;
        }
        if (trajSetOffsetBuilder_ == null) {
          result.trajSetOffset_ = trajSetOffset_;
        } else {
          result.trajSetOffset_ = trajSetOffsetBuilder_.build();
        }
        if (((from_bitField2_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x08000000;
        }
        if (toolPrepareBuilder_ == null) {
          result.toolPrepare_ = toolPrepare_;
        } else {
          result.toolPrepare_ = toolPrepareBuilder_.build();
        }
        if (((from_bitField2_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x10000000;
        }
        if (toolSetNumberBuilder_ == null) {
          result.toolSetNumber_ = toolSetNumber_;
        } else {
          result.toolSetNumber_ = toolSetNumberBuilder_.build();
        }
        if (((from_bitField2_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x20000000;
        }
        if (trajSetFoEnableBuilder_ == null) {
          result.trajSetFoEnable_ = trajSetFoEnable_;
        } else {
          result.trajSetFoEnable_ = trajSetFoEnableBuilder_.build();
        }
        if (((from_bitField2_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x40000000;
        }
        if (trajSetSoEnableBuilder_ == null) {
          result.trajSetSoEnable_ = trajSetSoEnable_;
        } else {
          result.trajSetSoEnable_ = trajSetSoEnableBuilder_.build();
        }
        if (((from_bitField2_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x80000000;
        }
        if (trajSetFhEnableBuilder_ == null) {
          result.trajSetFhEnable_ = trajSetFhEnable_;
        } else {
          result.trajSetFhEnable_ = trajSetFhEnableBuilder_.build();
        }
        if (((from_bitField2_ & 0x00020000) == 0x00020000)) {
          to_bitField2_ |= 0x00000001;
        }
        if (motionAdaptiveBuilder_ == null) {
          result.motionAdaptive_ = motionAdaptive_;
        } else {
          result.motionAdaptive_ = motionAdaptiveBuilder_.build();
        }
        if (((from_bitField2_ & 0x00040000) == 0x00040000)) {
          to_bitField2_ |= 0x00000002;
        }
        if (operatorDisplayBuilder_ == null) {
          result.operatorDisplay_ = operatorDisplay_;
        } else {
          result.operatorDisplay_ = operatorDisplayBuilder_.build();
        }
        if (((from_bitField2_ & 0x00080000) == 0x00080000)) {
          to_bitField2_ |= 0x00000004;
        }
        if (operatorTextBuilder_ == null) {
          result.operatorText_ = operatorText_;
        } else {
          result.operatorText_ = operatorTextBuilder_.build();
        }
        if (((from_bitField2_ & 0x00100000) == 0x00100000)) {
          to_bitField2_ |= 0x00000008;
        }
        if (operatorErrorBuilder_ == null) {
          result.operatorError_ = operatorError_;
        } else {
          result.operatorError_ = operatorErrorBuilder_.build();
        }
        if (((from_bitField2_ & 0x00200000) == 0x00200000)) {
          to_bitField2_ |= 0x00000010;
        }
        if (motionSetDoutBuilder_ == null) {
          result.motionSetDout_ = motionSetDout_;
        } else {
          result.motionSetDout_ = motionSetDoutBuilder_.build();
        }
        if (((from_bitField2_ & 0x00400000) == 0x00400000)) {
          to_bitField2_ |= 0x00000020;
        }
        if (motionSetAoutBuilder_ == null) {
          result.motionSetAout_ = motionSetAout_;
        } else {
          result.motionSetAout_ = motionSetAoutBuilder_.build();
        }
        if (((from_bitField2_ & 0x00800000) == 0x00800000)) {
          to_bitField2_ |= 0x00000040;
        }
        if (auxInputWaitBuilder_ == null) {
          result.auxInputWait_ = auxInputWait_;
        } else {
          result.auxInputWait_ = auxInputWaitBuilder_.build();
        }
        if (((from_bitField2_ & 0x01000000) == 0x01000000)) {
          to_bitField2_ |= 0x00000080;
        }
        if (execPluginCallBuilder_ == null) {
          result.execPluginCall_ = execPluginCall_;
        } else {
          result.execPluginCall_ = execPluginCallBuilder_.build();
        }
        if (((from_bitField2_ & 0x02000000) == 0x02000000)) {
          to_bitField2_ |= 0x00000100;
        }
        if (ioPluginCallBuilder_ == null) {
          result.ioPluginCall_ = ioPluginCall_;
        } else {
          result.ioPluginCall_ = ioPluginCallBuilder_.build();
        }
        if (((from_bitField2_ & 0x04000000) == 0x04000000)) {
          to_bitField2_ |= 0x00000200;
        }
        if (emcStatusConfigBuilder_ == null) {
          result.emcStatusConfig_ = emcStatusConfig_;
        } else {
          result.emcStatusConfig_ = emcStatusConfigBuilder_.build();
        }
        if (((from_bitField2_ & 0x08000000) == 0x08000000)) {
          to_bitField2_ |= 0x00000400;
        }
        if (emcStatusMotionBuilder_ == null) {
          result.emcStatusMotion_ = emcStatusMotion_;
        } else {
          result.emcStatusMotion_ = emcStatusMotionBuilder_.build();
        }
        if (((from_bitField2_ & 0x10000000) == 0x10000000)) {
          to_bitField2_ |= 0x00000800;
        }
        if (emcStatusIoBuilder_ == null) {
          result.emcStatusIo_ = emcStatusIo_;
        } else {
          result.emcStatusIo_ = emcStatusIoBuilder_.build();
        }
        if (((from_bitField2_ & 0x20000000) == 0x20000000)) {
          to_bitField2_ |= 0x00001000;
        }
        if (emcStatusTaskBuilder_ == null) {
          result.emcStatusTask_ = emcStatusTask_;
        } else {
          result.emcStatusTask_ = emcStatusTaskBuilder_.build();
        }
        if (((from_bitField2_ & 0x40000000) == 0x40000000)) {
          to_bitField2_ |= 0x00002000;
        }
        if (emcStatusInterpBuilder_ == null) {
          result.emcStatusInterp_ = emcStatusInterp_;
        } else {
          result.emcStatusInterp_ = emcStatusInterpBuilder_.build();
        }
        if (((from_bitField2_ & 0x80000000) == 0x80000000)) {
          to_bitField2_ |= 0x00004000;
        }
        if (emcCommandParamsBuilder_ == null) {
          result.emcCommandParams_ = emcCommandParams_;
        } else {
          result.emcCommandParams_ = emcCommandParamsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        result.bitField2_ = to_bitField2_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pb.Message.Container) {
          return mergeFrom((pb.Message.Container)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pb.Message.Container other) {
        if (other == pb.Message.Container.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTsc()) {
          setTsc(other.getTsc());
        }
        if (previewBuilder_ == null) {
          if (!other.preview_.isEmpty()) {
            if (preview_.isEmpty()) {
              preview_ = other.preview_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePreviewIsMutable();
              preview_.addAll(other.preview_);
            }
            onChanged();
          }
        } else {
          if (!other.preview_.isEmpty()) {
            if (previewBuilder_.isEmpty()) {
              previewBuilder_.dispose();
              previewBuilder_ = null;
              preview_ = other.preview_;
              bitField0_ = (bitField0_ & ~0x00000004);
              previewBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPreviewFieldBuilder() : null;
            } else {
              previewBuilder_.addAllMessages(other.preview_);
            }
          }
        }
        if (other.hasMotcmd()) {
          mergeMotcmd(other.getMotcmd());
        }
        if (other.hasMotstat()) {
          mergeMotstat(other.getMotstat());
        }
        if (other.hasLegacyMotcmd()) {
          setLegacyMotcmd(other.getLegacyMotcmd());
        }
        if (other.hasLegacyMotstat()) {
          setLegacyMotstat(other.getLegacyMotstat());
        }
        if (other.hasRtapiMessage()) {
          mergeRtapiMessage(other.getRtapiMessage());
        }
        if (other.hasTaskReply()) {
          mergeTaskReply(other.getTaskReply());
        }
        if (other.hasTicketUpdate()) {
          mergeTicketUpdate(other.getTicketUpdate());
        }
        if (other.hasSyslog()) {
          setSyslog(other.getSyslog());
        }
        if (other.hasLegacyNml()) {
          setLegacyNml(other.getLegacyNml());
        }
        if (other.hasLegacyMotconfig()) {
          setLegacyMotconfig(other.getLegacyMotconfig());
        }
        if (other.hasTvSec()) {
          setTvSec(other.getTvSec());
        }
        if (other.hasTvNsec()) {
          setTvNsec(other.getTvNsec());
        }
        if (other.hasTopic()) {
          bitField0_ |= 0x00008000;
          topic_ = other.topic_;
          onChanged();
        }
        if (other.hasReplyRequired()) {
          setReplyRequired(other.getReplyRequired());
        }
        if (other.hasInterpState()) {
          setInterpState(other.getInterpState());
        }
        if (other.hasInterpName()) {
          bitField0_ |= 0x00040000;
          interpName_ = other.interpName_;
          onChanged();
        }
        if (other.hasRsvp()) {
          setRsvp(other.getRsvp());
        }
        if (other.hasInReplyTo()) {
          setInReplyTo(other.getInReplyTo());
        }
        if (other.hasRcsStatus()) {
          setRcsStatus(other.getRcsStatus());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasSerial()) {
          setSerial(other.getSerial());
        }
        if (other.hasReplySerial()) {
          setReplySerial(other.getReplySerial());
        }
        if (other.hasTicket()) {
          setTicket(other.getTicket());
        }
        if (other.hasReplyTicket()) {
          setReplyTicket(other.getReplyTicket());
        }
        if (other.hasSequence()) {
          setSequence(other.getSequence());
        }
        if (other.hasCredit()) {
          setCredit(other.getCredit());
        }
        if (other.hasLineNumber()) {
          setLineNumber(other.getLineNumber());
        }
        if (other.hasName()) {
          bitField0_ |= 0x40000000;
          name_ = other.name_;
          onChanged();
        }
        if (!other.note_.isEmpty()) {
          if (note_.isEmpty()) {
            note_ = other.note_;
            bitField0_ = (bitField0_ & ~0x80000000);
          } else {
            ensureNoteIsMutable();
            note_.addAll(other.note_);
          }
          onChanged();
        }
        if (other.hasRetcode()) {
          setRetcode(other.getRetcode());
        }
        if (other.hasUuid()) {
          setUuid(other.getUuid());
        }
        if (other.hasTrace()) {
          setTrace(other.getTrace());
        }
        if (other.hasInstance()) {
          setInstance(other.getInstance());
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField1_ = (bitField1_ & ~0x00000010);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField1_ = (bitField1_ & ~0x00000010);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        if (other.hasRtapicmd()) {
          mergeRtapicmd(other.getRtapicmd());
        }
        if (serviceAnnouncementBuilder_ == null) {
          if (!other.serviceAnnouncement_.isEmpty()) {
            if (serviceAnnouncement_.isEmpty()) {
              serviceAnnouncement_ = other.serviceAnnouncement_;
              bitField1_ = (bitField1_ & ~0x00000040);
            } else {
              ensureServiceAnnouncementIsMutable();
              serviceAnnouncement_.addAll(other.serviceAnnouncement_);
            }
            onChanged();
          }
        } else {
          if (!other.serviceAnnouncement_.isEmpty()) {
            if (serviceAnnouncementBuilder_.isEmpty()) {
              serviceAnnouncementBuilder_.dispose();
              serviceAnnouncementBuilder_ = null;
              serviceAnnouncement_ = other.serviceAnnouncement_;
              bitField1_ = (bitField1_ & ~0x00000040);
              serviceAnnouncementBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getServiceAnnouncementFieldBuilder() : null;
            } else {
              serviceAnnouncementBuilder_.addAllMessages(other.serviceAnnouncement_);
            }
          }
        }
        if (compBuilder_ == null) {
          if (!other.comp_.isEmpty()) {
            if (comp_.isEmpty()) {
              comp_ = other.comp_;
              bitField1_ = (bitField1_ & ~0x00000080);
            } else {
              ensureCompIsMutable();
              comp_.addAll(other.comp_);
            }
            onChanged();
          }
        } else {
          if (!other.comp_.isEmpty()) {
            if (compBuilder_.isEmpty()) {
              compBuilder_.dispose();
              compBuilder_ = null;
              comp_ = other.comp_;
              bitField1_ = (bitField1_ & ~0x00000080);
              compBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCompFieldBuilder() : null;
            } else {
              compBuilder_.addAllMessages(other.comp_);
            }
          }
        }
        if (pinBuilder_ == null) {
          if (!other.pin_.isEmpty()) {
            if (pin_.isEmpty()) {
              pin_ = other.pin_;
              bitField1_ = (bitField1_ & ~0x00000100);
            } else {
              ensurePinIsMutable();
              pin_.addAll(other.pin_);
            }
            onChanged();
          }
        } else {
          if (!other.pin_.isEmpty()) {
            if (pinBuilder_.isEmpty()) {
              pinBuilder_.dispose();
              pinBuilder_ = null;
              pin_ = other.pin_;
              bitField1_ = (bitField1_ & ~0x00000100);
              pinBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPinFieldBuilder() : null;
            } else {
              pinBuilder_.addAllMessages(other.pin_);
            }
          }
        }
        if (signalBuilder_ == null) {
          if (!other.signal_.isEmpty()) {
            if (signal_.isEmpty()) {
              signal_ = other.signal_;
              bitField1_ = (bitField1_ & ~0x00000200);
            } else {
              ensureSignalIsMutable();
              signal_.addAll(other.signal_);
            }
            onChanged();
          }
        } else {
          if (!other.signal_.isEmpty()) {
            if (signalBuilder_.isEmpty()) {
              signalBuilder_.dispose();
              signalBuilder_ = null;
              signal_ = other.signal_;
              bitField1_ = (bitField1_ & ~0x00000200);
              signalBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSignalFieldBuilder() : null;
            } else {
              signalBuilder_.addAllMessages(other.signal_);
            }
          }
        }
        if (paramBuilder_ == null) {
          if (!other.param_.isEmpty()) {
            if (param_.isEmpty()) {
              param_ = other.param_;
              bitField1_ = (bitField1_ & ~0x00000400);
            } else {
              ensureParamIsMutable();
              param_.addAll(other.param_);
            }
            onChanged();
          }
        } else {
          if (!other.param_.isEmpty()) {
            if (paramBuilder_.isEmpty()) {
              paramBuilder_.dispose();
              paramBuilder_ = null;
              param_ = other.param_;
              bitField1_ = (bitField1_ & ~0x00000400);
              paramBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getParamFieldBuilder() : null;
            } else {
              paramBuilder_.addAllMessages(other.param_);
            }
          }
        }
        if (threadBuilder_ == null) {
          if (!other.thread_.isEmpty()) {
            if (thread_.isEmpty()) {
              thread_ = other.thread_;
              bitField1_ = (bitField1_ & ~0x00000800);
            } else {
              ensureThreadIsMutable();
              thread_.addAll(other.thread_);
            }
            onChanged();
          }
        } else {
          if (!other.thread_.isEmpty()) {
            if (threadBuilder_.isEmpty()) {
              threadBuilder_.dispose();
              threadBuilder_ = null;
              thread_ = other.thread_;
              bitField1_ = (bitField1_ & ~0x00000800);
              threadBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getThreadFieldBuilder() : null;
            } else {
              threadBuilder_.addAllMessages(other.thread_);
            }
          }
        }
        if (ringBuilder_ == null) {
          if (!other.ring_.isEmpty()) {
            if (ring_.isEmpty()) {
              ring_ = other.ring_;
              bitField1_ = (bitField1_ & ~0x00001000);
            } else {
              ensureRingIsMutable();
              ring_.addAll(other.ring_);
            }
            onChanged();
          }
        } else {
          if (!other.ring_.isEmpty()) {
            if (ringBuilder_.isEmpty()) {
              ringBuilder_.dispose();
              ringBuilder_ = null;
              ring_ = other.ring_;
              bitField1_ = (bitField1_ & ~0x00001000);
              ringBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRingFieldBuilder() : null;
            } else {
              ringBuilder_.addAllMessages(other.ring_);
            }
          }
        }
        if (groupBuilder_ == null) {
          if (!other.group_.isEmpty()) {
            if (group_.isEmpty()) {
              group_ = other.group_;
              bitField1_ = (bitField1_ & ~0x00002000);
            } else {
              ensureGroupIsMutable();
              group_.addAll(other.group_);
            }
            onChanged();
          }
        } else {
          if (!other.group_.isEmpty()) {
            if (groupBuilder_.isEmpty()) {
              groupBuilder_.dispose();
              groupBuilder_ = null;
              group_ = other.group_;
              bitField1_ = (bitField1_ & ~0x00002000);
              groupBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGroupFieldBuilder() : null;
            } else {
              groupBuilder_.addAllMessages(other.group_);
            }
          }
        }
        if (memberBuilder_ == null) {
          if (!other.member_.isEmpty()) {
            if (member_.isEmpty()) {
              member_ = other.member_;
              bitField1_ = (bitField1_ & ~0x00004000);
            } else {
              ensureMemberIsMutable();
              member_.addAll(other.member_);
            }
            onChanged();
          }
        } else {
          if (!other.member_.isEmpty()) {
            if (memberBuilder_.isEmpty()) {
              memberBuilder_.dispose();
              memberBuilder_ = null;
              member_ = other.member_;
              bitField1_ = (bitField1_ & ~0x00004000);
              memberBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMemberFieldBuilder() : null;
            } else {
              memberBuilder_.addAllMessages(other.member_);
            }
          }
        }
        if (functionBuilder_ == null) {
          if (!other.function_.isEmpty()) {
            if (function_.isEmpty()) {
              function_ = other.function_;
              bitField1_ = (bitField1_ & ~0x00008000);
            } else {
              ensureFunctionIsMutable();
              function_.addAll(other.function_);
            }
            onChanged();
          }
        } else {
          if (!other.function_.isEmpty()) {
            if (functionBuilder_.isEmpty()) {
              functionBuilder_.dispose();
              functionBuilder_ = null;
              function_ = other.function_;
              bitField1_ = (bitField1_ & ~0x00008000);
              functionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFunctionFieldBuilder() : null;
            } else {
              functionBuilder_.addAllMessages(other.function_);
            }
          }
        }
        if (other.hasPparams()) {
          mergePparams(other.getPparams());
        }
        if (vtableBuilder_ == null) {
          if (!other.vtable_.isEmpty()) {
            if (vtable_.isEmpty()) {
              vtable_ = other.vtable_;
              bitField1_ = (bitField1_ & ~0x00020000);
            } else {
              ensureVtableIsMutable();
              vtable_.addAll(other.vtable_);
            }
            onChanged();
          }
        } else {
          if (!other.vtable_.isEmpty()) {
            if (vtableBuilder_.isEmpty()) {
              vtableBuilder_.dispose();
              vtableBuilder_ = null;
              vtable_ = other.vtable_;
              bitField1_ = (bitField1_ & ~0x00020000);
              vtableBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVtableFieldBuilder() : null;
            } else {
              vtableBuilder_.addAllMessages(other.vtable_);
            }
          }
        }
        if (instBuilder_ == null) {
          if (!other.inst_.isEmpty()) {
            if (inst_.isEmpty()) {
              inst_ = other.inst_;
              bitField1_ = (bitField1_ & ~0x00040000);
            } else {
              ensureInstIsMutable();
              inst_.addAll(other.inst_);
            }
            onChanged();
          }
        } else {
          if (!other.inst_.isEmpty()) {
            if (instBuilder_.isEmpty()) {
              instBuilder_.dispose();
              instBuilder_ = null;
              inst_ = other.inst_;
              bitField1_ = (bitField1_ & ~0x00040000);
              instBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInstFieldBuilder() : null;
            } else {
              instBuilder_.addAllMessages(other.inst_);
            }
          }
        }
        if (appBuilder_ == null) {
          if (!other.app_.isEmpty()) {
            if (app_.isEmpty()) {
              app_ = other.app_;
              bitField1_ = (bitField1_ & ~0x00080000);
            } else {
              ensureAppIsMutable();
              app_.addAll(other.app_);
            }
            onChanged();
          }
        } else {
          if (!other.app_.isEmpty()) {
            if (appBuilder_.isEmpty()) {
              appBuilder_.dispose();
              appBuilder_ = null;
              app_ = other.app_;
              bitField1_ = (bitField1_ & ~0x00080000);
              appBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAppFieldBuilder() : null;
            } else {
              appBuilder_.addAllMessages(other.app_);
            }
          }
        }
        if (launcherBuilder_ == null) {
          if (!other.launcher_.isEmpty()) {
            if (launcher_.isEmpty()) {
              launcher_ = other.launcher_;
              bitField1_ = (bitField1_ & ~0x00100000);
            } else {
              ensureLauncherIsMutable();
              launcher_.addAll(other.launcher_);
            }
            onChanged();
          }
        } else {
          if (!other.launcher_.isEmpty()) {
            if (launcherBuilder_.isEmpty()) {
              launcherBuilder_.dispose();
              launcherBuilder_ = null;
              launcher_ = other.launcher_;
              bitField1_ = (bitField1_ & ~0x00100000);
              launcherBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLauncherFieldBuilder() : null;
            } else {
              launcherBuilder_.addAllMessages(other.launcher_);
            }
          }
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasLogMessage()) {
          mergeLogMessage(other.getLogMessage());
        }
        if (other.hasTpexecute()) {
          mergeTpexecute(other.getTpexecute());
        }
        if (other.hasTpblockdelete()) {
          mergeTpblockdelete(other.getTpblockdelete());
        }
        if (other.hasTpoptionalstop()) {
          mergeTpoptionalstop(other.getTpoptionalstop());
        }
        if (other.hasTpopen()) {
          mergeTpopen(other.getTpopen());
        }
        if (other.hasTaskplanReply()) {
          mergeTaskplanReply(other.getTaskplanReply());
        }
        if (other.hasTrajSetG5X()) {
          mergeTrajSetG5X(other.getTrajSetG5X());
        }
        if (other.hasTrajSetG92()) {
          mergeTrajSetG92(other.getTrajSetG92());
        }
        if (other.hasTrajSetRotation()) {
          mergeTrajSetRotation(other.getTrajSetRotation());
        }
        if (other.hasTrajLinearMove()) {
          mergeTrajLinearMove(other.getTrajLinearMove());
        }
        if (other.hasTrajProbe()) {
          mergeTrajProbe(other.getTrajProbe());
        }
        if (other.hasTrajCircularMove()) {
          mergeTrajCircularMove(other.getTrajCircularMove());
        }
        if (other.hasTrajRigidTap()) {
          mergeTrajRigidTap(other.getTrajRigidTap());
        }
        if (other.hasTrajSetTermCond()) {
          mergeTrajSetTermCond(other.getTrajSetTermCond());
        }
        if (other.hasTrajSetSpindlesync()) {
          mergeTrajSetSpindlesync(other.getTrajSetSpindlesync());
        }
        if (other.hasTrajDelay()) {
          mergeTrajDelay(other.getTrajDelay());
        }
        if (other.hasSpindleOn()) {
          mergeSpindleOn(other.getSpindleOn());
        }
        if (other.hasSpindleSpeed()) {
          mergeSpindleSpeed(other.getSpindleSpeed());
        }
        if (other.hasSpindleOrient()) {
          mergeSpindleOrient(other.getSpindleOrient());
        }
        if (other.hasSpindleWaitOrientComplete()) {
          mergeSpindleWaitOrientComplete(other.getSpindleWaitOrientComplete());
        }
        if (other.hasToolSetOffet()) {
          mergeToolSetOffet(other.getToolSetOffet());
        }
        if (other.hasTrajSetOffset()) {
          mergeTrajSetOffset(other.getTrajSetOffset());
        }
        if (other.hasToolPrepare()) {
          mergeToolPrepare(other.getToolPrepare());
        }
        if (other.hasToolSetNumber()) {
          mergeToolSetNumber(other.getToolSetNumber());
        }
        if (other.hasTrajSetFoEnable()) {
          mergeTrajSetFoEnable(other.getTrajSetFoEnable());
        }
        if (other.hasTrajSetSoEnable()) {
          mergeTrajSetSoEnable(other.getTrajSetSoEnable());
        }
        if (other.hasTrajSetFhEnable()) {
          mergeTrajSetFhEnable(other.getTrajSetFhEnable());
        }
        if (other.hasMotionAdaptive()) {
          mergeMotionAdaptive(other.getMotionAdaptive());
        }
        if (other.hasOperatorDisplay()) {
          mergeOperatorDisplay(other.getOperatorDisplay());
        }
        if (other.hasOperatorText()) {
          mergeOperatorText(other.getOperatorText());
        }
        if (other.hasOperatorError()) {
          mergeOperatorError(other.getOperatorError());
        }
        if (other.hasMotionSetDout()) {
          mergeMotionSetDout(other.getMotionSetDout());
        }
        if (other.hasMotionSetAout()) {
          mergeMotionSetAout(other.getMotionSetAout());
        }
        if (other.hasAuxInputWait()) {
          mergeAuxInputWait(other.getAuxInputWait());
        }
        if (other.hasExecPluginCall()) {
          mergeExecPluginCall(other.getExecPluginCall());
        }
        if (other.hasIoPluginCall()) {
          mergeIoPluginCall(other.getIoPluginCall());
        }
        if (other.hasEmcStatusConfig()) {
          mergeEmcStatusConfig(other.getEmcStatusConfig());
        }
        if (other.hasEmcStatusMotion()) {
          mergeEmcStatusMotion(other.getEmcStatusMotion());
        }
        if (other.hasEmcStatusIo()) {
          mergeEmcStatusIo(other.getEmcStatusIo());
        }
        if (other.hasEmcStatusTask()) {
          mergeEmcStatusTask(other.getEmcStatusTask());
        }
        if (other.hasEmcStatusInterp()) {
          mergeEmcStatusInterp(other.getEmcStatusInterp());
        }
        if (other.hasEmcCommandParams()) {
          mergeEmcCommandParams(other.getEmcCommandParams());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        for (int i = 0; i < getPreviewCount(); i++) {
          if (!getPreview(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasMotcmd()) {
          if (!getMotcmd().isInitialized()) {
            
            return false;
          }
        }
        if (hasMotstat()) {
          if (!getMotstat().isInitialized()) {
            
            return false;
          }
        }
        if (hasRtapiMessage()) {
          if (!getRtapiMessage().isInitialized()) {
            
            return false;
          }
        }
        if (hasTaskReply()) {
          if (!getTaskReply().isInitialized()) {
            
            return false;
          }
        }
        if (hasTicketUpdate()) {
          if (!getTicketUpdate().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getValueCount(); i++) {
          if (!getValue(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasRtapicmd()) {
          if (!getRtapicmd().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getServiceAnnouncementCount(); i++) {
          if (!getServiceAnnouncement(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAppCount(); i++) {
          if (!getApp(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getLauncherCount(); i++) {
          if (!getLauncher(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasLogMessage()) {
          if (!getLogMessage().isInitialized()) {
            
            return false;
          }
        }
        if (hasTpblockdelete()) {
          if (!getTpblockdelete().isInitialized()) {
            
            return false;
          }
        }
        if (hasTpoptionalstop()) {
          if (!getTpoptionalstop().isInitialized()) {
            
            return false;
          }
        }
        if (hasTpopen()) {
          if (!getTpopen().isInitialized()) {
            
            return false;
          }
        }
        if (hasTaskplanReply()) {
          if (!getTaskplanReply().isInitialized()) {
            
            return false;
          }
        }
        if (hasTrajSetG5X()) {
          if (!getTrajSetG5X().isInitialized()) {
            
            return false;
          }
        }
        if (hasTrajSetG92()) {
          if (!getTrajSetG92().isInitialized()) {
            
            return false;
          }
        }
        if (hasTrajSetRotation()) {
          if (!getTrajSetRotation().isInitialized()) {
            
            return false;
          }
        }
        if (hasTrajLinearMove()) {
          if (!getTrajLinearMove().isInitialized()) {
            
            return false;
          }
        }
        if (hasTrajProbe()) {
          if (!getTrajProbe().isInitialized()) {
            
            return false;
          }
        }
        if (hasTrajCircularMove()) {
          if (!getTrajCircularMove().isInitialized()) {
            
            return false;
          }
        }
        if (hasTrajRigidTap()) {
          if (!getTrajRigidTap().isInitialized()) {
            
            return false;
          }
        }
        if (hasTrajSetTermCond()) {
          if (!getTrajSetTermCond().isInitialized()) {
            
            return false;
          }
        }
        if (hasTrajSetSpindlesync()) {
          if (!getTrajSetSpindlesync().isInitialized()) {
            
            return false;
          }
        }
        if (hasTrajDelay()) {
          if (!getTrajDelay().isInitialized()) {
            
            return false;
          }
        }
        if (hasSpindleOn()) {
          if (!getSpindleOn().isInitialized()) {
            
            return false;
          }
        }
        if (hasSpindleSpeed()) {
          if (!getSpindleSpeed().isInitialized()) {
            
            return false;
          }
        }
        if (hasSpindleOrient()) {
          if (!getSpindleOrient().isInitialized()) {
            
            return false;
          }
        }
        if (hasSpindleWaitOrientComplete()) {
          if (!getSpindleWaitOrientComplete().isInitialized()) {
            
            return false;
          }
        }
        if (hasToolSetOffet()) {
          if (!getToolSetOffet().isInitialized()) {
            
            return false;
          }
        }
        if (hasTrajSetOffset()) {
          if (!getTrajSetOffset().isInitialized()) {
            
            return false;
          }
        }
        if (hasToolPrepare()) {
          if (!getToolPrepare().isInitialized()) {
            
            return false;
          }
        }
        if (hasToolSetNumber()) {
          if (!getToolSetNumber().isInitialized()) {
            
            return false;
          }
        }
        if (hasTrajSetFoEnable()) {
          if (!getTrajSetFoEnable().isInitialized()) {
            
            return false;
          }
        }
        if (hasTrajSetSoEnable()) {
          if (!getTrajSetSoEnable().isInitialized()) {
            
            return false;
          }
        }
        if (hasTrajSetFhEnable()) {
          if (!getTrajSetFhEnable().isInitialized()) {
            
            return false;
          }
        }
        if (hasMotionAdaptive()) {
          if (!getMotionAdaptive().isInitialized()) {
            
            return false;
          }
        }
        if (hasOperatorDisplay()) {
          if (!getOperatorDisplay().isInitialized()) {
            
            return false;
          }
        }
        if (hasOperatorText()) {
          if (!getOperatorText().isInitialized()) {
            
            return false;
          }
        }
        if (hasOperatorError()) {
          if (!getOperatorError().isInitialized()) {
            
            return false;
          }
        }
        if (hasMotionSetDout()) {
          if (!getMotionSetDout().isInitialized()) {
            
            return false;
          }
        }
        if (hasMotionSetAout()) {
          if (!getMotionSetAout().isInitialized()) {
            
            return false;
          }
        }
        if (hasAuxInputWait()) {
          if (!getAuxInputWait().isInitialized()) {
            
            return false;
          }
        }
        if (hasExecPluginCall()) {
          if (!getExecPluginCall().isInitialized()) {
            
            return false;
          }
        }
        if (hasIoPluginCall()) {
          if (!getIoPluginCall().isInitialized()) {
            
            return false;
          }
        }
        if (hasEmcStatusConfig()) {
          if (!getEmcStatusConfig().isInitialized()) {
            
            return false;
          }
        }
        if (hasEmcStatusMotion()) {
          if (!getEmcStatusMotion().isInitialized()) {
            
            return false;
          }
        }
        if (hasEmcStatusIo()) {
          if (!getEmcStatusIo().isInitialized()) {
            
            return false;
          }
        }
        if (hasEmcStatusInterp()) {
          if (!getEmcStatusInterp().isInitialized()) {
            
            return false;
          }
        }
        if (hasEmcCommandParams()) {
          if (!getEmcCommandParams().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pb.Message.Container parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pb.Message.Container) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;
      private int bitField2_;

      private pb.Types.ContainerType type_ = pb.Types.ContainerType.MT_RTMESSAGE;
      /**
       * <code>required .pb.ContainerType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .pb.ContainerType type = 1;</code>
       */
      public pb.Types.ContainerType getType() {
        return type_;
      }
      /**
       * <code>required .pb.ContainerType type = 1;</code>
       */
      public Builder setType(pb.Types.ContainerType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .pb.ContainerType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = pb.Types.ContainerType.MT_RTMESSAGE;
        onChanged();
        return this;
      }

      private long tsc_ ;
      /**
       * <code>optional sfixed64 tsc = 7;</code>
       *
       * <pre>
       * protobuf-encoded submessages
       * tags with values in the range 1 through 15 take one byte to encode
       * so place the frequently used compound messages here
       * </pre>
       */
      public boolean hasTsc() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sfixed64 tsc = 7;</code>
       *
       * <pre>
       * protobuf-encoded submessages
       * tags with values in the range 1 through 15 take one byte to encode
       * so place the frequently used compound messages here
       * </pre>
       */
      public long getTsc() {
        return tsc_;
      }
      /**
       * <code>optional sfixed64 tsc = 7;</code>
       *
       * <pre>
       * protobuf-encoded submessages
       * tags with values in the range 1 through 15 take one byte to encode
       * so place the frequently used compound messages here
       * </pre>
       */
      public Builder setTsc(long value) {
        bitField0_ |= 0x00000002;
        tsc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed64 tsc = 7;</code>
       *
       * <pre>
       * protobuf-encoded submessages
       * tags with values in the range 1 through 15 take one byte to encode
       * so place the frequently used compound messages here
       * </pre>
       */
      public Builder clearTsc() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tsc_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<pb.PreviewOuterClass.Preview> preview_ =
        java.util.Collections.emptyList();
      private void ensurePreviewIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          preview_ = new java.util.ArrayList<pb.PreviewOuterClass.Preview>(preview_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pb.PreviewOuterClass.Preview, pb.PreviewOuterClass.Preview.Builder, pb.PreviewOuterClass.PreviewOrBuilder> previewBuilder_;

      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public java.util.List<pb.PreviewOuterClass.Preview> getPreviewList() {
        if (previewBuilder_ == null) {
          return java.util.Collections.unmodifiableList(preview_);
        } else {
          return previewBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public int getPreviewCount() {
        if (previewBuilder_ == null) {
          return preview_.size();
        } else {
          return previewBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public pb.PreviewOuterClass.Preview getPreview(int index) {
        if (previewBuilder_ == null) {
          return preview_.get(index);
        } else {
          return previewBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public Builder setPreview(
          int index, pb.PreviewOuterClass.Preview value) {
        if (previewBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePreviewIsMutable();
          preview_.set(index, value);
          onChanged();
        } else {
          previewBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public Builder setPreview(
          int index, pb.PreviewOuterClass.Preview.Builder builderForValue) {
        if (previewBuilder_ == null) {
          ensurePreviewIsMutable();
          preview_.set(index, builderForValue.build());
          onChanged();
        } else {
          previewBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public Builder addPreview(pb.PreviewOuterClass.Preview value) {
        if (previewBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePreviewIsMutable();
          preview_.add(value);
          onChanged();
        } else {
          previewBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public Builder addPreview(
          int index, pb.PreviewOuterClass.Preview value) {
        if (previewBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePreviewIsMutable();
          preview_.add(index, value);
          onChanged();
        } else {
          previewBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public Builder addPreview(
          pb.PreviewOuterClass.Preview.Builder builderForValue) {
        if (previewBuilder_ == null) {
          ensurePreviewIsMutable();
          preview_.add(builderForValue.build());
          onChanged();
        } else {
          previewBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public Builder addPreview(
          int index, pb.PreviewOuterClass.Preview.Builder builderForValue) {
        if (previewBuilder_ == null) {
          ensurePreviewIsMutable();
          preview_.add(index, builderForValue.build());
          onChanged();
        } else {
          previewBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public Builder addAllPreview(
          java.lang.Iterable<? extends pb.PreviewOuterClass.Preview> values) {
        if (previewBuilder_ == null) {
          ensurePreviewIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, preview_);
          onChanged();
        } else {
          previewBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public Builder clearPreview() {
        if (previewBuilder_ == null) {
          preview_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          previewBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public Builder removePreview(int index) {
        if (previewBuilder_ == null) {
          ensurePreviewIsMutable();
          preview_.remove(index);
          onChanged();
        } else {
          previewBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public pb.PreviewOuterClass.Preview.Builder getPreviewBuilder(
          int index) {
        return getPreviewFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public pb.PreviewOuterClass.PreviewOrBuilder getPreviewOrBuilder(
          int index) {
        if (previewBuilder_ == null) {
          return preview_.get(index);  } else {
          return previewBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public java.util.List<? extends pb.PreviewOuterClass.PreviewOrBuilder> 
           getPreviewOrBuilderList() {
        if (previewBuilder_ != null) {
          return previewBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(preview_);
        }
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public pb.PreviewOuterClass.Preview.Builder addPreviewBuilder() {
        return getPreviewFieldBuilder().addBuilder(
            pb.PreviewOuterClass.Preview.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public pb.PreviewOuterClass.Preview.Builder addPreviewBuilder(
          int index) {
        return getPreviewFieldBuilder().addBuilder(
            index, pb.PreviewOuterClass.Preview.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Preview preview = 8;</code>
       */
      public java.util.List<pb.PreviewOuterClass.Preview.Builder> 
           getPreviewBuilderList() {
        return getPreviewFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pb.PreviewOuterClass.Preview, pb.PreviewOuterClass.Preview.Builder, pb.PreviewOuterClass.PreviewOrBuilder> 
          getPreviewFieldBuilder() {
        if (previewBuilder_ == null) {
          previewBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pb.PreviewOuterClass.Preview, pb.PreviewOuterClass.Preview.Builder, pb.PreviewOuterClass.PreviewOrBuilder>(
                  preview_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          preview_ = null;
        }
        return previewBuilder_;
      }

      private pb.Motcmds.MotionCommand motcmd_ = pb.Motcmds.MotionCommand.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Motcmds.MotionCommand, pb.Motcmds.MotionCommand.Builder, pb.Motcmds.MotionCommandOrBuilder> motcmdBuilder_;
      /**
       * <code>optional .pb.MotionCommand motcmd = 9;</code>
       */
      public boolean hasMotcmd() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .pb.MotionCommand motcmd = 9;</code>
       */
      public pb.Motcmds.MotionCommand getMotcmd() {
        if (motcmdBuilder_ == null) {
          return motcmd_;
        } else {
          return motcmdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.MotionCommand motcmd = 9;</code>
       */
      public Builder setMotcmd(pb.Motcmds.MotionCommand value) {
        if (motcmdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          motcmd_ = value;
          onChanged();
        } else {
          motcmdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .pb.MotionCommand motcmd = 9;</code>
       */
      public Builder setMotcmd(
          pb.Motcmds.MotionCommand.Builder builderForValue) {
        if (motcmdBuilder_ == null) {
          motcmd_ = builderForValue.build();
          onChanged();
        } else {
          motcmdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .pb.MotionCommand motcmd = 9;</code>
       */
      public Builder mergeMotcmd(pb.Motcmds.MotionCommand value) {
        if (motcmdBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              motcmd_ != pb.Motcmds.MotionCommand.getDefaultInstance()) {
            motcmd_ =
              pb.Motcmds.MotionCommand.newBuilder(motcmd_).mergeFrom(value).buildPartial();
          } else {
            motcmd_ = value;
          }
          onChanged();
        } else {
          motcmdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .pb.MotionCommand motcmd = 9;</code>
       */
      public Builder clearMotcmd() {
        if (motcmdBuilder_ == null) {
          motcmd_ = pb.Motcmds.MotionCommand.getDefaultInstance();
          onChanged();
        } else {
          motcmdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .pb.MotionCommand motcmd = 9;</code>
       */
      public pb.Motcmds.MotionCommand.Builder getMotcmdBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMotcmdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.MotionCommand motcmd = 9;</code>
       */
      public pb.Motcmds.MotionCommandOrBuilder getMotcmdOrBuilder() {
        if (motcmdBuilder_ != null) {
          return motcmdBuilder_.getMessageOrBuilder();
        } else {
          return motcmd_;
        }
      }
      /**
       * <code>optional .pb.MotionCommand motcmd = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Motcmds.MotionCommand, pb.Motcmds.MotionCommand.Builder, pb.Motcmds.MotionCommandOrBuilder> 
          getMotcmdFieldBuilder() {
        if (motcmdBuilder_ == null) {
          motcmdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Motcmds.MotionCommand, pb.Motcmds.MotionCommand.Builder, pb.Motcmds.MotionCommandOrBuilder>(
                  getMotcmd(),
                  getParentForChildren(),
                  isClean());
          motcmd_ = null;
        }
        return motcmdBuilder_;
      }

      private pb.Motcmds.MotionStatus motstat_ = pb.Motcmds.MotionStatus.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Motcmds.MotionStatus, pb.Motcmds.MotionStatus.Builder, pb.Motcmds.MotionStatusOrBuilder> motstatBuilder_;
      /**
       * <code>optional .pb.MotionStatus motstat = 10;</code>
       */
      public boolean hasMotstat() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .pb.MotionStatus motstat = 10;</code>
       */
      public pb.Motcmds.MotionStatus getMotstat() {
        if (motstatBuilder_ == null) {
          return motstat_;
        } else {
          return motstatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.MotionStatus motstat = 10;</code>
       */
      public Builder setMotstat(pb.Motcmds.MotionStatus value) {
        if (motstatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          motstat_ = value;
          onChanged();
        } else {
          motstatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .pb.MotionStatus motstat = 10;</code>
       */
      public Builder setMotstat(
          pb.Motcmds.MotionStatus.Builder builderForValue) {
        if (motstatBuilder_ == null) {
          motstat_ = builderForValue.build();
          onChanged();
        } else {
          motstatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .pb.MotionStatus motstat = 10;</code>
       */
      public Builder mergeMotstat(pb.Motcmds.MotionStatus value) {
        if (motstatBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              motstat_ != pb.Motcmds.MotionStatus.getDefaultInstance()) {
            motstat_ =
              pb.Motcmds.MotionStatus.newBuilder(motstat_).mergeFrom(value).buildPartial();
          } else {
            motstat_ = value;
          }
          onChanged();
        } else {
          motstatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .pb.MotionStatus motstat = 10;</code>
       */
      public Builder clearMotstat() {
        if (motstatBuilder_ == null) {
          motstat_ = pb.Motcmds.MotionStatus.getDefaultInstance();
          onChanged();
        } else {
          motstatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .pb.MotionStatus motstat = 10;</code>
       */
      public pb.Motcmds.MotionStatus.Builder getMotstatBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getMotstatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.MotionStatus motstat = 10;</code>
       */
      public pb.Motcmds.MotionStatusOrBuilder getMotstatOrBuilder() {
        if (motstatBuilder_ != null) {
          return motstatBuilder_.getMessageOrBuilder();
        } else {
          return motstat_;
        }
      }
      /**
       * <code>optional .pb.MotionStatus motstat = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Motcmds.MotionStatus, pb.Motcmds.MotionStatus.Builder, pb.Motcmds.MotionStatusOrBuilder> 
          getMotstatFieldBuilder() {
        if (motstatBuilder_ == null) {
          motstatBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Motcmds.MotionStatus, pb.Motcmds.MotionStatus.Builder, pb.Motcmds.MotionStatusOrBuilder>(
                  getMotstat(),
                  getParentForChildren(),
                  isClean());
          motstat_ = null;
        }
        return motstatBuilder_;
      }

      private com.google.protobuf.ByteString legacyMotcmd_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes legacy_motcmd = 11;</code>
       *
       * <pre>
       * emcmot_command_t wrapped in PB
       * </pre>
       */
      public boolean hasLegacyMotcmd() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bytes legacy_motcmd = 11;</code>
       *
       * <pre>
       * emcmot_command_t wrapped in PB
       * </pre>
       */
      public com.google.protobuf.ByteString getLegacyMotcmd() {
        return legacyMotcmd_;
      }
      /**
       * <code>optional bytes legacy_motcmd = 11;</code>
       *
       * <pre>
       * emcmot_command_t wrapped in PB
       * </pre>
       */
      public Builder setLegacyMotcmd(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        legacyMotcmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes legacy_motcmd = 11;</code>
       *
       * <pre>
       * emcmot_command_t wrapped in PB
       * </pre>
       */
      public Builder clearLegacyMotcmd() {
        bitField0_ = (bitField0_ & ~0x00000020);
        legacyMotcmd_ = getDefaultInstance().getLegacyMotcmd();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString legacyMotstat_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes legacy_motstat = 12;</code>
       *
       * <pre>
       * emcmot_status_t wrapped in PB
       * </pre>
       */
      public boolean hasLegacyMotstat() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes legacy_motstat = 12;</code>
       *
       * <pre>
       * emcmot_status_t wrapped in PB
       * </pre>
       */
      public com.google.protobuf.ByteString getLegacyMotstat() {
        return legacyMotstat_;
      }
      /**
       * <code>optional bytes legacy_motstat = 12;</code>
       *
       * <pre>
       * emcmot_status_t wrapped in PB
       * </pre>
       */
      public Builder setLegacyMotstat(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        legacyMotstat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes legacy_motstat = 12;</code>
       *
       * <pre>
       * emcmot_status_t wrapped in PB
       * </pre>
       */
      public Builder clearLegacyMotstat() {
        bitField0_ = (bitField0_ & ~0x00000040);
        legacyMotstat_ = getDefaultInstance().getLegacyMotstat();
        onChanged();
        return this;
      }

      private pb.RtapiMessage.RTAPI_Message rtapiMessage_ = pb.RtapiMessage.RTAPI_Message.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.RtapiMessage.RTAPI_Message, pb.RtapiMessage.RTAPI_Message.Builder, pb.RtapiMessage.RTAPI_MessageOrBuilder> rtapiMessageBuilder_;
      /**
       * <code>optional .pb.RTAPI_Message rtapi_message = 13;</code>
       */
      public boolean hasRtapiMessage() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .pb.RTAPI_Message rtapi_message = 13;</code>
       */
      public pb.RtapiMessage.RTAPI_Message getRtapiMessage() {
        if (rtapiMessageBuilder_ == null) {
          return rtapiMessage_;
        } else {
          return rtapiMessageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.RTAPI_Message rtapi_message = 13;</code>
       */
      public Builder setRtapiMessage(pb.RtapiMessage.RTAPI_Message value) {
        if (rtapiMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rtapiMessage_ = value;
          onChanged();
        } else {
          rtapiMessageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .pb.RTAPI_Message rtapi_message = 13;</code>
       */
      public Builder setRtapiMessage(
          pb.RtapiMessage.RTAPI_Message.Builder builderForValue) {
        if (rtapiMessageBuilder_ == null) {
          rtapiMessage_ = builderForValue.build();
          onChanged();
        } else {
          rtapiMessageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .pb.RTAPI_Message rtapi_message = 13;</code>
       */
      public Builder mergeRtapiMessage(pb.RtapiMessage.RTAPI_Message value) {
        if (rtapiMessageBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              rtapiMessage_ != pb.RtapiMessage.RTAPI_Message.getDefaultInstance()) {
            rtapiMessage_ =
              pb.RtapiMessage.RTAPI_Message.newBuilder(rtapiMessage_).mergeFrom(value).buildPartial();
          } else {
            rtapiMessage_ = value;
          }
          onChanged();
        } else {
          rtapiMessageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .pb.RTAPI_Message rtapi_message = 13;</code>
       */
      public Builder clearRtapiMessage() {
        if (rtapiMessageBuilder_ == null) {
          rtapiMessage_ = pb.RtapiMessage.RTAPI_Message.getDefaultInstance();
          onChanged();
        } else {
          rtapiMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .pb.RTAPI_Message rtapi_message = 13;</code>
       */
      public pb.RtapiMessage.RTAPI_Message.Builder getRtapiMessageBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getRtapiMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.RTAPI_Message rtapi_message = 13;</code>
       */
      public pb.RtapiMessage.RTAPI_MessageOrBuilder getRtapiMessageOrBuilder() {
        if (rtapiMessageBuilder_ != null) {
          return rtapiMessageBuilder_.getMessageOrBuilder();
        } else {
          return rtapiMessage_;
        }
      }
      /**
       * <code>optional .pb.RTAPI_Message rtapi_message = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.RtapiMessage.RTAPI_Message, pb.RtapiMessage.RTAPI_Message.Builder, pb.RtapiMessage.RTAPI_MessageOrBuilder> 
          getRtapiMessageFieldBuilder() {
        if (rtapiMessageBuilder_ == null) {
          rtapiMessageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.RtapiMessage.RTAPI_Message, pb.RtapiMessage.RTAPI_Message.Builder, pb.RtapiMessage.RTAPI_MessageOrBuilder>(
                  getRtapiMessage(),
                  getParentForChildren(),
                  isClean());
          rtapiMessage_ = null;
        }
        return rtapiMessageBuilder_;
      }

      private pb.Task.TaskReply taskReply_ = pb.Task.TaskReply.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Task.TaskReply, pb.Task.TaskReply.Builder, pb.Task.TaskReplyOrBuilder> taskReplyBuilder_;
      /**
       * <code>optional .pb.TaskReply task_reply = 14;</code>
       */
      public boolean hasTaskReply() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .pb.TaskReply task_reply = 14;</code>
       */
      public pb.Task.TaskReply getTaskReply() {
        if (taskReplyBuilder_ == null) {
          return taskReply_;
        } else {
          return taskReplyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.TaskReply task_reply = 14;</code>
       */
      public Builder setTaskReply(pb.Task.TaskReply value) {
        if (taskReplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          taskReply_ = value;
          onChanged();
        } else {
          taskReplyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .pb.TaskReply task_reply = 14;</code>
       */
      public Builder setTaskReply(
          pb.Task.TaskReply.Builder builderForValue) {
        if (taskReplyBuilder_ == null) {
          taskReply_ = builderForValue.build();
          onChanged();
        } else {
          taskReplyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .pb.TaskReply task_reply = 14;</code>
       */
      public Builder mergeTaskReply(pb.Task.TaskReply value) {
        if (taskReplyBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              taskReply_ != pb.Task.TaskReply.getDefaultInstance()) {
            taskReply_ =
              pb.Task.TaskReply.newBuilder(taskReply_).mergeFrom(value).buildPartial();
          } else {
            taskReply_ = value;
          }
          onChanged();
        } else {
          taskReplyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .pb.TaskReply task_reply = 14;</code>
       */
      public Builder clearTaskReply() {
        if (taskReplyBuilder_ == null) {
          taskReply_ = pb.Task.TaskReply.getDefaultInstance();
          onChanged();
        } else {
          taskReplyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .pb.TaskReply task_reply = 14;</code>
       */
      public pb.Task.TaskReply.Builder getTaskReplyBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getTaskReplyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.TaskReply task_reply = 14;</code>
       */
      public pb.Task.TaskReplyOrBuilder getTaskReplyOrBuilder() {
        if (taskReplyBuilder_ != null) {
          return taskReplyBuilder_.getMessageOrBuilder();
        } else {
          return taskReply_;
        }
      }
      /**
       * <code>optional .pb.TaskReply task_reply = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Task.TaskReply, pb.Task.TaskReply.Builder, pb.Task.TaskReplyOrBuilder> 
          getTaskReplyFieldBuilder() {
        if (taskReplyBuilder_ == null) {
          taskReplyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Task.TaskReply, pb.Task.TaskReply.Builder, pb.Task.TaskReplyOrBuilder>(
                  getTaskReply(),
                  getParentForChildren(),
                  isClean());
          taskReply_ = null;
        }
        return taskReplyBuilder_;
      }

      private pb.Task.TicketUpdate ticketUpdate_ = pb.Task.TicketUpdate.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Task.TicketUpdate, pb.Task.TicketUpdate.Builder, pb.Task.TicketUpdateOrBuilder> ticketUpdateBuilder_;
      /**
       * <code>optional .pb.TicketUpdate ticket_update = 15;</code>
       */
      public boolean hasTicketUpdate() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .pb.TicketUpdate ticket_update = 15;</code>
       */
      public pb.Task.TicketUpdate getTicketUpdate() {
        if (ticketUpdateBuilder_ == null) {
          return ticketUpdate_;
        } else {
          return ticketUpdateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.TicketUpdate ticket_update = 15;</code>
       */
      public Builder setTicketUpdate(pb.Task.TicketUpdate value) {
        if (ticketUpdateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ticketUpdate_ = value;
          onChanged();
        } else {
          ticketUpdateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .pb.TicketUpdate ticket_update = 15;</code>
       */
      public Builder setTicketUpdate(
          pb.Task.TicketUpdate.Builder builderForValue) {
        if (ticketUpdateBuilder_ == null) {
          ticketUpdate_ = builderForValue.build();
          onChanged();
        } else {
          ticketUpdateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .pb.TicketUpdate ticket_update = 15;</code>
       */
      public Builder mergeTicketUpdate(pb.Task.TicketUpdate value) {
        if (ticketUpdateBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              ticketUpdate_ != pb.Task.TicketUpdate.getDefaultInstance()) {
            ticketUpdate_ =
              pb.Task.TicketUpdate.newBuilder(ticketUpdate_).mergeFrom(value).buildPartial();
          } else {
            ticketUpdate_ = value;
          }
          onChanged();
        } else {
          ticketUpdateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .pb.TicketUpdate ticket_update = 15;</code>
       */
      public Builder clearTicketUpdate() {
        if (ticketUpdateBuilder_ == null) {
          ticketUpdate_ = pb.Task.TicketUpdate.getDefaultInstance();
          onChanged();
        } else {
          ticketUpdateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .pb.TicketUpdate ticket_update = 15;</code>
       */
      public pb.Task.TicketUpdate.Builder getTicketUpdateBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getTicketUpdateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.TicketUpdate ticket_update = 15;</code>
       */
      public pb.Task.TicketUpdateOrBuilder getTicketUpdateOrBuilder() {
        if (ticketUpdateBuilder_ != null) {
          return ticketUpdateBuilder_.getMessageOrBuilder();
        } else {
          return ticketUpdate_;
        }
      }
      /**
       * <code>optional .pb.TicketUpdate ticket_update = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Task.TicketUpdate, pb.Task.TicketUpdate.Builder, pb.Task.TicketUpdateOrBuilder> 
          getTicketUpdateFieldBuilder() {
        if (ticketUpdateBuilder_ == null) {
          ticketUpdateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Task.TicketUpdate, pb.Task.TicketUpdate.Builder, pb.Task.TicketUpdateOrBuilder>(
                  getTicketUpdate(),
                  getParentForChildren(),
                  isClean());
          ticketUpdate_ = null;
        }
        return ticketUpdateBuilder_;
      }

      private com.google.protobuf.ByteString syslog_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes syslog = 18;</code>
       *
       * <pre>
       * RFC5424 syslog(3) encoding
       * </pre>
       */
      public boolean hasSyslog() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bytes syslog = 18;</code>
       *
       * <pre>
       * RFC5424 syslog(3) encoding
       * </pre>
       */
      public com.google.protobuf.ByteString getSyslog() {
        return syslog_;
      }
      /**
       * <code>optional bytes syslog = 18;</code>
       *
       * <pre>
       * RFC5424 syslog(3) encoding
       * </pre>
       */
      public Builder setSyslog(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        syslog_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes syslog = 18;</code>
       *
       * <pre>
       * RFC5424 syslog(3) encoding
       * </pre>
       */
      public Builder clearSyslog() {
        bitField0_ = (bitField0_ & ~0x00000400);
        syslog_ = getDefaultInstance().getSyslog();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString legacyNml_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes legacy_nml = 19;</code>
       *
       * <pre>
       * legacy NML container
       * </pre>
       */
      public boolean hasLegacyNml() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bytes legacy_nml = 19;</code>
       *
       * <pre>
       * legacy NML container
       * </pre>
       */
      public com.google.protobuf.ByteString getLegacyNml() {
        return legacyNml_;
      }
      /**
       * <code>optional bytes legacy_nml = 19;</code>
       *
       * <pre>
       * legacy NML container
       * </pre>
       */
      public Builder setLegacyNml(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        legacyNml_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes legacy_nml = 19;</code>
       *
       * <pre>
       * legacy NML container
       * </pre>
       */
      public Builder clearLegacyNml() {
        bitField0_ = (bitField0_ & ~0x00000800);
        legacyNml_ = getDefaultInstance().getLegacyNml();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString legacyMotconfig_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes legacy_motconfig = 20;</code>
       *
       * <pre>
       * emcmot_config_t wrapped in PB
       * </pre>
       */
      public boolean hasLegacyMotconfig() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bytes legacy_motconfig = 20;</code>
       *
       * <pre>
       * emcmot_config_t wrapped in PB
       * </pre>
       */
      public com.google.protobuf.ByteString getLegacyMotconfig() {
        return legacyMotconfig_;
      }
      /**
       * <code>optional bytes legacy_motconfig = 20;</code>
       *
       * <pre>
       * emcmot_config_t wrapped in PB
       * </pre>
       */
      public Builder setLegacyMotconfig(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        legacyMotconfig_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes legacy_motconfig = 20;</code>
       *
       * <pre>
       * emcmot_config_t wrapped in PB
       * </pre>
       */
      public Builder clearLegacyMotconfig() {
        bitField0_ = (bitField0_ & ~0x00001000);
        legacyMotconfig_ = getDefaultInstance().getLegacyMotconfig();
        onChanged();
        return this;
      }

      private int tvSec_ ;
      /**
       * <code>optional int32 tv_sec = 21;</code>
       *
       * <pre>
       * timestamps: as per struct timespec
       * obtain with clock_gettime(CLOCK_REALTIME, &amp;spec);
       * </pre>
       */
      public boolean hasTvSec() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 tv_sec = 21;</code>
       *
       * <pre>
       * timestamps: as per struct timespec
       * obtain with clock_gettime(CLOCK_REALTIME, &amp;spec);
       * </pre>
       */
      public int getTvSec() {
        return tvSec_;
      }
      /**
       * <code>optional int32 tv_sec = 21;</code>
       *
       * <pre>
       * timestamps: as per struct timespec
       * obtain with clock_gettime(CLOCK_REALTIME, &amp;spec);
       * </pre>
       */
      public Builder setTvSec(int value) {
        bitField0_ |= 0x00002000;
        tvSec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tv_sec = 21;</code>
       *
       * <pre>
       * timestamps: as per struct timespec
       * obtain with clock_gettime(CLOCK_REALTIME, &amp;spec);
       * </pre>
       */
      public Builder clearTvSec() {
        bitField0_ = (bitField0_ & ~0x00002000);
        tvSec_ = 0;
        onChanged();
        return this;
      }

      private int tvNsec_ ;
      /**
       * <code>optional int32 tv_nsec = 22;</code>
       */
      public boolean hasTvNsec() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 tv_nsec = 22;</code>
       */
      public int getTvNsec() {
        return tvNsec_;
      }
      /**
       * <code>optional int32 tv_nsec = 22;</code>
       */
      public Builder setTvNsec(int value) {
        bitField0_ |= 0x00004000;
        tvNsec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tv_nsec = 22;</code>
       */
      public Builder clearTvNsec() {
        bitField0_ = (bitField0_ & ~0x00004000);
        tvNsec_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object topic_ = "";
      /**
       * <code>optional string topic = 23;</code>
       *
       * <pre>
       * this is for messages going over pub/sub streams and wind up in JSON frames
       * duplicating the topic here allows us to drop the topic frame
       * </pre>
       */
      public boolean hasTopic() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string topic = 23;</code>
       *
       * <pre>
       * this is for messages going over pub/sub streams and wind up in JSON frames
       * duplicating the topic here allows us to drop the topic frame
       * </pre>
       */
      public java.lang.String getTopic() {
        java.lang.Object ref = topic_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            topic_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string topic = 23;</code>
       *
       * <pre>
       * this is for messages going over pub/sub streams and wind up in JSON frames
       * duplicating the topic here allows us to drop the topic frame
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTopicBytes() {
        java.lang.Object ref = topic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          topic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string topic = 23;</code>
       *
       * <pre>
       * this is for messages going over pub/sub streams and wind up in JSON frames
       * duplicating the topic here allows us to drop the topic frame
       * </pre>
       */
      public Builder setTopic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        topic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string topic = 23;</code>
       *
       * <pre>
       * this is for messages going over pub/sub streams and wind up in JSON frames
       * duplicating the topic here allows us to drop the topic frame
       * </pre>
       */
      public Builder clearTopic() {
        bitField0_ = (bitField0_ & ~0x00008000);
        topic_ = getDefaultInstance().getTopic();
        onChanged();
        return this;
      }
      /**
       * <code>optional string topic = 23;</code>
       *
       * <pre>
       * this is for messages going over pub/sub streams and wind up in JSON frames
       * duplicating the topic here allows us to drop the topic frame
       * </pre>
       */
      public Builder setTopicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        topic_ = value;
        onChanged();
        return this;
      }

      private boolean replyRequired_ ;
      /**
       * <code>optional bool reply_required = 24;</code>
       *
       * <pre>
       * force a response even if OK
       * </pre>
       */
      public boolean hasReplyRequired() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional bool reply_required = 24;</code>
       *
       * <pre>
       * force a response even if OK
       * </pre>
       */
      public boolean getReplyRequired() {
        return replyRequired_;
      }
      /**
       * <code>optional bool reply_required = 24;</code>
       *
       * <pre>
       * force a response even if OK
       * </pre>
       */
      public Builder setReplyRequired(boolean value) {
        bitField0_ |= 0x00010000;
        replyRequired_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool reply_required = 24;</code>
       *
       * <pre>
       * force a response even if OK
       * </pre>
       */
      public Builder clearReplyRequired() {
        bitField0_ = (bitField0_ & ~0x00010000);
        replyRequired_ = false;
        onChanged();
        return this;
      }

      private pb.Types.InterpreterStateType interpState_ = pb.Types.InterpreterStateType.INTERP_IDLE;
      /**
       * <code>optional .pb.InterpreterStateType interp_state = 25;</code>
       *
       * <pre>
       * interpreter status updates, MT_INTERP_STAT
       * </pre>
       */
      public boolean hasInterpState() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .pb.InterpreterStateType interp_state = 25;</code>
       *
       * <pre>
       * interpreter status updates, MT_INTERP_STAT
       * </pre>
       */
      public pb.Types.InterpreterStateType getInterpState() {
        return interpState_;
      }
      /**
       * <code>optional .pb.InterpreterStateType interp_state = 25;</code>
       *
       * <pre>
       * interpreter status updates, MT_INTERP_STAT
       * </pre>
       */
      public Builder setInterpState(pb.Types.InterpreterStateType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00020000;
        interpState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .pb.InterpreterStateType interp_state = 25;</code>
       *
       * <pre>
       * interpreter status updates, MT_INTERP_STAT
       * </pre>
       */
      public Builder clearInterpState() {
        bitField0_ = (bitField0_ & ~0x00020000);
        interpState_ = pb.Types.InterpreterStateType.INTERP_IDLE;
        onChanged();
        return this;
      }

      private java.lang.Object interpName_ = "";
      /**
       * <code>optional string interp_name = 26;</code>
       */
      public boolean hasInterpName() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional string interp_name = 26;</code>
       */
      public java.lang.String getInterpName() {
        java.lang.Object ref = interpName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            interpName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string interp_name = 26;</code>
       */
      public com.google.protobuf.ByteString
          getInterpNameBytes() {
        java.lang.Object ref = interpName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          interpName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string interp_name = 26;</code>
       */
      public Builder setInterpName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        interpName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string interp_name = 26;</code>
       */
      public Builder clearInterpName() {
        bitField0_ = (bitField0_ & ~0x00040000);
        interpName_ = getDefaultInstance().getInterpName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string interp_name = 26;</code>
       */
      public Builder setInterpNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        interpName_ = value;
        onChanged();
        return this;
      }

      private int rsvp_ ;
      /**
       * <code>optional int32 rsvp = 30;</code>
       *
       * <pre>
       * this is an or of bits in ReplyType:
       * </pre>
       */
      public boolean hasRsvp() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 rsvp = 30;</code>
       *
       * <pre>
       * this is an or of bits in ReplyType:
       * </pre>
       */
      public int getRsvp() {
        return rsvp_;
      }
      /**
       * <code>optional int32 rsvp = 30;</code>
       *
       * <pre>
       * this is an or of bits in ReplyType:
       * </pre>
       */
      public Builder setRsvp(int value) {
        bitField0_ |= 0x00080000;
        rsvp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rsvp = 30;</code>
       *
       * <pre>
       * this is an or of bits in ReplyType:
       * </pre>
       */
      public Builder clearRsvp() {
        bitField0_ = (bitField0_ & ~0x00080000);
        rsvp_ = 0;
        onChanged();
        return this;
      }

      private pb.Types.ContainerType inReplyTo_ = pb.Types.ContainerType.MT_RTMESSAGE;
      /**
       * <code>optional .pb.ContainerType in_reply_to = 33;</code>
       */
      public boolean hasInReplyTo() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .pb.ContainerType in_reply_to = 33;</code>
       */
      public pb.Types.ContainerType getInReplyTo() {
        return inReplyTo_;
      }
      /**
       * <code>optional .pb.ContainerType in_reply_to = 33;</code>
       */
      public Builder setInReplyTo(pb.Types.ContainerType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00100000;
        inReplyTo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .pb.ContainerType in_reply_to = 33;</code>
       */
      public Builder clearInReplyTo() {
        bitField0_ = (bitField0_ & ~0x00100000);
        inReplyTo_ = pb.Types.ContainerType.MT_RTMESSAGE;
        onChanged();
        return this;
      }

      private pb.Types.RCS_STATUS rcsStatus_ = pb.Types.RCS_STATUS.UNINITIALIZED_STATUS;
      /**
       * <code>optional .pb.RCS_STATUS rcs_status = 35;</code>
       */
      public boolean hasRcsStatus() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional .pb.RCS_STATUS rcs_status = 35;</code>
       */
      public pb.Types.RCS_STATUS getRcsStatus() {
        return rcsStatus_;
      }
      /**
       * <code>optional .pb.RCS_STATUS rcs_status = 35;</code>
       */
      public Builder setRcsStatus(pb.Types.RCS_STATUS value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00200000;
        rcsStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .pb.RCS_STATUS rcs_status = 35;</code>
       */
      public Builder clearRcsStatus() {
        bitField0_ = (bitField0_ & ~0x00200000);
        rcsStatus_ = pb.Types.RCS_STATUS.UNINITIALIZED_STATUS;
        onChanged();
        return this;
      }

      private pb.Types.StatusType status_ = pb.Types.StatusType.ENQUEUED;
      /**
       * <code>optional .pb.StatusType status = 40;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .pb.StatusType status = 40;</code>
       */
      public pb.Types.StatusType getStatus() {
        return status_;
      }
      /**
       * <code>optional .pb.StatusType status = 40;</code>
       */
      public Builder setStatus(pb.Types.StatusType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00400000;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .pb.StatusType status = 40;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00400000);
        status_ = pb.Types.StatusType.ENQUEUED;
        onChanged();
        return this;
      }

      private int serial_ ;
      /**
       * <code>optional int32 serial = 45;</code>
       *
       * <pre>
       * legacy command serials
       * </pre>
       */
      public boolean hasSerial() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 serial = 45;</code>
       *
       * <pre>
       * legacy command serials
       * </pre>
       */
      public int getSerial() {
        return serial_;
      }
      /**
       * <code>optional int32 serial = 45;</code>
       *
       * <pre>
       * legacy command serials
       * </pre>
       */
      public Builder setSerial(int value) {
        bitField0_ |= 0x00800000;
        serial_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 serial = 45;</code>
       *
       * <pre>
       * legacy command serials
       * </pre>
       */
      public Builder clearSerial() {
        bitField0_ = (bitField0_ & ~0x00800000);
        serial_ = 0;
        onChanged();
        return this;
      }

      private int replySerial_ ;
      /**
       * <code>optional int32 reply_serial = 50;</code>
       *
       * <pre>
       * echoes the legacy command serial
       * </pre>
       */
      public boolean hasReplySerial() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 reply_serial = 50;</code>
       *
       * <pre>
       * echoes the legacy command serial
       * </pre>
       */
      public int getReplySerial() {
        return replySerial_;
      }
      /**
       * <code>optional int32 reply_serial = 50;</code>
       *
       * <pre>
       * echoes the legacy command serial
       * </pre>
       */
      public Builder setReplySerial(int value) {
        bitField0_ |= 0x01000000;
        replySerial_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reply_serial = 50;</code>
       *
       * <pre>
       * echoes the legacy command serial
       * </pre>
       */
      public Builder clearReplySerial() {
        bitField0_ = (bitField0_ & ~0x01000000);
        replySerial_ = 0;
        onChanged();
        return this;
      }

      private int ticket_ ;
      /**
       * <code>optional int32 ticket = 55;</code>
       *
       * <pre>
       * command serials
       * </pre>
       */
      public boolean hasTicket() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 ticket = 55;</code>
       *
       * <pre>
       * command serials
       * </pre>
       */
      public int getTicket() {
        return ticket_;
      }
      /**
       * <code>optional int32 ticket = 55;</code>
       *
       * <pre>
       * command serials
       * </pre>
       */
      public Builder setTicket(int value) {
        bitField0_ |= 0x02000000;
        ticket_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ticket = 55;</code>
       *
       * <pre>
       * command serials
       * </pre>
       */
      public Builder clearTicket() {
        bitField0_ = (bitField0_ & ~0x02000000);
        ticket_ = 0;
        onChanged();
        return this;
      }

      private int replyTicket_ ;
      /**
       * <code>optional int32 reply_ticket = 60;</code>
       *
       * <pre>
       * echoes the legacy command serial
       * </pre>
       */
      public boolean hasReplyTicket() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int32 reply_ticket = 60;</code>
       *
       * <pre>
       * echoes the legacy command serial
       * </pre>
       */
      public int getReplyTicket() {
        return replyTicket_;
      }
      /**
       * <code>optional int32 reply_ticket = 60;</code>
       *
       * <pre>
       * echoes the legacy command serial
       * </pre>
       */
      public Builder setReplyTicket(int value) {
        bitField0_ |= 0x04000000;
        replyTicket_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reply_ticket = 60;</code>
       *
       * <pre>
       * echoes the legacy command serial
       * </pre>
       */
      public Builder clearReplyTicket() {
        bitField0_ = (bitField0_ & ~0x04000000);
        replyTicket_ = 0;
        onChanged();
        return this;
      }

      private int sequence_ ;
      /**
       * <code>optional int32 sequence = 62;</code>
       *
       * <pre>
       * Credit based flow control: http://hintjens.com/blog:15
       * </pre>
       */
      public boolean hasSequence() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 sequence = 62;</code>
       *
       * <pre>
       * Credit based flow control: http://hintjens.com/blog:15
       * </pre>
       */
      public int getSequence() {
        return sequence_;
      }
      /**
       * <code>optional int32 sequence = 62;</code>
       *
       * <pre>
       * Credit based flow control: http://hintjens.com/blog:15
       * </pre>
       */
      public Builder setSequence(int value) {
        bitField0_ |= 0x08000000;
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sequence = 62;</code>
       *
       * <pre>
       * Credit based flow control: http://hintjens.com/blog:15
       * </pre>
       */
      public Builder clearSequence() {
        bitField0_ = (bitField0_ & ~0x08000000);
        sequence_ = 0;
        onChanged();
        return this;
      }

      private int credit_ ;
      /**
       * <code>optional int32 credit = 65;</code>
       *
       * <pre>
       * updated by consumer
       * </pre>
       */
      public boolean hasCredit() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 credit = 65;</code>
       *
       * <pre>
       * updated by consumer
       * </pre>
       */
      public int getCredit() {
        return credit_;
      }
      /**
       * <code>optional int32 credit = 65;</code>
       *
       * <pre>
       * updated by consumer
       * </pre>
       */
      public Builder setCredit(int value) {
        bitField0_ |= 0x10000000;
        credit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 credit = 65;</code>
       *
       * <pre>
       * updated by consumer
       * </pre>
       */
      public Builder clearCredit() {
        bitField0_ = (bitField0_ & ~0x10000000);
        credit_ = 0;
        onChanged();
        return this;
      }

      private int lineNumber_ ;
      /**
       * <code>optional int32 line_number = 66;</code>
       *
       * <pre>
       * legacy line number as conveyed on interplist
       * to be replaced by source context
       * </pre>
       */
      public boolean hasLineNumber() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 line_number = 66;</code>
       *
       * <pre>
       * legacy line number as conveyed on interplist
       * to be replaced by source context
       * </pre>
       */
      public int getLineNumber() {
        return lineNumber_;
      }
      /**
       * <code>optional int32 line_number = 66;</code>
       *
       * <pre>
       * legacy line number as conveyed on interplist
       * to be replaced by source context
       * </pre>
       */
      public Builder setLineNumber(int value) {
        bitField0_ |= 0x20000000;
        lineNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 line_number = 66;</code>
       *
       * <pre>
       * legacy line number as conveyed on interplist
       * to be replaced by source context
       * </pre>
       */
      public Builder clearLineNumber() {
        bitField0_ = (bitField0_ & ~0x20000000);
        lineNumber_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 67;</code>
       *
       * <pre>
       * used with MT_MESSAGEBUS_NO_DESTINATION
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional string name = 67;</code>
       *
       * <pre>
       * used with MT_MESSAGEBUS_NO_DESTINATION
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 67;</code>
       *
       * <pre>
       * used with MT_MESSAGEBUS_NO_DESTINATION
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 67;</code>
       *
       * <pre>
       * used with MT_MESSAGEBUS_NO_DESTINATION
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x40000000;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 67;</code>
       *
       * <pre>
       * used with MT_MESSAGEBUS_NO_DESTINATION
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x40000000);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 67;</code>
       *
       * <pre>
       * used with MT_MESSAGEBUS_NO_DESTINATION
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x40000000;
        name_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList note_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureNoteIsMutable() {
        if (!((bitField0_ & 0x80000000) == 0x80000000)) {
          note_ = new com.google.protobuf.LazyStringArrayList(note_);
          bitField0_ |= 0x80000000;
         }
      }
      /**
       * <code>repeated string note = 68;</code>
       *
       * <pre>
       * easy tack-on for debugging
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getNoteList() {
        return note_.getUnmodifiableView();
      }
      /**
       * <code>repeated string note = 68;</code>
       *
       * <pre>
       * easy tack-on for debugging
       * </pre>
       */
      public int getNoteCount() {
        return note_.size();
      }
      /**
       * <code>repeated string note = 68;</code>
       *
       * <pre>
       * easy tack-on for debugging
       * </pre>
       */
      public java.lang.String getNote(int index) {
        return note_.get(index);
      }
      /**
       * <code>repeated string note = 68;</code>
       *
       * <pre>
       * easy tack-on for debugging
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNoteBytes(int index) {
        return note_.getByteString(index);
      }
      /**
       * <code>repeated string note = 68;</code>
       *
       * <pre>
       * easy tack-on for debugging
       * </pre>
       */
      public Builder setNote(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNoteIsMutable();
        note_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string note = 68;</code>
       *
       * <pre>
       * easy tack-on for debugging
       * </pre>
       */
      public Builder addNote(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNoteIsMutable();
        note_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string note = 68;</code>
       *
       * <pre>
       * easy tack-on for debugging
       * </pre>
       */
      public Builder addAllNote(
          java.lang.Iterable<java.lang.String> values) {
        ensureNoteIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, note_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string note = 68;</code>
       *
       * <pre>
       * easy tack-on for debugging
       * </pre>
       */
      public Builder clearNote() {
        note_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x80000000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string note = 68;</code>
       *
       * <pre>
       * easy tack-on for debugging
       * </pre>
       */
      public Builder addNoteBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNoteIsMutable();
        note_.add(value);
        onChanged();
        return this;
      }

      private int retcode_ ;
      /**
       * <code>optional int32 retcode = 69;</code>
       *
       * <pre>
       * all purpose integer return code
       * </pre>
       */
      public boolean hasRetcode() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 retcode = 69;</code>
       *
       * <pre>
       * all purpose integer return code
       * </pre>
       */
      public int getRetcode() {
        return retcode_;
      }
      /**
       * <code>optional int32 retcode = 69;</code>
       *
       * <pre>
       * all purpose integer return code
       * </pre>
       */
      public Builder setRetcode(int value) {
        bitField1_ |= 0x00000001;
        retcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 retcode = 69;</code>
       *
       * <pre>
       * all purpose integer return code
       * </pre>
       */
      public Builder clearRetcode() {
        bitField1_ = (bitField1_ & ~0x00000001);
        retcode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString uuid_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes uuid = 72;</code>
       *
       * <pre>
       * uuid helps distinguish server instances
       * </pre>
       */
      public boolean hasUuid() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes uuid = 72;</code>
       *
       * <pre>
       * uuid helps distinguish server instances
       * </pre>
       */
      public com.google.protobuf.ByteString getUuid() {
        return uuid_;
      }
      /**
       * <code>optional bytes uuid = 72;</code>
       *
       * <pre>
       * uuid helps distinguish server instances
       * </pre>
       */
      public Builder setUuid(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000002;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes uuid = 72;</code>
       *
       * <pre>
       * uuid helps distinguish server instances
       * </pre>
       */
      public Builder clearUuid() {
        bitField1_ = (bitField1_ & ~0x00000002);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }

      private boolean trace_ ;
      /**
       * <code>optional bool trace = 75;</code>
       *
       * <pre>
       * log from intermediaries
       * </pre>
       */
      public boolean hasTrace() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool trace = 75;</code>
       *
       * <pre>
       * log from intermediaries
       * </pre>
       */
      public boolean getTrace() {
        return trace_;
      }
      /**
       * <code>optional bool trace = 75;</code>
       *
       * <pre>
       * log from intermediaries
       * </pre>
       */
      public Builder setTrace(boolean value) {
        bitField1_ |= 0x00000004;
        trace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool trace = 75;</code>
       *
       * <pre>
       * log from intermediaries
       * </pre>
       */
      public Builder clearTrace() {
        bitField1_ = (bitField1_ & ~0x00000004);
        trace_ = false;
        onChanged();
        return this;
      }

      private int instance_ ;
      /**
       * <code>optional int32 instance = 77;</code>
       *
       * <pre>
       * RTAPI instance if nonzero
       * </pre>
       */
      public boolean hasInstance() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 instance = 77;</code>
       *
       * <pre>
       * RTAPI instance if nonzero
       * </pre>
       */
      public int getInstance() {
        return instance_;
      }
      /**
       * <code>optional int32 instance = 77;</code>
       *
       * <pre>
       * RTAPI instance if nonzero
       * </pre>
       */
      public Builder setInstance(int value) {
        bitField1_ |= 0x00000008;
        instance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 instance = 77;</code>
       *
       * <pre>
       * RTAPI instance if nonzero
       * </pre>
       */
      public Builder clearInstance() {
        bitField1_ = (bitField1_ & ~0x00000008);
        instance_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<pb.ValueOuterClass.Value> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField1_ & 0x00000010) == 0x00000010)) {
          value_ = new java.util.ArrayList<pb.ValueOuterClass.Value>(value_);
          bitField1_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pb.ValueOuterClass.Value, pb.ValueOuterClass.Value.Builder, pb.ValueOuterClass.ValueOrBuilder> valueBuilder_;

      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public java.util.List<pb.ValueOuterClass.Value> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public pb.ValueOuterClass.Value getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public Builder setValue(
          int index, pb.ValueOuterClass.Value value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public Builder setValue(
          int index, pb.ValueOuterClass.Value.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public Builder addValue(pb.ValueOuterClass.Value value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public Builder addValue(
          int index, pb.ValueOuterClass.Value value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public Builder addValue(
          pb.ValueOuterClass.Value.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public Builder addValue(
          int index, pb.ValueOuterClass.Value.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends pb.ValueOuterClass.Value> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000010);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public pb.ValueOuterClass.Value.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public pb.ValueOuterClass.ValueOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public java.util.List<? extends pb.ValueOuterClass.ValueOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public pb.ValueOuterClass.Value.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            pb.ValueOuterClass.Value.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public pb.ValueOuterClass.Value.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, pb.ValueOuterClass.Value.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Value value = 85;</code>
       *
       * <pre>
       * generalized polymorphic argument list
       * </pre>
       */
      public java.util.List<pb.ValueOuterClass.Value.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pb.ValueOuterClass.Value, pb.ValueOuterClass.Value.Builder, pb.ValueOuterClass.ValueOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pb.ValueOuterClass.Value, pb.ValueOuterClass.Value.Builder, pb.ValueOuterClass.ValueOrBuilder>(
                  value_,
                  ((bitField1_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      private pb.Rtapicommand.RTAPICommand rtapicmd_ = pb.Rtapicommand.RTAPICommand.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Rtapicommand.RTAPICommand, pb.Rtapicommand.RTAPICommand.Builder, pb.Rtapicommand.RTAPICommandOrBuilder> rtapicmdBuilder_;
      /**
       * <code>optional .pb.RTAPICommand rtapicmd = 86;</code>
       */
      public boolean hasRtapicmd() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .pb.RTAPICommand rtapicmd = 86;</code>
       */
      public pb.Rtapicommand.RTAPICommand getRtapicmd() {
        if (rtapicmdBuilder_ == null) {
          return rtapicmd_;
        } else {
          return rtapicmdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.RTAPICommand rtapicmd = 86;</code>
       */
      public Builder setRtapicmd(pb.Rtapicommand.RTAPICommand value) {
        if (rtapicmdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rtapicmd_ = value;
          onChanged();
        } else {
          rtapicmdBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .pb.RTAPICommand rtapicmd = 86;</code>
       */
      public Builder setRtapicmd(
          pb.Rtapicommand.RTAPICommand.Builder builderForValue) {
        if (rtapicmdBuilder_ == null) {
          rtapicmd_ = builderForValue.build();
          onChanged();
        } else {
          rtapicmdBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .pb.RTAPICommand rtapicmd = 86;</code>
       */
      public Builder mergeRtapicmd(pb.Rtapicommand.RTAPICommand value) {
        if (rtapicmdBuilder_ == null) {
          if (((bitField1_ & 0x00000020) == 0x00000020) &&
              rtapicmd_ != pb.Rtapicommand.RTAPICommand.getDefaultInstance()) {
            rtapicmd_ =
              pb.Rtapicommand.RTAPICommand.newBuilder(rtapicmd_).mergeFrom(value).buildPartial();
          } else {
            rtapicmd_ = value;
          }
          onChanged();
        } else {
          rtapicmdBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .pb.RTAPICommand rtapicmd = 86;</code>
       */
      public Builder clearRtapicmd() {
        if (rtapicmdBuilder_ == null) {
          rtapicmd_ = pb.Rtapicommand.RTAPICommand.getDefaultInstance();
          onChanged();
        } else {
          rtapicmdBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .pb.RTAPICommand rtapicmd = 86;</code>
       */
      public pb.Rtapicommand.RTAPICommand.Builder getRtapicmdBuilder() {
        bitField1_ |= 0x00000020;
        onChanged();
        return getRtapicmdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.RTAPICommand rtapicmd = 86;</code>
       */
      public pb.Rtapicommand.RTAPICommandOrBuilder getRtapicmdOrBuilder() {
        if (rtapicmdBuilder_ != null) {
          return rtapicmdBuilder_.getMessageOrBuilder();
        } else {
          return rtapicmd_;
        }
      }
      /**
       * <code>optional .pb.RTAPICommand rtapicmd = 86;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Rtapicommand.RTAPICommand, pb.Rtapicommand.RTAPICommand.Builder, pb.Rtapicommand.RTAPICommandOrBuilder> 
          getRtapicmdFieldBuilder() {
        if (rtapicmdBuilder_ == null) {
          rtapicmdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Rtapicommand.RTAPICommand, pb.Rtapicommand.RTAPICommand.Builder, pb.Rtapicommand.RTAPICommandOrBuilder>(
                  getRtapicmd(),
                  getParentForChildren(),
                  isClean());
          rtapicmd_ = null;
        }
        return rtapicmdBuilder_;
      }

      private java.util.List<pb.Object.ServiceAnnouncement> serviceAnnouncement_ =
        java.util.Collections.emptyList();
      private void ensureServiceAnnouncementIsMutable() {
        if (!((bitField1_ & 0x00000040) == 0x00000040)) {
          serviceAnnouncement_ = new java.util.ArrayList<pb.Object.ServiceAnnouncement>(serviceAnnouncement_);
          bitField1_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.ServiceAnnouncement, pb.Object.ServiceAnnouncement.Builder, pb.Object.ServiceAnnouncementOrBuilder> serviceAnnouncementBuilder_;

      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public java.util.List<pb.Object.ServiceAnnouncement> getServiceAnnouncementList() {
        if (serviceAnnouncementBuilder_ == null) {
          return java.util.Collections.unmodifiableList(serviceAnnouncement_);
        } else {
          return serviceAnnouncementBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public int getServiceAnnouncementCount() {
        if (serviceAnnouncementBuilder_ == null) {
          return serviceAnnouncement_.size();
        } else {
          return serviceAnnouncementBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public pb.Object.ServiceAnnouncement getServiceAnnouncement(int index) {
        if (serviceAnnouncementBuilder_ == null) {
          return serviceAnnouncement_.get(index);
        } else {
          return serviceAnnouncementBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public Builder setServiceAnnouncement(
          int index, pb.Object.ServiceAnnouncement value) {
        if (serviceAnnouncementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServiceAnnouncementIsMutable();
          serviceAnnouncement_.set(index, value);
          onChanged();
        } else {
          serviceAnnouncementBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public Builder setServiceAnnouncement(
          int index, pb.Object.ServiceAnnouncement.Builder builderForValue) {
        if (serviceAnnouncementBuilder_ == null) {
          ensureServiceAnnouncementIsMutable();
          serviceAnnouncement_.set(index, builderForValue.build());
          onChanged();
        } else {
          serviceAnnouncementBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public Builder addServiceAnnouncement(pb.Object.ServiceAnnouncement value) {
        if (serviceAnnouncementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServiceAnnouncementIsMutable();
          serviceAnnouncement_.add(value);
          onChanged();
        } else {
          serviceAnnouncementBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public Builder addServiceAnnouncement(
          int index, pb.Object.ServiceAnnouncement value) {
        if (serviceAnnouncementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServiceAnnouncementIsMutable();
          serviceAnnouncement_.add(index, value);
          onChanged();
        } else {
          serviceAnnouncementBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public Builder addServiceAnnouncement(
          pb.Object.ServiceAnnouncement.Builder builderForValue) {
        if (serviceAnnouncementBuilder_ == null) {
          ensureServiceAnnouncementIsMutable();
          serviceAnnouncement_.add(builderForValue.build());
          onChanged();
        } else {
          serviceAnnouncementBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public Builder addServiceAnnouncement(
          int index, pb.Object.ServiceAnnouncement.Builder builderForValue) {
        if (serviceAnnouncementBuilder_ == null) {
          ensureServiceAnnouncementIsMutable();
          serviceAnnouncement_.add(index, builderForValue.build());
          onChanged();
        } else {
          serviceAnnouncementBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public Builder addAllServiceAnnouncement(
          java.lang.Iterable<? extends pb.Object.ServiceAnnouncement> values) {
        if (serviceAnnouncementBuilder_ == null) {
          ensureServiceAnnouncementIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, serviceAnnouncement_);
          onChanged();
        } else {
          serviceAnnouncementBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public Builder clearServiceAnnouncement() {
        if (serviceAnnouncementBuilder_ == null) {
          serviceAnnouncement_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000040);
          onChanged();
        } else {
          serviceAnnouncementBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public Builder removeServiceAnnouncement(int index) {
        if (serviceAnnouncementBuilder_ == null) {
          ensureServiceAnnouncementIsMutable();
          serviceAnnouncement_.remove(index);
          onChanged();
        } else {
          serviceAnnouncementBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public pb.Object.ServiceAnnouncement.Builder getServiceAnnouncementBuilder(
          int index) {
        return getServiceAnnouncementFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public pb.Object.ServiceAnnouncementOrBuilder getServiceAnnouncementOrBuilder(
          int index) {
        if (serviceAnnouncementBuilder_ == null) {
          return serviceAnnouncement_.get(index);  } else {
          return serviceAnnouncementBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public java.util.List<? extends pb.Object.ServiceAnnouncementOrBuilder> 
           getServiceAnnouncementOrBuilderList() {
        if (serviceAnnouncementBuilder_ != null) {
          return serviceAnnouncementBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(serviceAnnouncement_);
        }
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public pb.Object.ServiceAnnouncement.Builder addServiceAnnouncementBuilder() {
        return getServiceAnnouncementFieldBuilder().addBuilder(
            pb.Object.ServiceAnnouncement.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public pb.Object.ServiceAnnouncement.Builder addServiceAnnouncementBuilder(
          int index) {
        return getServiceAnnouncementFieldBuilder().addBuilder(
            index, pb.Object.ServiceAnnouncement.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.ServiceAnnouncement service_announcement = 88;</code>
       *
       * <pre>
       * a reply may carry several service announcements:
       * </pre>
       */
      public java.util.List<pb.Object.ServiceAnnouncement.Builder> 
           getServiceAnnouncementBuilderList() {
        return getServiceAnnouncementFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.ServiceAnnouncement, pb.Object.ServiceAnnouncement.Builder, pb.Object.ServiceAnnouncementOrBuilder> 
          getServiceAnnouncementFieldBuilder() {
        if (serviceAnnouncementBuilder_ == null) {
          serviceAnnouncementBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pb.Object.ServiceAnnouncement, pb.Object.ServiceAnnouncement.Builder, pb.Object.ServiceAnnouncementOrBuilder>(
                  serviceAnnouncement_,
                  ((bitField1_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          serviceAnnouncement_ = null;
        }
        return serviceAnnouncementBuilder_;
      }

      private java.util.List<pb.Object.Component> comp_ =
        java.util.Collections.emptyList();
      private void ensureCompIsMutable() {
        if (!((bitField1_ & 0x00000080) == 0x00000080)) {
          comp_ = new java.util.ArrayList<pb.Object.Component>(comp_);
          bitField1_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Component, pb.Object.Component.Builder, pb.Object.ComponentOrBuilder> compBuilder_;

      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public java.util.List<pb.Object.Component> getCompList() {
        if (compBuilder_ == null) {
          return java.util.Collections.unmodifiableList(comp_);
        } else {
          return compBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public int getCompCount() {
        if (compBuilder_ == null) {
          return comp_.size();
        } else {
          return compBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public pb.Object.Component getComp(int index) {
        if (compBuilder_ == null) {
          return comp_.get(index);
        } else {
          return compBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public Builder setComp(
          int index, pb.Object.Component value) {
        if (compBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompIsMutable();
          comp_.set(index, value);
          onChanged();
        } else {
          compBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public Builder setComp(
          int index, pb.Object.Component.Builder builderForValue) {
        if (compBuilder_ == null) {
          ensureCompIsMutable();
          comp_.set(index, builderForValue.build());
          onChanged();
        } else {
          compBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public Builder addComp(pb.Object.Component value) {
        if (compBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompIsMutable();
          comp_.add(value);
          onChanged();
        } else {
          compBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public Builder addComp(
          int index, pb.Object.Component value) {
        if (compBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompIsMutable();
          comp_.add(index, value);
          onChanged();
        } else {
          compBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public Builder addComp(
          pb.Object.Component.Builder builderForValue) {
        if (compBuilder_ == null) {
          ensureCompIsMutable();
          comp_.add(builderForValue.build());
          onChanged();
        } else {
          compBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public Builder addComp(
          int index, pb.Object.Component.Builder builderForValue) {
        if (compBuilder_ == null) {
          ensureCompIsMutable();
          comp_.add(index, builderForValue.build());
          onChanged();
        } else {
          compBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public Builder addAllComp(
          java.lang.Iterable<? extends pb.Object.Component> values) {
        if (compBuilder_ == null) {
          ensureCompIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, comp_);
          onChanged();
        } else {
          compBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public Builder clearComp() {
        if (compBuilder_ == null) {
          comp_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000080);
          onChanged();
        } else {
          compBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public Builder removeComp(int index) {
        if (compBuilder_ == null) {
          ensureCompIsMutable();
          comp_.remove(index);
          onChanged();
        } else {
          compBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public pb.Object.Component.Builder getCompBuilder(
          int index) {
        return getCompFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public pb.Object.ComponentOrBuilder getCompOrBuilder(
          int index) {
        if (compBuilder_ == null) {
          return comp_.get(index);  } else {
          return compBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public java.util.List<? extends pb.Object.ComponentOrBuilder> 
           getCompOrBuilderList() {
        if (compBuilder_ != null) {
          return compBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(comp_);
        }
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public pb.Object.Component.Builder addCompBuilder() {
        return getCompFieldBuilder().addBuilder(
            pb.Object.Component.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public pb.Object.Component.Builder addCompBuilder(
          int index) {
        return getCompFieldBuilder().addBuilder(
            index, pb.Object.Component.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Component comp = 100;</code>
       *
       * <pre>
       * remote comp description for MT_HALCOMP_CREATE: [comp, pins*]
       * </pre>
       */
      public java.util.List<pb.Object.Component.Builder> 
           getCompBuilderList() {
        return getCompFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Component, pb.Object.Component.Builder, pb.Object.ComponentOrBuilder> 
          getCompFieldBuilder() {
        if (compBuilder_ == null) {
          compBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pb.Object.Component, pb.Object.Component.Builder, pb.Object.ComponentOrBuilder>(
                  comp_,
                  ((bitField1_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          comp_ = null;
        }
        return compBuilder_;
      }

      private java.util.List<pb.Object.Pin> pin_ =
        java.util.Collections.emptyList();
      private void ensurePinIsMutable() {
        if (!((bitField1_ & 0x00000100) == 0x00000100)) {
          pin_ = new java.util.ArrayList<pb.Object.Pin>(pin_);
          bitField1_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Pin, pb.Object.Pin.Builder, pb.Object.PinOrBuilder> pinBuilder_;

      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public java.util.List<pb.Object.Pin> getPinList() {
        if (pinBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pin_);
        } else {
          return pinBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public int getPinCount() {
        if (pinBuilder_ == null) {
          return pin_.size();
        } else {
          return pinBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public pb.Object.Pin getPin(int index) {
        if (pinBuilder_ == null) {
          return pin_.get(index);
        } else {
          return pinBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder setPin(
          int index, pb.Object.Pin value) {
        if (pinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePinIsMutable();
          pin_.set(index, value);
          onChanged();
        } else {
          pinBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder setPin(
          int index, pb.Object.Pin.Builder builderForValue) {
        if (pinBuilder_ == null) {
          ensurePinIsMutable();
          pin_.set(index, builderForValue.build());
          onChanged();
        } else {
          pinBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder addPin(pb.Object.Pin value) {
        if (pinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePinIsMutable();
          pin_.add(value);
          onChanged();
        } else {
          pinBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder addPin(
          int index, pb.Object.Pin value) {
        if (pinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePinIsMutable();
          pin_.add(index, value);
          onChanged();
        } else {
          pinBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder addPin(
          pb.Object.Pin.Builder builderForValue) {
        if (pinBuilder_ == null) {
          ensurePinIsMutable();
          pin_.add(builderForValue.build());
          onChanged();
        } else {
          pinBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder addPin(
          int index, pb.Object.Pin.Builder builderForValue) {
        if (pinBuilder_ == null) {
          ensurePinIsMutable();
          pin_.add(index, builderForValue.build());
          onChanged();
        } else {
          pinBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder addAllPin(
          java.lang.Iterable<? extends pb.Object.Pin> values) {
        if (pinBuilder_ == null) {
          ensurePinIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pin_);
          onChanged();
        } else {
          pinBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder clearPin() {
        if (pinBuilder_ == null) {
          pin_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000100);
          onChanged();
        } else {
          pinBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder removePin(int index) {
        if (pinBuilder_ == null) {
          ensurePinIsMutable();
          pin_.remove(index);
          onChanged();
        } else {
          pinBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public pb.Object.Pin.Builder getPinBuilder(
          int index) {
        return getPinFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public pb.Object.PinOrBuilder getPinOrBuilder(
          int index) {
        if (pinBuilder_ == null) {
          return pin_.get(index);  } else {
          return pinBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public java.util.List<? extends pb.Object.PinOrBuilder> 
           getPinOrBuilderList() {
        if (pinBuilder_ != null) {
          return pinBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pin_);
        }
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public pb.Object.Pin.Builder addPinBuilder() {
        return getPinFieldBuilder().addBuilder(
            pb.Object.Pin.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public pb.Object.Pin.Builder addPinBuilder(
          int index) {
        return getPinFieldBuilder().addBuilder(
            index, pb.Object.Pin.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Pin pin = 2;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public java.util.List<pb.Object.Pin.Builder> 
           getPinBuilderList() {
        return getPinFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Pin, pb.Object.Pin.Builder, pb.Object.PinOrBuilder> 
          getPinFieldBuilder() {
        if (pinBuilder_ == null) {
          pinBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pb.Object.Pin, pb.Object.Pin.Builder, pb.Object.PinOrBuilder>(
                  pin_,
                  ((bitField1_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          pin_ = null;
        }
        return pinBuilder_;
      }

      private java.util.List<pb.Object.Signal> signal_ =
        java.util.Collections.emptyList();
      private void ensureSignalIsMutable() {
        if (!((bitField1_ & 0x00000200) == 0x00000200)) {
          signal_ = new java.util.ArrayList<pb.Object.Signal>(signal_);
          bitField1_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Signal, pb.Object.Signal.Builder, pb.Object.SignalOrBuilder> signalBuilder_;

      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public java.util.List<pb.Object.Signal> getSignalList() {
        if (signalBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signal_);
        } else {
          return signalBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public int getSignalCount() {
        if (signalBuilder_ == null) {
          return signal_.size();
        } else {
          return signalBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public pb.Object.Signal getSignal(int index) {
        if (signalBuilder_ == null) {
          return signal_.get(index);
        } else {
          return signalBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder setSignal(
          int index, pb.Object.Signal value) {
        if (signalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalIsMutable();
          signal_.set(index, value);
          onChanged();
        } else {
          signalBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder setSignal(
          int index, pb.Object.Signal.Builder builderForValue) {
        if (signalBuilder_ == null) {
          ensureSignalIsMutable();
          signal_.set(index, builderForValue.build());
          onChanged();
        } else {
          signalBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder addSignal(pb.Object.Signal value) {
        if (signalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalIsMutable();
          signal_.add(value);
          onChanged();
        } else {
          signalBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder addSignal(
          int index, pb.Object.Signal value) {
        if (signalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalIsMutable();
          signal_.add(index, value);
          onChanged();
        } else {
          signalBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder addSignal(
          pb.Object.Signal.Builder builderForValue) {
        if (signalBuilder_ == null) {
          ensureSignalIsMutable();
          signal_.add(builderForValue.build());
          onChanged();
        } else {
          signalBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder addSignal(
          int index, pb.Object.Signal.Builder builderForValue) {
        if (signalBuilder_ == null) {
          ensureSignalIsMutable();
          signal_.add(index, builderForValue.build());
          onChanged();
        } else {
          signalBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder addAllSignal(
          java.lang.Iterable<? extends pb.Object.Signal> values) {
        if (signalBuilder_ == null) {
          ensureSignalIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, signal_);
          onChanged();
        } else {
          signalBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder clearSignal() {
        if (signalBuilder_ == null) {
          signal_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000200);
          onChanged();
        } else {
          signalBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public Builder removeSignal(int index) {
        if (signalBuilder_ == null) {
          ensureSignalIsMutable();
          signal_.remove(index);
          onChanged();
        } else {
          signalBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public pb.Object.Signal.Builder getSignalBuilder(
          int index) {
        return getSignalFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public pb.Object.SignalOrBuilder getSignalOrBuilder(
          int index) {
        if (signalBuilder_ == null) {
          return signal_.get(index);  } else {
          return signalBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public java.util.List<? extends pb.Object.SignalOrBuilder> 
           getSignalOrBuilderList() {
        if (signalBuilder_ != null) {
          return signalBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signal_);
        }
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public pb.Object.Signal.Builder addSignalBuilder() {
        return getSignalFieldBuilder().addBuilder(
            pb.Object.Signal.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public pb.Object.Signal.Builder addSignalBuilder(
          int index) {
        return getSignalFieldBuilder().addBuilder(
            index, pb.Object.Signal.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Signal signal = 3;</code>
       *
       * <pre>
       * high frequency - use single byte tag
       * </pre>
       */
      public java.util.List<pb.Object.Signal.Builder> 
           getSignalBuilderList() {
        return getSignalFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Signal, pb.Object.Signal.Builder, pb.Object.SignalOrBuilder> 
          getSignalFieldBuilder() {
        if (signalBuilder_ == null) {
          signalBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pb.Object.Signal, pb.Object.Signal.Builder, pb.Object.SignalOrBuilder>(
                  signal_,
                  ((bitField1_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          signal_ = null;
        }
        return signalBuilder_;
      }

      private java.util.List<pb.Object.Param> param_ =
        java.util.Collections.emptyList();
      private void ensureParamIsMutable() {
        if (!((bitField1_ & 0x00000400) == 0x00000400)) {
          param_ = new java.util.ArrayList<pb.Object.Param>(param_);
          bitField1_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Param, pb.Object.Param.Builder, pb.Object.ParamOrBuilder> paramBuilder_;

      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public java.util.List<pb.Object.Param> getParamList() {
        if (paramBuilder_ == null) {
          return java.util.Collections.unmodifiableList(param_);
        } else {
          return paramBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public int getParamCount() {
        if (paramBuilder_ == null) {
          return param_.size();
        } else {
          return paramBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public pb.Object.Param getParam(int index) {
        if (paramBuilder_ == null) {
          return param_.get(index);
        } else {
          return paramBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public Builder setParam(
          int index, pb.Object.Param value) {
        if (paramBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamIsMutable();
          param_.set(index, value);
          onChanged();
        } else {
          paramBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public Builder setParam(
          int index, pb.Object.Param.Builder builderForValue) {
        if (paramBuilder_ == null) {
          ensureParamIsMutable();
          param_.set(index, builderForValue.build());
          onChanged();
        } else {
          paramBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public Builder addParam(pb.Object.Param value) {
        if (paramBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamIsMutable();
          param_.add(value);
          onChanged();
        } else {
          paramBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public Builder addParam(
          int index, pb.Object.Param value) {
        if (paramBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamIsMutable();
          param_.add(index, value);
          onChanged();
        } else {
          paramBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public Builder addParam(
          pb.Object.Param.Builder builderForValue) {
        if (paramBuilder_ == null) {
          ensureParamIsMutable();
          param_.add(builderForValue.build());
          onChanged();
        } else {
          paramBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public Builder addParam(
          int index, pb.Object.Param.Builder builderForValue) {
        if (paramBuilder_ == null) {
          ensureParamIsMutable();
          param_.add(index, builderForValue.build());
          onChanged();
        } else {
          paramBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public Builder addAllParam(
          java.lang.Iterable<? extends pb.Object.Param> values) {
        if (paramBuilder_ == null) {
          ensureParamIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, param_);
          onChanged();
        } else {
          paramBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public Builder clearParam() {
        if (paramBuilder_ == null) {
          param_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000400);
          onChanged();
        } else {
          paramBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public Builder removeParam(int index) {
        if (paramBuilder_ == null) {
          ensureParamIsMutable();
          param_.remove(index);
          onChanged();
        } else {
          paramBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public pb.Object.Param.Builder getParamBuilder(
          int index) {
        return getParamFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public pb.Object.ParamOrBuilder getParamOrBuilder(
          int index) {
        if (paramBuilder_ == null) {
          return param_.get(index);  } else {
          return paramBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public java.util.List<? extends pb.Object.ParamOrBuilder> 
           getParamOrBuilderList() {
        if (paramBuilder_ != null) {
          return paramBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(param_);
        }
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public pb.Object.Param.Builder addParamBuilder() {
        return getParamFieldBuilder().addBuilder(
            pb.Object.Param.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public pb.Object.Param.Builder addParamBuilder(
          int index) {
        return getParamFieldBuilder().addBuilder(
            index, pb.Object.Param.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Param param = 103;</code>
       */
      public java.util.List<pb.Object.Param.Builder> 
           getParamBuilderList() {
        return getParamFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Param, pb.Object.Param.Builder, pb.Object.ParamOrBuilder> 
          getParamFieldBuilder() {
        if (paramBuilder_ == null) {
          paramBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pb.Object.Param, pb.Object.Param.Builder, pb.Object.ParamOrBuilder>(
                  param_,
                  ((bitField1_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          param_ = null;
        }
        return paramBuilder_;
      }

      private java.util.List<pb.Object.Thread> thread_ =
        java.util.Collections.emptyList();
      private void ensureThreadIsMutable() {
        if (!((bitField1_ & 0x00000800) == 0x00000800)) {
          thread_ = new java.util.ArrayList<pb.Object.Thread>(thread_);
          bitField1_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Thread, pb.Object.Thread.Builder, pb.Object.ThreadOrBuilder> threadBuilder_;

      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public java.util.List<pb.Object.Thread> getThreadList() {
        if (threadBuilder_ == null) {
          return java.util.Collections.unmodifiableList(thread_);
        } else {
          return threadBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public int getThreadCount() {
        if (threadBuilder_ == null) {
          return thread_.size();
        } else {
          return threadBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public pb.Object.Thread getThread(int index) {
        if (threadBuilder_ == null) {
          return thread_.get(index);
        } else {
          return threadBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public Builder setThread(
          int index, pb.Object.Thread value) {
        if (threadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureThreadIsMutable();
          thread_.set(index, value);
          onChanged();
        } else {
          threadBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public Builder setThread(
          int index, pb.Object.Thread.Builder builderForValue) {
        if (threadBuilder_ == null) {
          ensureThreadIsMutable();
          thread_.set(index, builderForValue.build());
          onChanged();
        } else {
          threadBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public Builder addThread(pb.Object.Thread value) {
        if (threadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureThreadIsMutable();
          thread_.add(value);
          onChanged();
        } else {
          threadBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public Builder addThread(
          int index, pb.Object.Thread value) {
        if (threadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureThreadIsMutable();
          thread_.add(index, value);
          onChanged();
        } else {
          threadBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public Builder addThread(
          pb.Object.Thread.Builder builderForValue) {
        if (threadBuilder_ == null) {
          ensureThreadIsMutable();
          thread_.add(builderForValue.build());
          onChanged();
        } else {
          threadBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public Builder addThread(
          int index, pb.Object.Thread.Builder builderForValue) {
        if (threadBuilder_ == null) {
          ensureThreadIsMutable();
          thread_.add(index, builderForValue.build());
          onChanged();
        } else {
          threadBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public Builder addAllThread(
          java.lang.Iterable<? extends pb.Object.Thread> values) {
        if (threadBuilder_ == null) {
          ensureThreadIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, thread_);
          onChanged();
        } else {
          threadBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public Builder clearThread() {
        if (threadBuilder_ == null) {
          thread_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000800);
          onChanged();
        } else {
          threadBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public Builder removeThread(int index) {
        if (threadBuilder_ == null) {
          ensureThreadIsMutable();
          thread_.remove(index);
          onChanged();
        } else {
          threadBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public pb.Object.Thread.Builder getThreadBuilder(
          int index) {
        return getThreadFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public pb.Object.ThreadOrBuilder getThreadOrBuilder(
          int index) {
        if (threadBuilder_ == null) {
          return thread_.get(index);  } else {
          return threadBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public java.util.List<? extends pb.Object.ThreadOrBuilder> 
           getThreadOrBuilderList() {
        if (threadBuilder_ != null) {
          return threadBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(thread_);
        }
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public pb.Object.Thread.Builder addThreadBuilder() {
        return getThreadFieldBuilder().addBuilder(
            pb.Object.Thread.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public pb.Object.Thread.Builder addThreadBuilder(
          int index) {
        return getThreadFieldBuilder().addBuilder(
            index, pb.Object.Thread.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Thread thread = 104;</code>
       */
      public java.util.List<pb.Object.Thread.Builder> 
           getThreadBuilderList() {
        return getThreadFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Thread, pb.Object.Thread.Builder, pb.Object.ThreadOrBuilder> 
          getThreadFieldBuilder() {
        if (threadBuilder_ == null) {
          threadBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pb.Object.Thread, pb.Object.Thread.Builder, pb.Object.ThreadOrBuilder>(
                  thread_,
                  ((bitField1_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          thread_ = null;
        }
        return threadBuilder_;
      }

      private java.util.List<pb.Object.Ring> ring_ =
        java.util.Collections.emptyList();
      private void ensureRingIsMutable() {
        if (!((bitField1_ & 0x00001000) == 0x00001000)) {
          ring_ = new java.util.ArrayList<pb.Object.Ring>(ring_);
          bitField1_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Ring, pb.Object.Ring.Builder, pb.Object.RingOrBuilder> ringBuilder_;

      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public java.util.List<pb.Object.Ring> getRingList() {
        if (ringBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ring_);
        } else {
          return ringBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public int getRingCount() {
        if (ringBuilder_ == null) {
          return ring_.size();
        } else {
          return ringBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public pb.Object.Ring getRing(int index) {
        if (ringBuilder_ == null) {
          return ring_.get(index);
        } else {
          return ringBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public Builder setRing(
          int index, pb.Object.Ring value) {
        if (ringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRingIsMutable();
          ring_.set(index, value);
          onChanged();
        } else {
          ringBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public Builder setRing(
          int index, pb.Object.Ring.Builder builderForValue) {
        if (ringBuilder_ == null) {
          ensureRingIsMutable();
          ring_.set(index, builderForValue.build());
          onChanged();
        } else {
          ringBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public Builder addRing(pb.Object.Ring value) {
        if (ringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRingIsMutable();
          ring_.add(value);
          onChanged();
        } else {
          ringBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public Builder addRing(
          int index, pb.Object.Ring value) {
        if (ringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRingIsMutable();
          ring_.add(index, value);
          onChanged();
        } else {
          ringBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public Builder addRing(
          pb.Object.Ring.Builder builderForValue) {
        if (ringBuilder_ == null) {
          ensureRingIsMutable();
          ring_.add(builderForValue.build());
          onChanged();
        } else {
          ringBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public Builder addRing(
          int index, pb.Object.Ring.Builder builderForValue) {
        if (ringBuilder_ == null) {
          ensureRingIsMutable();
          ring_.add(index, builderForValue.build());
          onChanged();
        } else {
          ringBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public Builder addAllRing(
          java.lang.Iterable<? extends pb.Object.Ring> values) {
        if (ringBuilder_ == null) {
          ensureRingIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ring_);
          onChanged();
        } else {
          ringBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public Builder clearRing() {
        if (ringBuilder_ == null) {
          ring_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00001000);
          onChanged();
        } else {
          ringBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public Builder removeRing(int index) {
        if (ringBuilder_ == null) {
          ensureRingIsMutable();
          ring_.remove(index);
          onChanged();
        } else {
          ringBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public pb.Object.Ring.Builder getRingBuilder(
          int index) {
        return getRingFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public pb.Object.RingOrBuilder getRingOrBuilder(
          int index) {
        if (ringBuilder_ == null) {
          return ring_.get(index);  } else {
          return ringBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public java.util.List<? extends pb.Object.RingOrBuilder> 
           getRingOrBuilderList() {
        if (ringBuilder_ != null) {
          return ringBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ring_);
        }
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public pb.Object.Ring.Builder addRingBuilder() {
        return getRingFieldBuilder().addBuilder(
            pb.Object.Ring.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public pb.Object.Ring.Builder addRingBuilder(
          int index) {
        return getRingFieldBuilder().addBuilder(
            index, pb.Object.Ring.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Ring ring = 105;</code>
       */
      public java.util.List<pb.Object.Ring.Builder> 
           getRingBuilderList() {
        return getRingFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Ring, pb.Object.Ring.Builder, pb.Object.RingOrBuilder> 
          getRingFieldBuilder() {
        if (ringBuilder_ == null) {
          ringBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pb.Object.Ring, pb.Object.Ring.Builder, pb.Object.RingOrBuilder>(
                  ring_,
                  ((bitField1_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          ring_ = null;
        }
        return ringBuilder_;
      }

      private java.util.List<pb.Object.Group> group_ =
        java.util.Collections.emptyList();
      private void ensureGroupIsMutable() {
        if (!((bitField1_ & 0x00002000) == 0x00002000)) {
          group_ = new java.util.ArrayList<pb.Object.Group>(group_);
          bitField1_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Group, pb.Object.Group.Builder, pb.Object.GroupOrBuilder> groupBuilder_;

      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public java.util.List<pb.Object.Group> getGroupList() {
        if (groupBuilder_ == null) {
          return java.util.Collections.unmodifiableList(group_);
        } else {
          return groupBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public int getGroupCount() {
        if (groupBuilder_ == null) {
          return group_.size();
        } else {
          return groupBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public pb.Object.Group getGroup(int index) {
        if (groupBuilder_ == null) {
          return group_.get(index);
        } else {
          return groupBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public Builder setGroup(
          int index, pb.Object.Group value) {
        if (groupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGroupIsMutable();
          group_.set(index, value);
          onChanged();
        } else {
          groupBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public Builder setGroup(
          int index, pb.Object.Group.Builder builderForValue) {
        if (groupBuilder_ == null) {
          ensureGroupIsMutable();
          group_.set(index, builderForValue.build());
          onChanged();
        } else {
          groupBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public Builder addGroup(pb.Object.Group value) {
        if (groupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGroupIsMutable();
          group_.add(value);
          onChanged();
        } else {
          groupBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public Builder addGroup(
          int index, pb.Object.Group value) {
        if (groupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGroupIsMutable();
          group_.add(index, value);
          onChanged();
        } else {
          groupBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public Builder addGroup(
          pb.Object.Group.Builder builderForValue) {
        if (groupBuilder_ == null) {
          ensureGroupIsMutable();
          group_.add(builderForValue.build());
          onChanged();
        } else {
          groupBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public Builder addGroup(
          int index, pb.Object.Group.Builder builderForValue) {
        if (groupBuilder_ == null) {
          ensureGroupIsMutable();
          group_.add(index, builderForValue.build());
          onChanged();
        } else {
          groupBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public Builder addAllGroup(
          java.lang.Iterable<? extends pb.Object.Group> values) {
        if (groupBuilder_ == null) {
          ensureGroupIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, group_);
          onChanged();
        } else {
          groupBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public Builder clearGroup() {
        if (groupBuilder_ == null) {
          group_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00002000);
          onChanged();
        } else {
          groupBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public Builder removeGroup(int index) {
        if (groupBuilder_ == null) {
          ensureGroupIsMutable();
          group_.remove(index);
          onChanged();
        } else {
          groupBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public pb.Object.Group.Builder getGroupBuilder(
          int index) {
        return getGroupFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public pb.Object.GroupOrBuilder getGroupOrBuilder(
          int index) {
        if (groupBuilder_ == null) {
          return group_.get(index);  } else {
          return groupBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public java.util.List<? extends pb.Object.GroupOrBuilder> 
           getGroupOrBuilderList() {
        if (groupBuilder_ != null) {
          return groupBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(group_);
        }
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public pb.Object.Group.Builder addGroupBuilder() {
        return getGroupFieldBuilder().addBuilder(
            pb.Object.Group.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public pb.Object.Group.Builder addGroupBuilder(
          int index) {
        return getGroupFieldBuilder().addBuilder(
            index, pb.Object.Group.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Group group = 106;</code>
       */
      public java.util.List<pb.Object.Group.Builder> 
           getGroupBuilderList() {
        return getGroupFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Group, pb.Object.Group.Builder, pb.Object.GroupOrBuilder> 
          getGroupFieldBuilder() {
        if (groupBuilder_ == null) {
          groupBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pb.Object.Group, pb.Object.Group.Builder, pb.Object.GroupOrBuilder>(
                  group_,
                  ((bitField1_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          group_ = null;
        }
        return groupBuilder_;
      }

      private java.util.List<pb.Object.Member> member_ =
        java.util.Collections.emptyList();
      private void ensureMemberIsMutable() {
        if (!((bitField1_ & 0x00004000) == 0x00004000)) {
          member_ = new java.util.ArrayList<pb.Object.Member>(member_);
          bitField1_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Member, pb.Object.Member.Builder, pb.Object.MemberOrBuilder> memberBuilder_;

      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public java.util.List<pb.Object.Member> getMemberList() {
        if (memberBuilder_ == null) {
          return java.util.Collections.unmodifiableList(member_);
        } else {
          return memberBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public int getMemberCount() {
        if (memberBuilder_ == null) {
          return member_.size();
        } else {
          return memberBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public pb.Object.Member getMember(int index) {
        if (memberBuilder_ == null) {
          return member_.get(index);
        } else {
          return memberBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public Builder setMember(
          int index, pb.Object.Member value) {
        if (memberBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMemberIsMutable();
          member_.set(index, value);
          onChanged();
        } else {
          memberBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public Builder setMember(
          int index, pb.Object.Member.Builder builderForValue) {
        if (memberBuilder_ == null) {
          ensureMemberIsMutable();
          member_.set(index, builderForValue.build());
          onChanged();
        } else {
          memberBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public Builder addMember(pb.Object.Member value) {
        if (memberBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMemberIsMutable();
          member_.add(value);
          onChanged();
        } else {
          memberBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public Builder addMember(
          int index, pb.Object.Member value) {
        if (memberBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMemberIsMutable();
          member_.add(index, value);
          onChanged();
        } else {
          memberBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public Builder addMember(
          pb.Object.Member.Builder builderForValue) {
        if (memberBuilder_ == null) {
          ensureMemberIsMutable();
          member_.add(builderForValue.build());
          onChanged();
        } else {
          memberBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public Builder addMember(
          int index, pb.Object.Member.Builder builderForValue) {
        if (memberBuilder_ == null) {
          ensureMemberIsMutable();
          member_.add(index, builderForValue.build());
          onChanged();
        } else {
          memberBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public Builder addAllMember(
          java.lang.Iterable<? extends pb.Object.Member> values) {
        if (memberBuilder_ == null) {
          ensureMemberIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, member_);
          onChanged();
        } else {
          memberBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public Builder clearMember() {
        if (memberBuilder_ == null) {
          member_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00004000);
          onChanged();
        } else {
          memberBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public Builder removeMember(int index) {
        if (memberBuilder_ == null) {
          ensureMemberIsMutable();
          member_.remove(index);
          onChanged();
        } else {
          memberBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public pb.Object.Member.Builder getMemberBuilder(
          int index) {
        return getMemberFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public pb.Object.MemberOrBuilder getMemberOrBuilder(
          int index) {
        if (memberBuilder_ == null) {
          return member_.get(index);  } else {
          return memberBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public java.util.List<? extends pb.Object.MemberOrBuilder> 
           getMemberOrBuilderList() {
        if (memberBuilder_ != null) {
          return memberBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(member_);
        }
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public pb.Object.Member.Builder addMemberBuilder() {
        return getMemberFieldBuilder().addBuilder(
            pb.Object.Member.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public pb.Object.Member.Builder addMemberBuilder(
          int index) {
        return getMemberFieldBuilder().addBuilder(
            index, pb.Object.Member.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Member member = 107;</code>
       */
      public java.util.List<pb.Object.Member.Builder> 
           getMemberBuilderList() {
        return getMemberFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Member, pb.Object.Member.Builder, pb.Object.MemberOrBuilder> 
          getMemberFieldBuilder() {
        if (memberBuilder_ == null) {
          memberBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pb.Object.Member, pb.Object.Member.Builder, pb.Object.MemberOrBuilder>(
                  member_,
                  ((bitField1_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          member_ = null;
        }
        return memberBuilder_;
      }

      private java.util.List<pb.Object.Function> function_ =
        java.util.Collections.emptyList();
      private void ensureFunctionIsMutable() {
        if (!((bitField1_ & 0x00008000) == 0x00008000)) {
          function_ = new java.util.ArrayList<pb.Object.Function>(function_);
          bitField1_ |= 0x00008000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Function, pb.Object.Function.Builder, pb.Object.FunctionOrBuilder> functionBuilder_;

      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public java.util.List<pb.Object.Function> getFunctionList() {
        if (functionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(function_);
        } else {
          return functionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public int getFunctionCount() {
        if (functionBuilder_ == null) {
          return function_.size();
        } else {
          return functionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public pb.Object.Function getFunction(int index) {
        if (functionBuilder_ == null) {
          return function_.get(index);
        } else {
          return functionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public Builder setFunction(
          int index, pb.Object.Function value) {
        if (functionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFunctionIsMutable();
          function_.set(index, value);
          onChanged();
        } else {
          functionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public Builder setFunction(
          int index, pb.Object.Function.Builder builderForValue) {
        if (functionBuilder_ == null) {
          ensureFunctionIsMutable();
          function_.set(index, builderForValue.build());
          onChanged();
        } else {
          functionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public Builder addFunction(pb.Object.Function value) {
        if (functionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFunctionIsMutable();
          function_.add(value);
          onChanged();
        } else {
          functionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public Builder addFunction(
          int index, pb.Object.Function value) {
        if (functionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFunctionIsMutable();
          function_.add(index, value);
          onChanged();
        } else {
          functionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public Builder addFunction(
          pb.Object.Function.Builder builderForValue) {
        if (functionBuilder_ == null) {
          ensureFunctionIsMutable();
          function_.add(builderForValue.build());
          onChanged();
        } else {
          functionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public Builder addFunction(
          int index, pb.Object.Function.Builder builderForValue) {
        if (functionBuilder_ == null) {
          ensureFunctionIsMutable();
          function_.add(index, builderForValue.build());
          onChanged();
        } else {
          functionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public Builder addAllFunction(
          java.lang.Iterable<? extends pb.Object.Function> values) {
        if (functionBuilder_ == null) {
          ensureFunctionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, function_);
          onChanged();
        } else {
          functionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public Builder clearFunction() {
        if (functionBuilder_ == null) {
          function_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00008000);
          onChanged();
        } else {
          functionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public Builder removeFunction(int index) {
        if (functionBuilder_ == null) {
          ensureFunctionIsMutable();
          function_.remove(index);
          onChanged();
        } else {
          functionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public pb.Object.Function.Builder getFunctionBuilder(
          int index) {
        return getFunctionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public pb.Object.FunctionOrBuilder getFunctionOrBuilder(
          int index) {
        if (functionBuilder_ == null) {
          return function_.get(index);  } else {
          return functionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public java.util.List<? extends pb.Object.FunctionOrBuilder> 
           getFunctionOrBuilderList() {
        if (functionBuilder_ != null) {
          return functionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(function_);
        }
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public pb.Object.Function.Builder addFunctionBuilder() {
        return getFunctionFieldBuilder().addBuilder(
            pb.Object.Function.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public pb.Object.Function.Builder addFunctionBuilder(
          int index) {
        return getFunctionFieldBuilder().addBuilder(
            index, pb.Object.Function.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Function function = 108;</code>
       */
      public java.util.List<pb.Object.Function.Builder> 
           getFunctionBuilderList() {
        return getFunctionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Function, pb.Object.Function.Builder, pb.Object.FunctionOrBuilder> 
          getFunctionFieldBuilder() {
        if (functionBuilder_ == null) {
          functionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pb.Object.Function, pb.Object.Function.Builder, pb.Object.FunctionOrBuilder>(
                  function_,
                  ((bitField1_ & 0x00008000) == 0x00008000),
                  getParentForChildren(),
                  isClean());
          function_ = null;
        }
        return functionBuilder_;
      }

      private pb.Object.ProtocolParameters pparams_ = pb.Object.ProtocolParameters.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Object.ProtocolParameters, pb.Object.ProtocolParameters.Builder, pb.Object.ProtocolParametersOrBuilder> pparamsBuilder_;
      /**
       * <code>optional .pb.ProtocolParameters pparams = 109;</code>
       */
      public boolean hasPparams() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .pb.ProtocolParameters pparams = 109;</code>
       */
      public pb.Object.ProtocolParameters getPparams() {
        if (pparamsBuilder_ == null) {
          return pparams_;
        } else {
          return pparamsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.ProtocolParameters pparams = 109;</code>
       */
      public Builder setPparams(pb.Object.ProtocolParameters value) {
        if (pparamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pparams_ = value;
          onChanged();
        } else {
          pparamsBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .pb.ProtocolParameters pparams = 109;</code>
       */
      public Builder setPparams(
          pb.Object.ProtocolParameters.Builder builderForValue) {
        if (pparamsBuilder_ == null) {
          pparams_ = builderForValue.build();
          onChanged();
        } else {
          pparamsBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .pb.ProtocolParameters pparams = 109;</code>
       */
      public Builder mergePparams(pb.Object.ProtocolParameters value) {
        if (pparamsBuilder_ == null) {
          if (((bitField1_ & 0x00010000) == 0x00010000) &&
              pparams_ != pb.Object.ProtocolParameters.getDefaultInstance()) {
            pparams_ =
              pb.Object.ProtocolParameters.newBuilder(pparams_).mergeFrom(value).buildPartial();
          } else {
            pparams_ = value;
          }
          onChanged();
        } else {
          pparamsBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .pb.ProtocolParameters pparams = 109;</code>
       */
      public Builder clearPparams() {
        if (pparamsBuilder_ == null) {
          pparams_ = pb.Object.ProtocolParameters.getDefaultInstance();
          onChanged();
        } else {
          pparamsBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .pb.ProtocolParameters pparams = 109;</code>
       */
      public pb.Object.ProtocolParameters.Builder getPparamsBuilder() {
        bitField1_ |= 0x00010000;
        onChanged();
        return getPparamsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.ProtocolParameters pparams = 109;</code>
       */
      public pb.Object.ProtocolParametersOrBuilder getPparamsOrBuilder() {
        if (pparamsBuilder_ != null) {
          return pparamsBuilder_.getMessageOrBuilder();
        } else {
          return pparams_;
        }
      }
      /**
       * <code>optional .pb.ProtocolParameters pparams = 109;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Object.ProtocolParameters, pb.Object.ProtocolParameters.Builder, pb.Object.ProtocolParametersOrBuilder> 
          getPparamsFieldBuilder() {
        if (pparamsBuilder_ == null) {
          pparamsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Object.ProtocolParameters, pb.Object.ProtocolParameters.Builder, pb.Object.ProtocolParametersOrBuilder>(
                  getPparams(),
                  getParentForChildren(),
                  isClean());
          pparams_ = null;
        }
        return pparamsBuilder_;
      }

      private java.util.List<pb.Object.Vtable> vtable_ =
        java.util.Collections.emptyList();
      private void ensureVtableIsMutable() {
        if (!((bitField1_ & 0x00020000) == 0x00020000)) {
          vtable_ = new java.util.ArrayList<pb.Object.Vtable>(vtable_);
          bitField1_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Vtable, pb.Object.Vtable.Builder, pb.Object.VtableOrBuilder> vtableBuilder_;

      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public java.util.List<pb.Object.Vtable> getVtableList() {
        if (vtableBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vtable_);
        } else {
          return vtableBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public int getVtableCount() {
        if (vtableBuilder_ == null) {
          return vtable_.size();
        } else {
          return vtableBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public pb.Object.Vtable getVtable(int index) {
        if (vtableBuilder_ == null) {
          return vtable_.get(index);
        } else {
          return vtableBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public Builder setVtable(
          int index, pb.Object.Vtable value) {
        if (vtableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVtableIsMutable();
          vtable_.set(index, value);
          onChanged();
        } else {
          vtableBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public Builder setVtable(
          int index, pb.Object.Vtable.Builder builderForValue) {
        if (vtableBuilder_ == null) {
          ensureVtableIsMutable();
          vtable_.set(index, builderForValue.build());
          onChanged();
        } else {
          vtableBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public Builder addVtable(pb.Object.Vtable value) {
        if (vtableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVtableIsMutable();
          vtable_.add(value);
          onChanged();
        } else {
          vtableBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public Builder addVtable(
          int index, pb.Object.Vtable value) {
        if (vtableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVtableIsMutable();
          vtable_.add(index, value);
          onChanged();
        } else {
          vtableBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public Builder addVtable(
          pb.Object.Vtable.Builder builderForValue) {
        if (vtableBuilder_ == null) {
          ensureVtableIsMutable();
          vtable_.add(builderForValue.build());
          onChanged();
        } else {
          vtableBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public Builder addVtable(
          int index, pb.Object.Vtable.Builder builderForValue) {
        if (vtableBuilder_ == null) {
          ensureVtableIsMutable();
          vtable_.add(index, builderForValue.build());
          onChanged();
        } else {
          vtableBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public Builder addAllVtable(
          java.lang.Iterable<? extends pb.Object.Vtable> values) {
        if (vtableBuilder_ == null) {
          ensureVtableIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, vtable_);
          onChanged();
        } else {
          vtableBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public Builder clearVtable() {
        if (vtableBuilder_ == null) {
          vtable_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00020000);
          onChanged();
        } else {
          vtableBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public Builder removeVtable(int index) {
        if (vtableBuilder_ == null) {
          ensureVtableIsMutable();
          vtable_.remove(index);
          onChanged();
        } else {
          vtableBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public pb.Object.Vtable.Builder getVtableBuilder(
          int index) {
        return getVtableFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public pb.Object.VtableOrBuilder getVtableOrBuilder(
          int index) {
        if (vtableBuilder_ == null) {
          return vtable_.get(index);  } else {
          return vtableBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public java.util.List<? extends pb.Object.VtableOrBuilder> 
           getVtableOrBuilderList() {
        if (vtableBuilder_ != null) {
          return vtableBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vtable_);
        }
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public pb.Object.Vtable.Builder addVtableBuilder() {
        return getVtableFieldBuilder().addBuilder(
            pb.Object.Vtable.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public pb.Object.Vtable.Builder addVtableBuilder(
          int index) {
        return getVtableFieldBuilder().addBuilder(
            index, pb.Object.Vtable.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Vtable vtable = 110;</code>
       */
      public java.util.List<pb.Object.Vtable.Builder> 
           getVtableBuilderList() {
        return getVtableFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Vtable, pb.Object.Vtable.Builder, pb.Object.VtableOrBuilder> 
          getVtableFieldBuilder() {
        if (vtableBuilder_ == null) {
          vtableBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pb.Object.Vtable, pb.Object.Vtable.Builder, pb.Object.VtableOrBuilder>(
                  vtable_,
                  ((bitField1_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          vtable_ = null;
        }
        return vtableBuilder_;
      }

      private java.util.List<pb.Object.Inst> inst_ =
        java.util.Collections.emptyList();
      private void ensureInstIsMutable() {
        if (!((bitField1_ & 0x00040000) == 0x00040000)) {
          inst_ = new java.util.ArrayList<pb.Object.Inst>(inst_);
          bitField1_ |= 0x00040000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Inst, pb.Object.Inst.Builder, pb.Object.InstOrBuilder> instBuilder_;

      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public java.util.List<pb.Object.Inst> getInstList() {
        if (instBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inst_);
        } else {
          return instBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public int getInstCount() {
        if (instBuilder_ == null) {
          return inst_.size();
        } else {
          return instBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public pb.Object.Inst getInst(int index) {
        if (instBuilder_ == null) {
          return inst_.get(index);
        } else {
          return instBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public Builder setInst(
          int index, pb.Object.Inst value) {
        if (instBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstIsMutable();
          inst_.set(index, value);
          onChanged();
        } else {
          instBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public Builder setInst(
          int index, pb.Object.Inst.Builder builderForValue) {
        if (instBuilder_ == null) {
          ensureInstIsMutable();
          inst_.set(index, builderForValue.build());
          onChanged();
        } else {
          instBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public Builder addInst(pb.Object.Inst value) {
        if (instBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstIsMutable();
          inst_.add(value);
          onChanged();
        } else {
          instBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public Builder addInst(
          int index, pb.Object.Inst value) {
        if (instBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstIsMutable();
          inst_.add(index, value);
          onChanged();
        } else {
          instBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public Builder addInst(
          pb.Object.Inst.Builder builderForValue) {
        if (instBuilder_ == null) {
          ensureInstIsMutable();
          inst_.add(builderForValue.build());
          onChanged();
        } else {
          instBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public Builder addInst(
          int index, pb.Object.Inst.Builder builderForValue) {
        if (instBuilder_ == null) {
          ensureInstIsMutable();
          inst_.add(index, builderForValue.build());
          onChanged();
        } else {
          instBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public Builder addAllInst(
          java.lang.Iterable<? extends pb.Object.Inst> values) {
        if (instBuilder_ == null) {
          ensureInstIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inst_);
          onChanged();
        } else {
          instBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public Builder clearInst() {
        if (instBuilder_ == null) {
          inst_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00040000);
          onChanged();
        } else {
          instBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public Builder removeInst(int index) {
        if (instBuilder_ == null) {
          ensureInstIsMutable();
          inst_.remove(index);
          onChanged();
        } else {
          instBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public pb.Object.Inst.Builder getInstBuilder(
          int index) {
        return getInstFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public pb.Object.InstOrBuilder getInstOrBuilder(
          int index) {
        if (instBuilder_ == null) {
          return inst_.get(index);  } else {
          return instBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public java.util.List<? extends pb.Object.InstOrBuilder> 
           getInstOrBuilderList() {
        if (instBuilder_ != null) {
          return instBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inst_);
        }
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public pb.Object.Inst.Builder addInstBuilder() {
        return getInstFieldBuilder().addBuilder(
            pb.Object.Inst.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public pb.Object.Inst.Builder addInstBuilder(
          int index) {
        return getInstFieldBuilder().addBuilder(
            index, pb.Object.Inst.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Inst inst = 111;</code>
       */
      public java.util.List<pb.Object.Inst.Builder> 
           getInstBuilderList() {
        return getInstFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Object.Inst, pb.Object.Inst.Builder, pb.Object.InstOrBuilder> 
          getInstFieldBuilder() {
        if (instBuilder_ == null) {
          instBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pb.Object.Inst, pb.Object.Inst.Builder, pb.Object.InstOrBuilder>(
                  inst_,
                  ((bitField1_ & 0x00040000) == 0x00040000),
                  getParentForChildren(),
                  isClean());
          inst_ = null;
        }
        return instBuilder_;
      }

      private java.util.List<pb.Config.Application> app_ =
        java.util.Collections.emptyList();
      private void ensureAppIsMutable() {
        if (!((bitField1_ & 0x00080000) == 0x00080000)) {
          app_ = new java.util.ArrayList<pb.Config.Application>(app_);
          bitField1_ |= 0x00080000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Config.Application, pb.Config.Application.Builder, pb.Config.ApplicationOrBuilder> appBuilder_;

      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public java.util.List<pb.Config.Application> getAppList() {
        if (appBuilder_ == null) {
          return java.util.Collections.unmodifiableList(app_);
        } else {
          return appBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public int getAppCount() {
        if (appBuilder_ == null) {
          return app_.size();
        } else {
          return appBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public pb.Config.Application getApp(int index) {
        if (appBuilder_ == null) {
          return app_.get(index);
        } else {
          return appBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public Builder setApp(
          int index, pb.Config.Application value) {
        if (appBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppIsMutable();
          app_.set(index, value);
          onChanged();
        } else {
          appBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public Builder setApp(
          int index, pb.Config.Application.Builder builderForValue) {
        if (appBuilder_ == null) {
          ensureAppIsMutable();
          app_.set(index, builderForValue.build());
          onChanged();
        } else {
          appBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public Builder addApp(pb.Config.Application value) {
        if (appBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppIsMutable();
          app_.add(value);
          onChanged();
        } else {
          appBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public Builder addApp(
          int index, pb.Config.Application value) {
        if (appBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAppIsMutable();
          app_.add(index, value);
          onChanged();
        } else {
          appBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public Builder addApp(
          pb.Config.Application.Builder builderForValue) {
        if (appBuilder_ == null) {
          ensureAppIsMutable();
          app_.add(builderForValue.build());
          onChanged();
        } else {
          appBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public Builder addApp(
          int index, pb.Config.Application.Builder builderForValue) {
        if (appBuilder_ == null) {
          ensureAppIsMutable();
          app_.add(index, builderForValue.build());
          onChanged();
        } else {
          appBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public Builder addAllApp(
          java.lang.Iterable<? extends pb.Config.Application> values) {
        if (appBuilder_ == null) {
          ensureAppIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, app_);
          onChanged();
        } else {
          appBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public Builder clearApp() {
        if (appBuilder_ == null) {
          app_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00080000);
          onChanged();
        } else {
          appBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public Builder removeApp(int index) {
        if (appBuilder_ == null) {
          ensureAppIsMutable();
          app_.remove(index);
          onChanged();
        } else {
          appBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public pb.Config.Application.Builder getAppBuilder(
          int index) {
        return getAppFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public pb.Config.ApplicationOrBuilder getAppOrBuilder(
          int index) {
        if (appBuilder_ == null) {
          return app_.get(index);  } else {
          return appBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public java.util.List<? extends pb.Config.ApplicationOrBuilder> 
           getAppOrBuilderList() {
        if (appBuilder_ != null) {
          return appBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(app_);
        }
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public pb.Config.Application.Builder addAppBuilder() {
        return getAppFieldBuilder().addBuilder(
            pb.Config.Application.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public pb.Config.Application.Builder addAppBuilder(
          int index) {
        return getAppFieldBuilder().addBuilder(
            index, pb.Config.Application.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Application app = 120;</code>
       *
       * <pre>
       * the app field is  included as a reply to
       * a MT_LIST_APPLICATIONS and
       * MT_RETRIEVE_APPLICATION message
       * </pre>
       */
      public java.util.List<pb.Config.Application.Builder> 
           getAppBuilderList() {
        return getAppFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Config.Application, pb.Config.Application.Builder, pb.Config.ApplicationOrBuilder> 
          getAppFieldBuilder() {
        if (appBuilder_ == null) {
          appBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pb.Config.Application, pb.Config.Application.Builder, pb.Config.ApplicationOrBuilder>(
                  app_,
                  ((bitField1_ & 0x00080000) == 0x00080000),
                  getParentForChildren(),
                  isClean());
          app_ = null;
        }
        return appBuilder_;
      }

      private java.util.List<pb.Config.Launcher> launcher_ =
        java.util.Collections.emptyList();
      private void ensureLauncherIsMutable() {
        if (!((bitField1_ & 0x00100000) == 0x00100000)) {
          launcher_ = new java.util.ArrayList<pb.Config.Launcher>(launcher_);
          bitField1_ |= 0x00100000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Config.Launcher, pb.Config.Launcher.Builder, pb.Config.LauncherOrBuilder> launcherBuilder_;

      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public java.util.List<pb.Config.Launcher> getLauncherList() {
        if (launcherBuilder_ == null) {
          return java.util.Collections.unmodifiableList(launcher_);
        } else {
          return launcherBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public int getLauncherCount() {
        if (launcherBuilder_ == null) {
          return launcher_.size();
        } else {
          return launcherBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public pb.Config.Launcher getLauncher(int index) {
        if (launcherBuilder_ == null) {
          return launcher_.get(index);
        } else {
          return launcherBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public Builder setLauncher(
          int index, pb.Config.Launcher value) {
        if (launcherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLauncherIsMutable();
          launcher_.set(index, value);
          onChanged();
        } else {
          launcherBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public Builder setLauncher(
          int index, pb.Config.Launcher.Builder builderForValue) {
        if (launcherBuilder_ == null) {
          ensureLauncherIsMutable();
          launcher_.set(index, builderForValue.build());
          onChanged();
        } else {
          launcherBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public Builder addLauncher(pb.Config.Launcher value) {
        if (launcherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLauncherIsMutable();
          launcher_.add(value);
          onChanged();
        } else {
          launcherBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public Builder addLauncher(
          int index, pb.Config.Launcher value) {
        if (launcherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLauncherIsMutable();
          launcher_.add(index, value);
          onChanged();
        } else {
          launcherBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public Builder addLauncher(
          pb.Config.Launcher.Builder builderForValue) {
        if (launcherBuilder_ == null) {
          ensureLauncherIsMutable();
          launcher_.add(builderForValue.build());
          onChanged();
        } else {
          launcherBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public Builder addLauncher(
          int index, pb.Config.Launcher.Builder builderForValue) {
        if (launcherBuilder_ == null) {
          ensureLauncherIsMutable();
          launcher_.add(index, builderForValue.build());
          onChanged();
        } else {
          launcherBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public Builder addAllLauncher(
          java.lang.Iterable<? extends pb.Config.Launcher> values) {
        if (launcherBuilder_ == null) {
          ensureLauncherIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, launcher_);
          onChanged();
        } else {
          launcherBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public Builder clearLauncher() {
        if (launcherBuilder_ == null) {
          launcher_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00100000);
          onChanged();
        } else {
          launcherBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public Builder removeLauncher(int index) {
        if (launcherBuilder_ == null) {
          ensureLauncherIsMutable();
          launcher_.remove(index);
          onChanged();
        } else {
          launcherBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public pb.Config.Launcher.Builder getLauncherBuilder(
          int index) {
        return getLauncherFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public pb.Config.LauncherOrBuilder getLauncherOrBuilder(
          int index) {
        if (launcherBuilder_ == null) {
          return launcher_.get(index);  } else {
          return launcherBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public java.util.List<? extends pb.Config.LauncherOrBuilder> 
           getLauncherOrBuilderList() {
        if (launcherBuilder_ != null) {
          return launcherBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(launcher_);
        }
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public pb.Config.Launcher.Builder addLauncherBuilder() {
        return getLauncherFieldBuilder().addBuilder(
            pb.Config.Launcher.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public pb.Config.Launcher.Builder addLauncherBuilder(
          int index) {
        return getLauncherFieldBuilder().addBuilder(
            index, pb.Config.Launcher.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.Launcher launcher = 130;</code>
       *
       * <pre>
       * the launcher field is reported by
       * a MT_LAUNCHER_FULL_UPDATE
       * or a MT_LAUNCHER_INCREMENTAL_UPDATE message
       * </pre>
       */
      public java.util.List<pb.Config.Launcher.Builder> 
           getLauncherBuilderList() {
        return getLauncherFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pb.Config.Launcher, pb.Config.Launcher.Builder, pb.Config.LauncherOrBuilder> 
          getLauncherFieldBuilder() {
        if (launcherBuilder_ == null) {
          launcherBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pb.Config.Launcher, pb.Config.Launcher.Builder, pb.Config.LauncherOrBuilder>(
                  launcher_,
                  ((bitField1_ & 0x00100000) == 0x00100000),
                  getParentForChildren(),
                  isClean());
          launcher_ = null;
        }
        return launcherBuilder_;
      }

      private int index_ ;
      /**
       * <code>optional int32 index = 131;</code>
       */
      public boolean hasIndex() {
        return ((bitField1_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 index = 131;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>optional int32 index = 131;</code>
       */
      public Builder setIndex(int value) {
        bitField1_ |= 0x00200000;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 index = 131;</code>
       */
      public Builder clearIndex() {
        bitField1_ = (bitField1_ & ~0x00200000);
        index_ = 0;
        onChanged();
        return this;
      }

      private pb.Log.LogMessage logMessage_ = pb.Log.LogMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Log.LogMessage, pb.Log.LogMessage.Builder, pb.Log.LogMessageOrBuilder> logMessageBuilder_;
      /**
       * <code>optional .pb.LogMessage log_message = 87;</code>
       *
       * <pre>
       * infrequent compound messages
       *optional bytes         wou            = 160;  // Arais Wishbone-over-USB
       * </pre>
       */
      public boolean hasLogMessage() {
        return ((bitField1_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .pb.LogMessage log_message = 87;</code>
       *
       * <pre>
       * infrequent compound messages
       *optional bytes         wou            = 160;  // Arais Wishbone-over-USB
       * </pre>
       */
      public pb.Log.LogMessage getLogMessage() {
        if (logMessageBuilder_ == null) {
          return logMessage_;
        } else {
          return logMessageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.LogMessage log_message = 87;</code>
       *
       * <pre>
       * infrequent compound messages
       *optional bytes         wou            = 160;  // Arais Wishbone-over-USB
       * </pre>
       */
      public Builder setLogMessage(pb.Log.LogMessage value) {
        if (logMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          logMessage_ = value;
          onChanged();
        } else {
          logMessageBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .pb.LogMessage log_message = 87;</code>
       *
       * <pre>
       * infrequent compound messages
       *optional bytes         wou            = 160;  // Arais Wishbone-over-USB
       * </pre>
       */
      public Builder setLogMessage(
          pb.Log.LogMessage.Builder builderForValue) {
        if (logMessageBuilder_ == null) {
          logMessage_ = builderForValue.build();
          onChanged();
        } else {
          logMessageBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .pb.LogMessage log_message = 87;</code>
       *
       * <pre>
       * infrequent compound messages
       *optional bytes         wou            = 160;  // Arais Wishbone-over-USB
       * </pre>
       */
      public Builder mergeLogMessage(pb.Log.LogMessage value) {
        if (logMessageBuilder_ == null) {
          if (((bitField1_ & 0x00400000) == 0x00400000) &&
              logMessage_ != pb.Log.LogMessage.getDefaultInstance()) {
            logMessage_ =
              pb.Log.LogMessage.newBuilder(logMessage_).mergeFrom(value).buildPartial();
          } else {
            logMessage_ = value;
          }
          onChanged();
        } else {
          logMessageBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .pb.LogMessage log_message = 87;</code>
       *
       * <pre>
       * infrequent compound messages
       *optional bytes         wou            = 160;  // Arais Wishbone-over-USB
       * </pre>
       */
      public Builder clearLogMessage() {
        if (logMessageBuilder_ == null) {
          logMessage_ = pb.Log.LogMessage.getDefaultInstance();
          onChanged();
        } else {
          logMessageBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00400000);
        return this;
      }
      /**
       * <code>optional .pb.LogMessage log_message = 87;</code>
       *
       * <pre>
       * infrequent compound messages
       *optional bytes         wou            = 160;  // Arais Wishbone-over-USB
       * </pre>
       */
      public pb.Log.LogMessage.Builder getLogMessageBuilder() {
        bitField1_ |= 0x00400000;
        onChanged();
        return getLogMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.LogMessage log_message = 87;</code>
       *
       * <pre>
       * infrequent compound messages
       *optional bytes         wou            = 160;  // Arais Wishbone-over-USB
       * </pre>
       */
      public pb.Log.LogMessageOrBuilder getLogMessageOrBuilder() {
        if (logMessageBuilder_ != null) {
          return logMessageBuilder_.getMessageOrBuilder();
        } else {
          return logMessage_;
        }
      }
      /**
       * <code>optional .pb.LogMessage log_message = 87;</code>
       *
       * <pre>
       * infrequent compound messages
       *optional bytes         wou            = 160;  // Arais Wishbone-over-USB
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Log.LogMessage, pb.Log.LogMessage.Builder, pb.Log.LogMessageOrBuilder> 
          getLogMessageFieldBuilder() {
        if (logMessageBuilder_ == null) {
          logMessageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Log.LogMessage, pb.Log.LogMessage.Builder, pb.Log.LogMessageOrBuilder>(
                  getLogMessage(),
                  getParentForChildren(),
                  isClean());
          logMessage_ = null;
        }
        return logMessageBuilder_;
      }

      private pb.Task.TaskPlanExecute tpexecute_ = pb.Task.TaskPlanExecute.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Task.TaskPlanExecute, pb.Task.TaskPlanExecute.Builder, pb.Task.TaskPlanExecuteOrBuilder> tpexecuteBuilder_;
      /**
       * <code>optional .pb.TaskPlanExecute tpexecute = 200;</code>
       *
       * <pre>
       * taskplan (interpreter command) messages
       * </pre>
       */
      public boolean hasTpexecute() {
        return ((bitField1_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional .pb.TaskPlanExecute tpexecute = 200;</code>
       *
       * <pre>
       * taskplan (interpreter command) messages
       * </pre>
       */
      public pb.Task.TaskPlanExecute getTpexecute() {
        if (tpexecuteBuilder_ == null) {
          return tpexecute_;
        } else {
          return tpexecuteBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.TaskPlanExecute tpexecute = 200;</code>
       *
       * <pre>
       * taskplan (interpreter command) messages
       * </pre>
       */
      public Builder setTpexecute(pb.Task.TaskPlanExecute value) {
        if (tpexecuteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tpexecute_ = value;
          onChanged();
        } else {
          tpexecuteBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanExecute tpexecute = 200;</code>
       *
       * <pre>
       * taskplan (interpreter command) messages
       * </pre>
       */
      public Builder setTpexecute(
          pb.Task.TaskPlanExecute.Builder builderForValue) {
        if (tpexecuteBuilder_ == null) {
          tpexecute_ = builderForValue.build();
          onChanged();
        } else {
          tpexecuteBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanExecute tpexecute = 200;</code>
       *
       * <pre>
       * taskplan (interpreter command) messages
       * </pre>
       */
      public Builder mergeTpexecute(pb.Task.TaskPlanExecute value) {
        if (tpexecuteBuilder_ == null) {
          if (((bitField1_ & 0x00800000) == 0x00800000) &&
              tpexecute_ != pb.Task.TaskPlanExecute.getDefaultInstance()) {
            tpexecute_ =
              pb.Task.TaskPlanExecute.newBuilder(tpexecute_).mergeFrom(value).buildPartial();
          } else {
            tpexecute_ = value;
          }
          onChanged();
        } else {
          tpexecuteBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanExecute tpexecute = 200;</code>
       *
       * <pre>
       * taskplan (interpreter command) messages
       * </pre>
       */
      public Builder clearTpexecute() {
        if (tpexecuteBuilder_ == null) {
          tpexecute_ = pb.Task.TaskPlanExecute.getDefaultInstance();
          onChanged();
        } else {
          tpexecuteBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00800000);
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanExecute tpexecute = 200;</code>
       *
       * <pre>
       * taskplan (interpreter command) messages
       * </pre>
       */
      public pb.Task.TaskPlanExecute.Builder getTpexecuteBuilder() {
        bitField1_ |= 0x00800000;
        onChanged();
        return getTpexecuteFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.TaskPlanExecute tpexecute = 200;</code>
       *
       * <pre>
       * taskplan (interpreter command) messages
       * </pre>
       */
      public pb.Task.TaskPlanExecuteOrBuilder getTpexecuteOrBuilder() {
        if (tpexecuteBuilder_ != null) {
          return tpexecuteBuilder_.getMessageOrBuilder();
        } else {
          return tpexecute_;
        }
      }
      /**
       * <code>optional .pb.TaskPlanExecute tpexecute = 200;</code>
       *
       * <pre>
       * taskplan (interpreter command) messages
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Task.TaskPlanExecute, pb.Task.TaskPlanExecute.Builder, pb.Task.TaskPlanExecuteOrBuilder> 
          getTpexecuteFieldBuilder() {
        if (tpexecuteBuilder_ == null) {
          tpexecuteBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Task.TaskPlanExecute, pb.Task.TaskPlanExecute.Builder, pb.Task.TaskPlanExecuteOrBuilder>(
                  getTpexecute(),
                  getParentForChildren(),
                  isClean());
          tpexecute_ = null;
        }
        return tpexecuteBuilder_;
      }

      private pb.Task.TaskPlanBlockDelete tpblockdelete_ = pb.Task.TaskPlanBlockDelete.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Task.TaskPlanBlockDelete, pb.Task.TaskPlanBlockDelete.Builder, pb.Task.TaskPlanBlockDeleteOrBuilder> tpblockdeleteBuilder_;
      /**
       * <code>optional .pb.TaskPlanBlockDelete tpblockdelete = 201;</code>
       */
      public boolean hasTpblockdelete() {
        return ((bitField1_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .pb.TaskPlanBlockDelete tpblockdelete = 201;</code>
       */
      public pb.Task.TaskPlanBlockDelete getTpblockdelete() {
        if (tpblockdeleteBuilder_ == null) {
          return tpblockdelete_;
        } else {
          return tpblockdeleteBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.TaskPlanBlockDelete tpblockdelete = 201;</code>
       */
      public Builder setTpblockdelete(pb.Task.TaskPlanBlockDelete value) {
        if (tpblockdeleteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tpblockdelete_ = value;
          onChanged();
        } else {
          tpblockdeleteBuilder_.setMessage(value);
        }
        bitField1_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanBlockDelete tpblockdelete = 201;</code>
       */
      public Builder setTpblockdelete(
          pb.Task.TaskPlanBlockDelete.Builder builderForValue) {
        if (tpblockdeleteBuilder_ == null) {
          tpblockdelete_ = builderForValue.build();
          onChanged();
        } else {
          tpblockdeleteBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanBlockDelete tpblockdelete = 201;</code>
       */
      public Builder mergeTpblockdelete(pb.Task.TaskPlanBlockDelete value) {
        if (tpblockdeleteBuilder_ == null) {
          if (((bitField1_ & 0x01000000) == 0x01000000) &&
              tpblockdelete_ != pb.Task.TaskPlanBlockDelete.getDefaultInstance()) {
            tpblockdelete_ =
              pb.Task.TaskPlanBlockDelete.newBuilder(tpblockdelete_).mergeFrom(value).buildPartial();
          } else {
            tpblockdelete_ = value;
          }
          onChanged();
        } else {
          tpblockdeleteBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanBlockDelete tpblockdelete = 201;</code>
       */
      public Builder clearTpblockdelete() {
        if (tpblockdeleteBuilder_ == null) {
          tpblockdelete_ = pb.Task.TaskPlanBlockDelete.getDefaultInstance();
          onChanged();
        } else {
          tpblockdeleteBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x01000000);
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanBlockDelete tpblockdelete = 201;</code>
       */
      public pb.Task.TaskPlanBlockDelete.Builder getTpblockdeleteBuilder() {
        bitField1_ |= 0x01000000;
        onChanged();
        return getTpblockdeleteFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.TaskPlanBlockDelete tpblockdelete = 201;</code>
       */
      public pb.Task.TaskPlanBlockDeleteOrBuilder getTpblockdeleteOrBuilder() {
        if (tpblockdeleteBuilder_ != null) {
          return tpblockdeleteBuilder_.getMessageOrBuilder();
        } else {
          return tpblockdelete_;
        }
      }
      /**
       * <code>optional .pb.TaskPlanBlockDelete tpblockdelete = 201;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Task.TaskPlanBlockDelete, pb.Task.TaskPlanBlockDelete.Builder, pb.Task.TaskPlanBlockDeleteOrBuilder> 
          getTpblockdeleteFieldBuilder() {
        if (tpblockdeleteBuilder_ == null) {
          tpblockdeleteBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Task.TaskPlanBlockDelete, pb.Task.TaskPlanBlockDelete.Builder, pb.Task.TaskPlanBlockDeleteOrBuilder>(
                  getTpblockdelete(),
                  getParentForChildren(),
                  isClean());
          tpblockdelete_ = null;
        }
        return tpblockdeleteBuilder_;
      }

      private pb.Task.TaskPlanOptionalStop tpoptionalstop_ = pb.Task.TaskPlanOptionalStop.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Task.TaskPlanOptionalStop, pb.Task.TaskPlanOptionalStop.Builder, pb.Task.TaskPlanOptionalStopOrBuilder> tpoptionalstopBuilder_;
      /**
       * <code>optional .pb.TaskPlanOptionalStop tpoptionalstop = 202;</code>
       */
      public boolean hasTpoptionalstop() {
        return ((bitField1_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional .pb.TaskPlanOptionalStop tpoptionalstop = 202;</code>
       */
      public pb.Task.TaskPlanOptionalStop getTpoptionalstop() {
        if (tpoptionalstopBuilder_ == null) {
          return tpoptionalstop_;
        } else {
          return tpoptionalstopBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.TaskPlanOptionalStop tpoptionalstop = 202;</code>
       */
      public Builder setTpoptionalstop(pb.Task.TaskPlanOptionalStop value) {
        if (tpoptionalstopBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tpoptionalstop_ = value;
          onChanged();
        } else {
          tpoptionalstopBuilder_.setMessage(value);
        }
        bitField1_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanOptionalStop tpoptionalstop = 202;</code>
       */
      public Builder setTpoptionalstop(
          pb.Task.TaskPlanOptionalStop.Builder builderForValue) {
        if (tpoptionalstopBuilder_ == null) {
          tpoptionalstop_ = builderForValue.build();
          onChanged();
        } else {
          tpoptionalstopBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanOptionalStop tpoptionalstop = 202;</code>
       */
      public Builder mergeTpoptionalstop(pb.Task.TaskPlanOptionalStop value) {
        if (tpoptionalstopBuilder_ == null) {
          if (((bitField1_ & 0x02000000) == 0x02000000) &&
              tpoptionalstop_ != pb.Task.TaskPlanOptionalStop.getDefaultInstance()) {
            tpoptionalstop_ =
              pb.Task.TaskPlanOptionalStop.newBuilder(tpoptionalstop_).mergeFrom(value).buildPartial();
          } else {
            tpoptionalstop_ = value;
          }
          onChanged();
        } else {
          tpoptionalstopBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanOptionalStop tpoptionalstop = 202;</code>
       */
      public Builder clearTpoptionalstop() {
        if (tpoptionalstopBuilder_ == null) {
          tpoptionalstop_ = pb.Task.TaskPlanOptionalStop.getDefaultInstance();
          onChanged();
        } else {
          tpoptionalstopBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x02000000);
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanOptionalStop tpoptionalstop = 202;</code>
       */
      public pb.Task.TaskPlanOptionalStop.Builder getTpoptionalstopBuilder() {
        bitField1_ |= 0x02000000;
        onChanged();
        return getTpoptionalstopFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.TaskPlanOptionalStop tpoptionalstop = 202;</code>
       */
      public pb.Task.TaskPlanOptionalStopOrBuilder getTpoptionalstopOrBuilder() {
        if (tpoptionalstopBuilder_ != null) {
          return tpoptionalstopBuilder_.getMessageOrBuilder();
        } else {
          return tpoptionalstop_;
        }
      }
      /**
       * <code>optional .pb.TaskPlanOptionalStop tpoptionalstop = 202;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Task.TaskPlanOptionalStop, pb.Task.TaskPlanOptionalStop.Builder, pb.Task.TaskPlanOptionalStopOrBuilder> 
          getTpoptionalstopFieldBuilder() {
        if (tpoptionalstopBuilder_ == null) {
          tpoptionalstopBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Task.TaskPlanOptionalStop, pb.Task.TaskPlanOptionalStop.Builder, pb.Task.TaskPlanOptionalStopOrBuilder>(
                  getTpoptionalstop(),
                  getParentForChildren(),
                  isClean());
          tpoptionalstop_ = null;
        }
        return tpoptionalstopBuilder_;
      }

      private pb.Task.TaskPlanOpen tpopen_ = pb.Task.TaskPlanOpen.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Task.TaskPlanOpen, pb.Task.TaskPlanOpen.Builder, pb.Task.TaskPlanOpenOrBuilder> tpopenBuilder_;
      /**
       * <code>optional .pb.TaskPlanOpen tpopen = 203;</code>
       */
      public boolean hasTpopen() {
        return ((bitField1_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .pb.TaskPlanOpen tpopen = 203;</code>
       */
      public pb.Task.TaskPlanOpen getTpopen() {
        if (tpopenBuilder_ == null) {
          return tpopen_;
        } else {
          return tpopenBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.TaskPlanOpen tpopen = 203;</code>
       */
      public Builder setTpopen(pb.Task.TaskPlanOpen value) {
        if (tpopenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tpopen_ = value;
          onChanged();
        } else {
          tpopenBuilder_.setMessage(value);
        }
        bitField1_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanOpen tpopen = 203;</code>
       */
      public Builder setTpopen(
          pb.Task.TaskPlanOpen.Builder builderForValue) {
        if (tpopenBuilder_ == null) {
          tpopen_ = builderForValue.build();
          onChanged();
        } else {
          tpopenBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanOpen tpopen = 203;</code>
       */
      public Builder mergeTpopen(pb.Task.TaskPlanOpen value) {
        if (tpopenBuilder_ == null) {
          if (((bitField1_ & 0x04000000) == 0x04000000) &&
              tpopen_ != pb.Task.TaskPlanOpen.getDefaultInstance()) {
            tpopen_ =
              pb.Task.TaskPlanOpen.newBuilder(tpopen_).mergeFrom(value).buildPartial();
          } else {
            tpopen_ = value;
          }
          onChanged();
        } else {
          tpopenBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanOpen tpopen = 203;</code>
       */
      public Builder clearTpopen() {
        if (tpopenBuilder_ == null) {
          tpopen_ = pb.Task.TaskPlanOpen.getDefaultInstance();
          onChanged();
        } else {
          tpopenBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x04000000);
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanOpen tpopen = 203;</code>
       */
      public pb.Task.TaskPlanOpen.Builder getTpopenBuilder() {
        bitField1_ |= 0x04000000;
        onChanged();
        return getTpopenFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.TaskPlanOpen tpopen = 203;</code>
       */
      public pb.Task.TaskPlanOpenOrBuilder getTpopenOrBuilder() {
        if (tpopenBuilder_ != null) {
          return tpopenBuilder_.getMessageOrBuilder();
        } else {
          return tpopen_;
        }
      }
      /**
       * <code>optional .pb.TaskPlanOpen tpopen = 203;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Task.TaskPlanOpen, pb.Task.TaskPlanOpen.Builder, pb.Task.TaskPlanOpenOrBuilder> 
          getTpopenFieldBuilder() {
        if (tpopenBuilder_ == null) {
          tpopenBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Task.TaskPlanOpen, pb.Task.TaskPlanOpen.Builder, pb.Task.TaskPlanOpenOrBuilder>(
                  getTpopen(),
                  getParentForChildren(),
                  isClean());
          tpopen_ = null;
        }
        return tpopenBuilder_;
      }

      private pb.Task.TaskPlanReply taskplanReply_ = pb.Task.TaskPlanReply.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Task.TaskPlanReply, pb.Task.TaskPlanReply.Builder, pb.Task.TaskPlanReplyOrBuilder> taskplanReplyBuilder_;
      /**
       * <code>optional .pb.TaskPlanReply taskplan_reply = 210;</code>
       *
       * <pre>
       * interpreter reply
       * </pre>
       */
      public boolean hasTaskplanReply() {
        return ((bitField1_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional .pb.TaskPlanReply taskplan_reply = 210;</code>
       *
       * <pre>
       * interpreter reply
       * </pre>
       */
      public pb.Task.TaskPlanReply getTaskplanReply() {
        if (taskplanReplyBuilder_ == null) {
          return taskplanReply_;
        } else {
          return taskplanReplyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.TaskPlanReply taskplan_reply = 210;</code>
       *
       * <pre>
       * interpreter reply
       * </pre>
       */
      public Builder setTaskplanReply(pb.Task.TaskPlanReply value) {
        if (taskplanReplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          taskplanReply_ = value;
          onChanged();
        } else {
          taskplanReplyBuilder_.setMessage(value);
        }
        bitField1_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanReply taskplan_reply = 210;</code>
       *
       * <pre>
       * interpreter reply
       * </pre>
       */
      public Builder setTaskplanReply(
          pb.Task.TaskPlanReply.Builder builderForValue) {
        if (taskplanReplyBuilder_ == null) {
          taskplanReply_ = builderForValue.build();
          onChanged();
        } else {
          taskplanReplyBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanReply taskplan_reply = 210;</code>
       *
       * <pre>
       * interpreter reply
       * </pre>
       */
      public Builder mergeTaskplanReply(pb.Task.TaskPlanReply value) {
        if (taskplanReplyBuilder_ == null) {
          if (((bitField1_ & 0x08000000) == 0x08000000) &&
              taskplanReply_ != pb.Task.TaskPlanReply.getDefaultInstance()) {
            taskplanReply_ =
              pb.Task.TaskPlanReply.newBuilder(taskplanReply_).mergeFrom(value).buildPartial();
          } else {
            taskplanReply_ = value;
          }
          onChanged();
        } else {
          taskplanReplyBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanReply taskplan_reply = 210;</code>
       *
       * <pre>
       * interpreter reply
       * </pre>
       */
      public Builder clearTaskplanReply() {
        if (taskplanReplyBuilder_ == null) {
          taskplanReply_ = pb.Task.TaskPlanReply.getDefaultInstance();
          onChanged();
        } else {
          taskplanReplyBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x08000000);
        return this;
      }
      /**
       * <code>optional .pb.TaskPlanReply taskplan_reply = 210;</code>
       *
       * <pre>
       * interpreter reply
       * </pre>
       */
      public pb.Task.TaskPlanReply.Builder getTaskplanReplyBuilder() {
        bitField1_ |= 0x08000000;
        onChanged();
        return getTaskplanReplyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.TaskPlanReply taskplan_reply = 210;</code>
       *
       * <pre>
       * interpreter reply
       * </pre>
       */
      public pb.Task.TaskPlanReplyOrBuilder getTaskplanReplyOrBuilder() {
        if (taskplanReplyBuilder_ != null) {
          return taskplanReplyBuilder_.getMessageOrBuilder();
        } else {
          return taskplanReply_;
        }
      }
      /**
       * <code>optional .pb.TaskPlanReply taskplan_reply = 210;</code>
       *
       * <pre>
       * interpreter reply
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Task.TaskPlanReply, pb.Task.TaskPlanReply.Builder, pb.Task.TaskPlanReplyOrBuilder> 
          getTaskplanReplyFieldBuilder() {
        if (taskplanReplyBuilder_ == null) {
          taskplanReplyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Task.TaskPlanReply, pb.Task.TaskPlanReply.Builder, pb.Task.TaskPlanReplyOrBuilder>(
                  getTaskplanReply(),
                  getParentForChildren(),
                  isClean());
          taskplanReply_ = null;
        }
        return taskplanReplyBuilder_;
      }

      private pb.Canon.Emc_Traj_Set_G5x trajSetG5X_ = pb.Canon.Emc_Traj_Set_G5x.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_G5x, pb.Canon.Emc_Traj_Set_G5x.Builder, pb.Canon.Emc_Traj_Set_G5xOrBuilder> trajSetG5XBuilder_;
      /**
       * <code>optional .pb.Emc_Traj_Set_G5x traj_set_g5x = 300;</code>
       *
       * <pre>
       * canon messages
       * </pre>
       */
      public boolean hasTrajSetG5X() {
        return ((bitField1_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_G5x traj_set_g5x = 300;</code>
       *
       * <pre>
       * canon messages
       * </pre>
       */
      public pb.Canon.Emc_Traj_Set_G5x getTrajSetG5X() {
        if (trajSetG5XBuilder_ == null) {
          return trajSetG5X_;
        } else {
          return trajSetG5XBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_G5x traj_set_g5x = 300;</code>
       *
       * <pre>
       * canon messages
       * </pre>
       */
      public Builder setTrajSetG5X(pb.Canon.Emc_Traj_Set_G5x value) {
        if (trajSetG5XBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trajSetG5X_ = value;
          onChanged();
        } else {
          trajSetG5XBuilder_.setMessage(value);
        }
        bitField1_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_G5x traj_set_g5x = 300;</code>
       *
       * <pre>
       * canon messages
       * </pre>
       */
      public Builder setTrajSetG5X(
          pb.Canon.Emc_Traj_Set_G5x.Builder builderForValue) {
        if (trajSetG5XBuilder_ == null) {
          trajSetG5X_ = builderForValue.build();
          onChanged();
        } else {
          trajSetG5XBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_G5x traj_set_g5x = 300;</code>
       *
       * <pre>
       * canon messages
       * </pre>
       */
      public Builder mergeTrajSetG5X(pb.Canon.Emc_Traj_Set_G5x value) {
        if (trajSetG5XBuilder_ == null) {
          if (((bitField1_ & 0x10000000) == 0x10000000) &&
              trajSetG5X_ != pb.Canon.Emc_Traj_Set_G5x.getDefaultInstance()) {
            trajSetG5X_ =
              pb.Canon.Emc_Traj_Set_G5x.newBuilder(trajSetG5X_).mergeFrom(value).buildPartial();
          } else {
            trajSetG5X_ = value;
          }
          onChanged();
        } else {
          trajSetG5XBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_G5x traj_set_g5x = 300;</code>
       *
       * <pre>
       * canon messages
       * </pre>
       */
      public Builder clearTrajSetG5X() {
        if (trajSetG5XBuilder_ == null) {
          trajSetG5X_ = pb.Canon.Emc_Traj_Set_G5x.getDefaultInstance();
          onChanged();
        } else {
          trajSetG5XBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x10000000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_G5x traj_set_g5x = 300;</code>
       *
       * <pre>
       * canon messages
       * </pre>
       */
      public pb.Canon.Emc_Traj_Set_G5x.Builder getTrajSetG5XBuilder() {
        bitField1_ |= 0x10000000;
        onChanged();
        return getTrajSetG5XFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_G5x traj_set_g5x = 300;</code>
       *
       * <pre>
       * canon messages
       * </pre>
       */
      public pb.Canon.Emc_Traj_Set_G5xOrBuilder getTrajSetG5XOrBuilder() {
        if (trajSetG5XBuilder_ != null) {
          return trajSetG5XBuilder_.getMessageOrBuilder();
        } else {
          return trajSetG5X_;
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_G5x traj_set_g5x = 300;</code>
       *
       * <pre>
       * canon messages
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_G5x, pb.Canon.Emc_Traj_Set_G5x.Builder, pb.Canon.Emc_Traj_Set_G5xOrBuilder> 
          getTrajSetG5XFieldBuilder() {
        if (trajSetG5XBuilder_ == null) {
          trajSetG5XBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Traj_Set_G5x, pb.Canon.Emc_Traj_Set_G5x.Builder, pb.Canon.Emc_Traj_Set_G5xOrBuilder>(
                  getTrajSetG5X(),
                  getParentForChildren(),
                  isClean());
          trajSetG5X_ = null;
        }
        return trajSetG5XBuilder_;
      }

      private pb.Canon.Emc_Traj_Set_G92 trajSetG92_ = pb.Canon.Emc_Traj_Set_G92.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_G92, pb.Canon.Emc_Traj_Set_G92.Builder, pb.Canon.Emc_Traj_Set_G92OrBuilder> trajSetG92Builder_;
      /**
       * <code>optional .pb.Emc_Traj_Set_G92 traj_set_g92 = 310;</code>
       */
      public boolean hasTrajSetG92() {
        return ((bitField1_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_G92 traj_set_g92 = 310;</code>
       */
      public pb.Canon.Emc_Traj_Set_G92 getTrajSetG92() {
        if (trajSetG92Builder_ == null) {
          return trajSetG92_;
        } else {
          return trajSetG92Builder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_G92 traj_set_g92 = 310;</code>
       */
      public Builder setTrajSetG92(pb.Canon.Emc_Traj_Set_G92 value) {
        if (trajSetG92Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trajSetG92_ = value;
          onChanged();
        } else {
          trajSetG92Builder_.setMessage(value);
        }
        bitField1_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_G92 traj_set_g92 = 310;</code>
       */
      public Builder setTrajSetG92(
          pb.Canon.Emc_Traj_Set_G92.Builder builderForValue) {
        if (trajSetG92Builder_ == null) {
          trajSetG92_ = builderForValue.build();
          onChanged();
        } else {
          trajSetG92Builder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_G92 traj_set_g92 = 310;</code>
       */
      public Builder mergeTrajSetG92(pb.Canon.Emc_Traj_Set_G92 value) {
        if (trajSetG92Builder_ == null) {
          if (((bitField1_ & 0x20000000) == 0x20000000) &&
              trajSetG92_ != pb.Canon.Emc_Traj_Set_G92.getDefaultInstance()) {
            trajSetG92_ =
              pb.Canon.Emc_Traj_Set_G92.newBuilder(trajSetG92_).mergeFrom(value).buildPartial();
          } else {
            trajSetG92_ = value;
          }
          onChanged();
        } else {
          trajSetG92Builder_.mergeFrom(value);
        }
        bitField1_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_G92 traj_set_g92 = 310;</code>
       */
      public Builder clearTrajSetG92() {
        if (trajSetG92Builder_ == null) {
          trajSetG92_ = pb.Canon.Emc_Traj_Set_G92.getDefaultInstance();
          onChanged();
        } else {
          trajSetG92Builder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x20000000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_G92 traj_set_g92 = 310;</code>
       */
      public pb.Canon.Emc_Traj_Set_G92.Builder getTrajSetG92Builder() {
        bitField1_ |= 0x20000000;
        onChanged();
        return getTrajSetG92FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_G92 traj_set_g92 = 310;</code>
       */
      public pb.Canon.Emc_Traj_Set_G92OrBuilder getTrajSetG92OrBuilder() {
        if (trajSetG92Builder_ != null) {
          return trajSetG92Builder_.getMessageOrBuilder();
        } else {
          return trajSetG92_;
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_G92 traj_set_g92 = 310;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_G92, pb.Canon.Emc_Traj_Set_G92.Builder, pb.Canon.Emc_Traj_Set_G92OrBuilder> 
          getTrajSetG92FieldBuilder() {
        if (trajSetG92Builder_ == null) {
          trajSetG92Builder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Traj_Set_G92, pb.Canon.Emc_Traj_Set_G92.Builder, pb.Canon.Emc_Traj_Set_G92OrBuilder>(
                  getTrajSetG92(),
                  getParentForChildren(),
                  isClean());
          trajSetG92_ = null;
        }
        return trajSetG92Builder_;
      }

      private pb.Canon.Emc_Traj_Set_Rotation trajSetRotation_ = pb.Canon.Emc_Traj_Set_Rotation.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_Rotation, pb.Canon.Emc_Traj_Set_Rotation.Builder, pb.Canon.Emc_Traj_Set_RotationOrBuilder> trajSetRotationBuilder_;
      /**
       * <code>optional .pb.Emc_Traj_Set_Rotation traj_set_rotation = 320;</code>
       */
      public boolean hasTrajSetRotation() {
        return ((bitField1_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Rotation traj_set_rotation = 320;</code>
       */
      public pb.Canon.Emc_Traj_Set_Rotation getTrajSetRotation() {
        if (trajSetRotationBuilder_ == null) {
          return trajSetRotation_;
        } else {
          return trajSetRotationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Rotation traj_set_rotation = 320;</code>
       */
      public Builder setTrajSetRotation(pb.Canon.Emc_Traj_Set_Rotation value) {
        if (trajSetRotationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trajSetRotation_ = value;
          onChanged();
        } else {
          trajSetRotationBuilder_.setMessage(value);
        }
        bitField1_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Rotation traj_set_rotation = 320;</code>
       */
      public Builder setTrajSetRotation(
          pb.Canon.Emc_Traj_Set_Rotation.Builder builderForValue) {
        if (trajSetRotationBuilder_ == null) {
          trajSetRotation_ = builderForValue.build();
          onChanged();
        } else {
          trajSetRotationBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Rotation traj_set_rotation = 320;</code>
       */
      public Builder mergeTrajSetRotation(pb.Canon.Emc_Traj_Set_Rotation value) {
        if (trajSetRotationBuilder_ == null) {
          if (((bitField1_ & 0x40000000) == 0x40000000) &&
              trajSetRotation_ != pb.Canon.Emc_Traj_Set_Rotation.getDefaultInstance()) {
            trajSetRotation_ =
              pb.Canon.Emc_Traj_Set_Rotation.newBuilder(trajSetRotation_).mergeFrom(value).buildPartial();
          } else {
            trajSetRotation_ = value;
          }
          onChanged();
        } else {
          trajSetRotationBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Rotation traj_set_rotation = 320;</code>
       */
      public Builder clearTrajSetRotation() {
        if (trajSetRotationBuilder_ == null) {
          trajSetRotation_ = pb.Canon.Emc_Traj_Set_Rotation.getDefaultInstance();
          onChanged();
        } else {
          trajSetRotationBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x40000000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Rotation traj_set_rotation = 320;</code>
       */
      public pb.Canon.Emc_Traj_Set_Rotation.Builder getTrajSetRotationBuilder() {
        bitField1_ |= 0x40000000;
        onChanged();
        return getTrajSetRotationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Rotation traj_set_rotation = 320;</code>
       */
      public pb.Canon.Emc_Traj_Set_RotationOrBuilder getTrajSetRotationOrBuilder() {
        if (trajSetRotationBuilder_ != null) {
          return trajSetRotationBuilder_.getMessageOrBuilder();
        } else {
          return trajSetRotation_;
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Rotation traj_set_rotation = 320;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_Rotation, pb.Canon.Emc_Traj_Set_Rotation.Builder, pb.Canon.Emc_Traj_Set_RotationOrBuilder> 
          getTrajSetRotationFieldBuilder() {
        if (trajSetRotationBuilder_ == null) {
          trajSetRotationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Traj_Set_Rotation, pb.Canon.Emc_Traj_Set_Rotation.Builder, pb.Canon.Emc_Traj_Set_RotationOrBuilder>(
                  getTrajSetRotation(),
                  getParentForChildren(),
                  isClean());
          trajSetRotation_ = null;
        }
        return trajSetRotationBuilder_;
      }

      private pb.Canon.Emc_Traj_Linear_Move trajLinearMove_ = pb.Canon.Emc_Traj_Linear_Move.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Linear_Move, pb.Canon.Emc_Traj_Linear_Move.Builder, pb.Canon.Emc_Traj_Linear_MoveOrBuilder> trajLinearMoveBuilder_;
      /**
       * <code>optional .pb.Emc_Traj_Linear_Move traj_linear_move = 330;</code>
       */
      public boolean hasTrajLinearMove() {
        return ((bitField1_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional .pb.Emc_Traj_Linear_Move traj_linear_move = 330;</code>
       */
      public pb.Canon.Emc_Traj_Linear_Move getTrajLinearMove() {
        if (trajLinearMoveBuilder_ == null) {
          return trajLinearMove_;
        } else {
          return trajLinearMoveBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Linear_Move traj_linear_move = 330;</code>
       */
      public Builder setTrajLinearMove(pb.Canon.Emc_Traj_Linear_Move value) {
        if (trajLinearMoveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trajLinearMove_ = value;
          onChanged();
        } else {
          trajLinearMoveBuilder_.setMessage(value);
        }
        bitField1_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Linear_Move traj_linear_move = 330;</code>
       */
      public Builder setTrajLinearMove(
          pb.Canon.Emc_Traj_Linear_Move.Builder builderForValue) {
        if (trajLinearMoveBuilder_ == null) {
          trajLinearMove_ = builderForValue.build();
          onChanged();
        } else {
          trajLinearMoveBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Linear_Move traj_linear_move = 330;</code>
       */
      public Builder mergeTrajLinearMove(pb.Canon.Emc_Traj_Linear_Move value) {
        if (trajLinearMoveBuilder_ == null) {
          if (((bitField1_ & 0x80000000) == 0x80000000) &&
              trajLinearMove_ != pb.Canon.Emc_Traj_Linear_Move.getDefaultInstance()) {
            trajLinearMove_ =
              pb.Canon.Emc_Traj_Linear_Move.newBuilder(trajLinearMove_).mergeFrom(value).buildPartial();
          } else {
            trajLinearMove_ = value;
          }
          onChanged();
        } else {
          trajLinearMoveBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Linear_Move traj_linear_move = 330;</code>
       */
      public Builder clearTrajLinearMove() {
        if (trajLinearMoveBuilder_ == null) {
          trajLinearMove_ = pb.Canon.Emc_Traj_Linear_Move.getDefaultInstance();
          onChanged();
        } else {
          trajLinearMoveBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x80000000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Linear_Move traj_linear_move = 330;</code>
       */
      public pb.Canon.Emc_Traj_Linear_Move.Builder getTrajLinearMoveBuilder() {
        bitField1_ |= 0x80000000;
        onChanged();
        return getTrajLinearMoveFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Traj_Linear_Move traj_linear_move = 330;</code>
       */
      public pb.Canon.Emc_Traj_Linear_MoveOrBuilder getTrajLinearMoveOrBuilder() {
        if (trajLinearMoveBuilder_ != null) {
          return trajLinearMoveBuilder_.getMessageOrBuilder();
        } else {
          return trajLinearMove_;
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Linear_Move traj_linear_move = 330;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Linear_Move, pb.Canon.Emc_Traj_Linear_Move.Builder, pb.Canon.Emc_Traj_Linear_MoveOrBuilder> 
          getTrajLinearMoveFieldBuilder() {
        if (trajLinearMoveBuilder_ == null) {
          trajLinearMoveBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Traj_Linear_Move, pb.Canon.Emc_Traj_Linear_Move.Builder, pb.Canon.Emc_Traj_Linear_MoveOrBuilder>(
                  getTrajLinearMove(),
                  getParentForChildren(),
                  isClean());
          trajLinearMove_ = null;
        }
        return trajLinearMoveBuilder_;
      }

      private pb.Canon.Emc_Traj_Probe trajProbe_ = pb.Canon.Emc_Traj_Probe.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Probe, pb.Canon.Emc_Traj_Probe.Builder, pb.Canon.Emc_Traj_ProbeOrBuilder> trajProbeBuilder_;
      /**
       * <code>optional .pb.Emc_Traj_Probe traj_probe = 340;</code>
       */
      public boolean hasTrajProbe() {
        return ((bitField2_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .pb.Emc_Traj_Probe traj_probe = 340;</code>
       */
      public pb.Canon.Emc_Traj_Probe getTrajProbe() {
        if (trajProbeBuilder_ == null) {
          return trajProbe_;
        } else {
          return trajProbeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Probe traj_probe = 340;</code>
       */
      public Builder setTrajProbe(pb.Canon.Emc_Traj_Probe value) {
        if (trajProbeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trajProbe_ = value;
          onChanged();
        } else {
          trajProbeBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Probe traj_probe = 340;</code>
       */
      public Builder setTrajProbe(
          pb.Canon.Emc_Traj_Probe.Builder builderForValue) {
        if (trajProbeBuilder_ == null) {
          trajProbe_ = builderForValue.build();
          onChanged();
        } else {
          trajProbeBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Probe traj_probe = 340;</code>
       */
      public Builder mergeTrajProbe(pb.Canon.Emc_Traj_Probe value) {
        if (trajProbeBuilder_ == null) {
          if (((bitField2_ & 0x00000001) == 0x00000001) &&
              trajProbe_ != pb.Canon.Emc_Traj_Probe.getDefaultInstance()) {
            trajProbe_ =
              pb.Canon.Emc_Traj_Probe.newBuilder(trajProbe_).mergeFrom(value).buildPartial();
          } else {
            trajProbe_ = value;
          }
          onChanged();
        } else {
          trajProbeBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Probe traj_probe = 340;</code>
       */
      public Builder clearTrajProbe() {
        if (trajProbeBuilder_ == null) {
          trajProbe_ = pb.Canon.Emc_Traj_Probe.getDefaultInstance();
          onChanged();
        } else {
          trajProbeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Probe traj_probe = 340;</code>
       */
      public pb.Canon.Emc_Traj_Probe.Builder getTrajProbeBuilder() {
        bitField2_ |= 0x00000001;
        onChanged();
        return getTrajProbeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Traj_Probe traj_probe = 340;</code>
       */
      public pb.Canon.Emc_Traj_ProbeOrBuilder getTrajProbeOrBuilder() {
        if (trajProbeBuilder_ != null) {
          return trajProbeBuilder_.getMessageOrBuilder();
        } else {
          return trajProbe_;
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Probe traj_probe = 340;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Probe, pb.Canon.Emc_Traj_Probe.Builder, pb.Canon.Emc_Traj_ProbeOrBuilder> 
          getTrajProbeFieldBuilder() {
        if (trajProbeBuilder_ == null) {
          trajProbeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Traj_Probe, pb.Canon.Emc_Traj_Probe.Builder, pb.Canon.Emc_Traj_ProbeOrBuilder>(
                  getTrajProbe(),
                  getParentForChildren(),
                  isClean());
          trajProbe_ = null;
        }
        return trajProbeBuilder_;
      }

      private pb.Canon.Emc_Traj_Circular_Move trajCircularMove_ = pb.Canon.Emc_Traj_Circular_Move.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Circular_Move, pb.Canon.Emc_Traj_Circular_Move.Builder, pb.Canon.Emc_Traj_Circular_MoveOrBuilder> trajCircularMoveBuilder_;
      /**
       * <code>optional .pb.Emc_Traj_Circular_Move traj_circular_move = 350;</code>
       */
      public boolean hasTrajCircularMove() {
        return ((bitField2_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .pb.Emc_Traj_Circular_Move traj_circular_move = 350;</code>
       */
      public pb.Canon.Emc_Traj_Circular_Move getTrajCircularMove() {
        if (trajCircularMoveBuilder_ == null) {
          return trajCircularMove_;
        } else {
          return trajCircularMoveBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Circular_Move traj_circular_move = 350;</code>
       */
      public Builder setTrajCircularMove(pb.Canon.Emc_Traj_Circular_Move value) {
        if (trajCircularMoveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trajCircularMove_ = value;
          onChanged();
        } else {
          trajCircularMoveBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Circular_Move traj_circular_move = 350;</code>
       */
      public Builder setTrajCircularMove(
          pb.Canon.Emc_Traj_Circular_Move.Builder builderForValue) {
        if (trajCircularMoveBuilder_ == null) {
          trajCircularMove_ = builderForValue.build();
          onChanged();
        } else {
          trajCircularMoveBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Circular_Move traj_circular_move = 350;</code>
       */
      public Builder mergeTrajCircularMove(pb.Canon.Emc_Traj_Circular_Move value) {
        if (trajCircularMoveBuilder_ == null) {
          if (((bitField2_ & 0x00000002) == 0x00000002) &&
              trajCircularMove_ != pb.Canon.Emc_Traj_Circular_Move.getDefaultInstance()) {
            trajCircularMove_ =
              pb.Canon.Emc_Traj_Circular_Move.newBuilder(trajCircularMove_).mergeFrom(value).buildPartial();
          } else {
            trajCircularMove_ = value;
          }
          onChanged();
        } else {
          trajCircularMoveBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Circular_Move traj_circular_move = 350;</code>
       */
      public Builder clearTrajCircularMove() {
        if (trajCircularMoveBuilder_ == null) {
          trajCircularMove_ = pb.Canon.Emc_Traj_Circular_Move.getDefaultInstance();
          onChanged();
        } else {
          trajCircularMoveBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Circular_Move traj_circular_move = 350;</code>
       */
      public pb.Canon.Emc_Traj_Circular_Move.Builder getTrajCircularMoveBuilder() {
        bitField2_ |= 0x00000002;
        onChanged();
        return getTrajCircularMoveFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Traj_Circular_Move traj_circular_move = 350;</code>
       */
      public pb.Canon.Emc_Traj_Circular_MoveOrBuilder getTrajCircularMoveOrBuilder() {
        if (trajCircularMoveBuilder_ != null) {
          return trajCircularMoveBuilder_.getMessageOrBuilder();
        } else {
          return trajCircularMove_;
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Circular_Move traj_circular_move = 350;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Circular_Move, pb.Canon.Emc_Traj_Circular_Move.Builder, pb.Canon.Emc_Traj_Circular_MoveOrBuilder> 
          getTrajCircularMoveFieldBuilder() {
        if (trajCircularMoveBuilder_ == null) {
          trajCircularMoveBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Traj_Circular_Move, pb.Canon.Emc_Traj_Circular_Move.Builder, pb.Canon.Emc_Traj_Circular_MoveOrBuilder>(
                  getTrajCircularMove(),
                  getParentForChildren(),
                  isClean());
          trajCircularMove_ = null;
        }
        return trajCircularMoveBuilder_;
      }

      private pb.Canon.Emc_Traj_Rigid_Tap trajRigidTap_ = pb.Canon.Emc_Traj_Rigid_Tap.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Rigid_Tap, pb.Canon.Emc_Traj_Rigid_Tap.Builder, pb.Canon.Emc_Traj_Rigid_TapOrBuilder> trajRigidTapBuilder_;
      /**
       * <code>optional .pb.Emc_Traj_Rigid_Tap traj_rigid_tap = 360;</code>
       */
      public boolean hasTrajRigidTap() {
        return ((bitField2_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .pb.Emc_Traj_Rigid_Tap traj_rigid_tap = 360;</code>
       */
      public pb.Canon.Emc_Traj_Rigid_Tap getTrajRigidTap() {
        if (trajRigidTapBuilder_ == null) {
          return trajRigidTap_;
        } else {
          return trajRigidTapBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Rigid_Tap traj_rigid_tap = 360;</code>
       */
      public Builder setTrajRigidTap(pb.Canon.Emc_Traj_Rigid_Tap value) {
        if (trajRigidTapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trajRigidTap_ = value;
          onChanged();
        } else {
          trajRigidTapBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Rigid_Tap traj_rigid_tap = 360;</code>
       */
      public Builder setTrajRigidTap(
          pb.Canon.Emc_Traj_Rigid_Tap.Builder builderForValue) {
        if (trajRigidTapBuilder_ == null) {
          trajRigidTap_ = builderForValue.build();
          onChanged();
        } else {
          trajRigidTapBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Rigid_Tap traj_rigid_tap = 360;</code>
       */
      public Builder mergeTrajRigidTap(pb.Canon.Emc_Traj_Rigid_Tap value) {
        if (trajRigidTapBuilder_ == null) {
          if (((bitField2_ & 0x00000004) == 0x00000004) &&
              trajRigidTap_ != pb.Canon.Emc_Traj_Rigid_Tap.getDefaultInstance()) {
            trajRigidTap_ =
              pb.Canon.Emc_Traj_Rigid_Tap.newBuilder(trajRigidTap_).mergeFrom(value).buildPartial();
          } else {
            trajRigidTap_ = value;
          }
          onChanged();
        } else {
          trajRigidTapBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Rigid_Tap traj_rigid_tap = 360;</code>
       */
      public Builder clearTrajRigidTap() {
        if (trajRigidTapBuilder_ == null) {
          trajRigidTap_ = pb.Canon.Emc_Traj_Rigid_Tap.getDefaultInstance();
          onChanged();
        } else {
          trajRigidTapBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Rigid_Tap traj_rigid_tap = 360;</code>
       */
      public pb.Canon.Emc_Traj_Rigid_Tap.Builder getTrajRigidTapBuilder() {
        bitField2_ |= 0x00000004;
        onChanged();
        return getTrajRigidTapFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Traj_Rigid_Tap traj_rigid_tap = 360;</code>
       */
      public pb.Canon.Emc_Traj_Rigid_TapOrBuilder getTrajRigidTapOrBuilder() {
        if (trajRigidTapBuilder_ != null) {
          return trajRigidTapBuilder_.getMessageOrBuilder();
        } else {
          return trajRigidTap_;
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Rigid_Tap traj_rigid_tap = 360;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Rigid_Tap, pb.Canon.Emc_Traj_Rigid_Tap.Builder, pb.Canon.Emc_Traj_Rigid_TapOrBuilder> 
          getTrajRigidTapFieldBuilder() {
        if (trajRigidTapBuilder_ == null) {
          trajRigidTapBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Traj_Rigid_Tap, pb.Canon.Emc_Traj_Rigid_Tap.Builder, pb.Canon.Emc_Traj_Rigid_TapOrBuilder>(
                  getTrajRigidTap(),
                  getParentForChildren(),
                  isClean());
          trajRigidTap_ = null;
        }
        return trajRigidTapBuilder_;
      }

      private pb.Canon.Emc_Traj_Set_Term_Cond trajSetTermCond_ = pb.Canon.Emc_Traj_Set_Term_Cond.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_Term_Cond, pb.Canon.Emc_Traj_Set_Term_Cond.Builder, pb.Canon.Emc_Traj_Set_Term_CondOrBuilder> trajSetTermCondBuilder_;
      /**
       * <code>optional .pb.Emc_Traj_Set_Term_Cond traj_set_term_cond = 370;</code>
       */
      public boolean hasTrajSetTermCond() {
        return ((bitField2_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Term_Cond traj_set_term_cond = 370;</code>
       */
      public pb.Canon.Emc_Traj_Set_Term_Cond getTrajSetTermCond() {
        if (trajSetTermCondBuilder_ == null) {
          return trajSetTermCond_;
        } else {
          return trajSetTermCondBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Term_Cond traj_set_term_cond = 370;</code>
       */
      public Builder setTrajSetTermCond(pb.Canon.Emc_Traj_Set_Term_Cond value) {
        if (trajSetTermCondBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trajSetTermCond_ = value;
          onChanged();
        } else {
          trajSetTermCondBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Term_Cond traj_set_term_cond = 370;</code>
       */
      public Builder setTrajSetTermCond(
          pb.Canon.Emc_Traj_Set_Term_Cond.Builder builderForValue) {
        if (trajSetTermCondBuilder_ == null) {
          trajSetTermCond_ = builderForValue.build();
          onChanged();
        } else {
          trajSetTermCondBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Term_Cond traj_set_term_cond = 370;</code>
       */
      public Builder mergeTrajSetTermCond(pb.Canon.Emc_Traj_Set_Term_Cond value) {
        if (trajSetTermCondBuilder_ == null) {
          if (((bitField2_ & 0x00000008) == 0x00000008) &&
              trajSetTermCond_ != pb.Canon.Emc_Traj_Set_Term_Cond.getDefaultInstance()) {
            trajSetTermCond_ =
              pb.Canon.Emc_Traj_Set_Term_Cond.newBuilder(trajSetTermCond_).mergeFrom(value).buildPartial();
          } else {
            trajSetTermCond_ = value;
          }
          onChanged();
        } else {
          trajSetTermCondBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Term_Cond traj_set_term_cond = 370;</code>
       */
      public Builder clearTrajSetTermCond() {
        if (trajSetTermCondBuilder_ == null) {
          trajSetTermCond_ = pb.Canon.Emc_Traj_Set_Term_Cond.getDefaultInstance();
          onChanged();
        } else {
          trajSetTermCondBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Term_Cond traj_set_term_cond = 370;</code>
       */
      public pb.Canon.Emc_Traj_Set_Term_Cond.Builder getTrajSetTermCondBuilder() {
        bitField2_ |= 0x00000008;
        onChanged();
        return getTrajSetTermCondFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Term_Cond traj_set_term_cond = 370;</code>
       */
      public pb.Canon.Emc_Traj_Set_Term_CondOrBuilder getTrajSetTermCondOrBuilder() {
        if (trajSetTermCondBuilder_ != null) {
          return trajSetTermCondBuilder_.getMessageOrBuilder();
        } else {
          return trajSetTermCond_;
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Term_Cond traj_set_term_cond = 370;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_Term_Cond, pb.Canon.Emc_Traj_Set_Term_Cond.Builder, pb.Canon.Emc_Traj_Set_Term_CondOrBuilder> 
          getTrajSetTermCondFieldBuilder() {
        if (trajSetTermCondBuilder_ == null) {
          trajSetTermCondBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Traj_Set_Term_Cond, pb.Canon.Emc_Traj_Set_Term_Cond.Builder, pb.Canon.Emc_Traj_Set_Term_CondOrBuilder>(
                  getTrajSetTermCond(),
                  getParentForChildren(),
                  isClean());
          trajSetTermCond_ = null;
        }
        return trajSetTermCondBuilder_;
      }

      private pb.Canon.Emc_Traj_Set_Spindlesync trajSetSpindlesync_ = pb.Canon.Emc_Traj_Set_Spindlesync.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_Spindlesync, pb.Canon.Emc_Traj_Set_Spindlesync.Builder, pb.Canon.Emc_Traj_Set_SpindlesyncOrBuilder> trajSetSpindlesyncBuilder_;
      /**
       * <code>optional .pb.Emc_Traj_Set_Spindlesync traj_set_spindlesync = 380;</code>
       */
      public boolean hasTrajSetSpindlesync() {
        return ((bitField2_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Spindlesync traj_set_spindlesync = 380;</code>
       */
      public pb.Canon.Emc_Traj_Set_Spindlesync getTrajSetSpindlesync() {
        if (trajSetSpindlesyncBuilder_ == null) {
          return trajSetSpindlesync_;
        } else {
          return trajSetSpindlesyncBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Spindlesync traj_set_spindlesync = 380;</code>
       */
      public Builder setTrajSetSpindlesync(pb.Canon.Emc_Traj_Set_Spindlesync value) {
        if (trajSetSpindlesyncBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trajSetSpindlesync_ = value;
          onChanged();
        } else {
          trajSetSpindlesyncBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Spindlesync traj_set_spindlesync = 380;</code>
       */
      public Builder setTrajSetSpindlesync(
          pb.Canon.Emc_Traj_Set_Spindlesync.Builder builderForValue) {
        if (trajSetSpindlesyncBuilder_ == null) {
          trajSetSpindlesync_ = builderForValue.build();
          onChanged();
        } else {
          trajSetSpindlesyncBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Spindlesync traj_set_spindlesync = 380;</code>
       */
      public Builder mergeTrajSetSpindlesync(pb.Canon.Emc_Traj_Set_Spindlesync value) {
        if (trajSetSpindlesyncBuilder_ == null) {
          if (((bitField2_ & 0x00000010) == 0x00000010) &&
              trajSetSpindlesync_ != pb.Canon.Emc_Traj_Set_Spindlesync.getDefaultInstance()) {
            trajSetSpindlesync_ =
              pb.Canon.Emc_Traj_Set_Spindlesync.newBuilder(trajSetSpindlesync_).mergeFrom(value).buildPartial();
          } else {
            trajSetSpindlesync_ = value;
          }
          onChanged();
        } else {
          trajSetSpindlesyncBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Spindlesync traj_set_spindlesync = 380;</code>
       */
      public Builder clearTrajSetSpindlesync() {
        if (trajSetSpindlesyncBuilder_ == null) {
          trajSetSpindlesync_ = pb.Canon.Emc_Traj_Set_Spindlesync.getDefaultInstance();
          onChanged();
        } else {
          trajSetSpindlesyncBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Spindlesync traj_set_spindlesync = 380;</code>
       */
      public pb.Canon.Emc_Traj_Set_Spindlesync.Builder getTrajSetSpindlesyncBuilder() {
        bitField2_ |= 0x00000010;
        onChanged();
        return getTrajSetSpindlesyncFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Spindlesync traj_set_spindlesync = 380;</code>
       */
      public pb.Canon.Emc_Traj_Set_SpindlesyncOrBuilder getTrajSetSpindlesyncOrBuilder() {
        if (trajSetSpindlesyncBuilder_ != null) {
          return trajSetSpindlesyncBuilder_.getMessageOrBuilder();
        } else {
          return trajSetSpindlesync_;
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Spindlesync traj_set_spindlesync = 380;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_Spindlesync, pb.Canon.Emc_Traj_Set_Spindlesync.Builder, pb.Canon.Emc_Traj_Set_SpindlesyncOrBuilder> 
          getTrajSetSpindlesyncFieldBuilder() {
        if (trajSetSpindlesyncBuilder_ == null) {
          trajSetSpindlesyncBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Traj_Set_Spindlesync, pb.Canon.Emc_Traj_Set_Spindlesync.Builder, pb.Canon.Emc_Traj_Set_SpindlesyncOrBuilder>(
                  getTrajSetSpindlesync(),
                  getParentForChildren(),
                  isClean());
          trajSetSpindlesync_ = null;
        }
        return trajSetSpindlesyncBuilder_;
      }

      private pb.Canon.Emc_Traj_Delay trajDelay_ = pb.Canon.Emc_Traj_Delay.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Delay, pb.Canon.Emc_Traj_Delay.Builder, pb.Canon.Emc_Traj_DelayOrBuilder> trajDelayBuilder_;
      /**
       * <code>optional .pb.Emc_Traj_Delay traj_delay = 390;</code>
       */
      public boolean hasTrajDelay() {
        return ((bitField2_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .pb.Emc_Traj_Delay traj_delay = 390;</code>
       */
      public pb.Canon.Emc_Traj_Delay getTrajDelay() {
        if (trajDelayBuilder_ == null) {
          return trajDelay_;
        } else {
          return trajDelayBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Delay traj_delay = 390;</code>
       */
      public Builder setTrajDelay(pb.Canon.Emc_Traj_Delay value) {
        if (trajDelayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trajDelay_ = value;
          onChanged();
        } else {
          trajDelayBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Delay traj_delay = 390;</code>
       */
      public Builder setTrajDelay(
          pb.Canon.Emc_Traj_Delay.Builder builderForValue) {
        if (trajDelayBuilder_ == null) {
          trajDelay_ = builderForValue.build();
          onChanged();
        } else {
          trajDelayBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Delay traj_delay = 390;</code>
       */
      public Builder mergeTrajDelay(pb.Canon.Emc_Traj_Delay value) {
        if (trajDelayBuilder_ == null) {
          if (((bitField2_ & 0x00000020) == 0x00000020) &&
              trajDelay_ != pb.Canon.Emc_Traj_Delay.getDefaultInstance()) {
            trajDelay_ =
              pb.Canon.Emc_Traj_Delay.newBuilder(trajDelay_).mergeFrom(value).buildPartial();
          } else {
            trajDelay_ = value;
          }
          onChanged();
        } else {
          trajDelayBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Delay traj_delay = 390;</code>
       */
      public Builder clearTrajDelay() {
        if (trajDelayBuilder_ == null) {
          trajDelay_ = pb.Canon.Emc_Traj_Delay.getDefaultInstance();
          onChanged();
        } else {
          trajDelayBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Delay traj_delay = 390;</code>
       */
      public pb.Canon.Emc_Traj_Delay.Builder getTrajDelayBuilder() {
        bitField2_ |= 0x00000020;
        onChanged();
        return getTrajDelayFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Traj_Delay traj_delay = 390;</code>
       */
      public pb.Canon.Emc_Traj_DelayOrBuilder getTrajDelayOrBuilder() {
        if (trajDelayBuilder_ != null) {
          return trajDelayBuilder_.getMessageOrBuilder();
        } else {
          return trajDelay_;
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Delay traj_delay = 390;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Delay, pb.Canon.Emc_Traj_Delay.Builder, pb.Canon.Emc_Traj_DelayOrBuilder> 
          getTrajDelayFieldBuilder() {
        if (trajDelayBuilder_ == null) {
          trajDelayBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Traj_Delay, pb.Canon.Emc_Traj_Delay.Builder, pb.Canon.Emc_Traj_DelayOrBuilder>(
                  getTrajDelay(),
                  getParentForChildren(),
                  isClean());
          trajDelay_ = null;
        }
        return trajDelayBuilder_;
      }

      private pb.Canon.Emc_Spindle_On spindleOn_ = pb.Canon.Emc_Spindle_On.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Spindle_On, pb.Canon.Emc_Spindle_On.Builder, pb.Canon.Emc_Spindle_OnOrBuilder> spindleOnBuilder_;
      /**
       * <code>optional .pb.Emc_Spindle_On spindle_on = 400;</code>
       */
      public boolean hasSpindleOn() {
        return ((bitField2_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .pb.Emc_Spindle_On spindle_on = 400;</code>
       */
      public pb.Canon.Emc_Spindle_On getSpindleOn() {
        if (spindleOnBuilder_ == null) {
          return spindleOn_;
        } else {
          return spindleOnBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Spindle_On spindle_on = 400;</code>
       */
      public Builder setSpindleOn(pb.Canon.Emc_Spindle_On value) {
        if (spindleOnBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spindleOn_ = value;
          onChanged();
        } else {
          spindleOnBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Spindle_On spindle_on = 400;</code>
       */
      public Builder setSpindleOn(
          pb.Canon.Emc_Spindle_On.Builder builderForValue) {
        if (spindleOnBuilder_ == null) {
          spindleOn_ = builderForValue.build();
          onChanged();
        } else {
          spindleOnBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Spindle_On spindle_on = 400;</code>
       */
      public Builder mergeSpindleOn(pb.Canon.Emc_Spindle_On value) {
        if (spindleOnBuilder_ == null) {
          if (((bitField2_ & 0x00000040) == 0x00000040) &&
              spindleOn_ != pb.Canon.Emc_Spindle_On.getDefaultInstance()) {
            spindleOn_ =
              pb.Canon.Emc_Spindle_On.newBuilder(spindleOn_).mergeFrom(value).buildPartial();
          } else {
            spindleOn_ = value;
          }
          onChanged();
        } else {
          spindleOnBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Spindle_On spindle_on = 400;</code>
       */
      public Builder clearSpindleOn() {
        if (spindleOnBuilder_ == null) {
          spindleOn_ = pb.Canon.Emc_Spindle_On.getDefaultInstance();
          onChanged();
        } else {
          spindleOnBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Spindle_On spindle_on = 400;</code>
       */
      public pb.Canon.Emc_Spindle_On.Builder getSpindleOnBuilder() {
        bitField2_ |= 0x00000040;
        onChanged();
        return getSpindleOnFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Spindle_On spindle_on = 400;</code>
       */
      public pb.Canon.Emc_Spindle_OnOrBuilder getSpindleOnOrBuilder() {
        if (spindleOnBuilder_ != null) {
          return spindleOnBuilder_.getMessageOrBuilder();
        } else {
          return spindleOn_;
        }
      }
      /**
       * <code>optional .pb.Emc_Spindle_On spindle_on = 400;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Spindle_On, pb.Canon.Emc_Spindle_On.Builder, pb.Canon.Emc_Spindle_OnOrBuilder> 
          getSpindleOnFieldBuilder() {
        if (spindleOnBuilder_ == null) {
          spindleOnBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Spindle_On, pb.Canon.Emc_Spindle_On.Builder, pb.Canon.Emc_Spindle_OnOrBuilder>(
                  getSpindleOn(),
                  getParentForChildren(),
                  isClean());
          spindleOn_ = null;
        }
        return spindleOnBuilder_;
      }

      private pb.Canon.Emc_Spindle_Speed spindleSpeed_ = pb.Canon.Emc_Spindle_Speed.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Spindle_Speed, pb.Canon.Emc_Spindle_Speed.Builder, pb.Canon.Emc_Spindle_SpeedOrBuilder> spindleSpeedBuilder_;
      /**
       * <code>optional .pb.Emc_Spindle_Speed spindle_speed = 410;</code>
       */
      public boolean hasSpindleSpeed() {
        return ((bitField2_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .pb.Emc_Spindle_Speed spindle_speed = 410;</code>
       */
      public pb.Canon.Emc_Spindle_Speed getSpindleSpeed() {
        if (spindleSpeedBuilder_ == null) {
          return spindleSpeed_;
        } else {
          return spindleSpeedBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Spindle_Speed spindle_speed = 410;</code>
       */
      public Builder setSpindleSpeed(pb.Canon.Emc_Spindle_Speed value) {
        if (spindleSpeedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spindleSpeed_ = value;
          onChanged();
        } else {
          spindleSpeedBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Spindle_Speed spindle_speed = 410;</code>
       */
      public Builder setSpindleSpeed(
          pb.Canon.Emc_Spindle_Speed.Builder builderForValue) {
        if (spindleSpeedBuilder_ == null) {
          spindleSpeed_ = builderForValue.build();
          onChanged();
        } else {
          spindleSpeedBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Spindle_Speed spindle_speed = 410;</code>
       */
      public Builder mergeSpindleSpeed(pb.Canon.Emc_Spindle_Speed value) {
        if (spindleSpeedBuilder_ == null) {
          if (((bitField2_ & 0x00000080) == 0x00000080) &&
              spindleSpeed_ != pb.Canon.Emc_Spindle_Speed.getDefaultInstance()) {
            spindleSpeed_ =
              pb.Canon.Emc_Spindle_Speed.newBuilder(spindleSpeed_).mergeFrom(value).buildPartial();
          } else {
            spindleSpeed_ = value;
          }
          onChanged();
        } else {
          spindleSpeedBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Spindle_Speed spindle_speed = 410;</code>
       */
      public Builder clearSpindleSpeed() {
        if (spindleSpeedBuilder_ == null) {
          spindleSpeed_ = pb.Canon.Emc_Spindle_Speed.getDefaultInstance();
          onChanged();
        } else {
          spindleSpeedBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Spindle_Speed spindle_speed = 410;</code>
       */
      public pb.Canon.Emc_Spindle_Speed.Builder getSpindleSpeedBuilder() {
        bitField2_ |= 0x00000080;
        onChanged();
        return getSpindleSpeedFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Spindle_Speed spindle_speed = 410;</code>
       */
      public pb.Canon.Emc_Spindle_SpeedOrBuilder getSpindleSpeedOrBuilder() {
        if (spindleSpeedBuilder_ != null) {
          return spindleSpeedBuilder_.getMessageOrBuilder();
        } else {
          return spindleSpeed_;
        }
      }
      /**
       * <code>optional .pb.Emc_Spindle_Speed spindle_speed = 410;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Spindle_Speed, pb.Canon.Emc_Spindle_Speed.Builder, pb.Canon.Emc_Spindle_SpeedOrBuilder> 
          getSpindleSpeedFieldBuilder() {
        if (spindleSpeedBuilder_ == null) {
          spindleSpeedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Spindle_Speed, pb.Canon.Emc_Spindle_Speed.Builder, pb.Canon.Emc_Spindle_SpeedOrBuilder>(
                  getSpindleSpeed(),
                  getParentForChildren(),
                  isClean());
          spindleSpeed_ = null;
        }
        return spindleSpeedBuilder_;
      }

      private pb.Canon.Emc_Spindle_Orient spindleOrient_ = pb.Canon.Emc_Spindle_Orient.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Spindle_Orient, pb.Canon.Emc_Spindle_Orient.Builder, pb.Canon.Emc_Spindle_OrientOrBuilder> spindleOrientBuilder_;
      /**
       * <code>optional .pb.Emc_Spindle_Orient spindle_orient = 420;</code>
       */
      public boolean hasSpindleOrient() {
        return ((bitField2_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .pb.Emc_Spindle_Orient spindle_orient = 420;</code>
       */
      public pb.Canon.Emc_Spindle_Orient getSpindleOrient() {
        if (spindleOrientBuilder_ == null) {
          return spindleOrient_;
        } else {
          return spindleOrientBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Spindle_Orient spindle_orient = 420;</code>
       */
      public Builder setSpindleOrient(pb.Canon.Emc_Spindle_Orient value) {
        if (spindleOrientBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spindleOrient_ = value;
          onChanged();
        } else {
          spindleOrientBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Spindle_Orient spindle_orient = 420;</code>
       */
      public Builder setSpindleOrient(
          pb.Canon.Emc_Spindle_Orient.Builder builderForValue) {
        if (spindleOrientBuilder_ == null) {
          spindleOrient_ = builderForValue.build();
          onChanged();
        } else {
          spindleOrientBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Spindle_Orient spindle_orient = 420;</code>
       */
      public Builder mergeSpindleOrient(pb.Canon.Emc_Spindle_Orient value) {
        if (spindleOrientBuilder_ == null) {
          if (((bitField2_ & 0x00000100) == 0x00000100) &&
              spindleOrient_ != pb.Canon.Emc_Spindle_Orient.getDefaultInstance()) {
            spindleOrient_ =
              pb.Canon.Emc_Spindle_Orient.newBuilder(spindleOrient_).mergeFrom(value).buildPartial();
          } else {
            spindleOrient_ = value;
          }
          onChanged();
        } else {
          spindleOrientBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Spindle_Orient spindle_orient = 420;</code>
       */
      public Builder clearSpindleOrient() {
        if (spindleOrientBuilder_ == null) {
          spindleOrient_ = pb.Canon.Emc_Spindle_Orient.getDefaultInstance();
          onChanged();
        } else {
          spindleOrientBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Spindle_Orient spindle_orient = 420;</code>
       */
      public pb.Canon.Emc_Spindle_Orient.Builder getSpindleOrientBuilder() {
        bitField2_ |= 0x00000100;
        onChanged();
        return getSpindleOrientFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Spindle_Orient spindle_orient = 420;</code>
       */
      public pb.Canon.Emc_Spindle_OrientOrBuilder getSpindleOrientOrBuilder() {
        if (spindleOrientBuilder_ != null) {
          return spindleOrientBuilder_.getMessageOrBuilder();
        } else {
          return spindleOrient_;
        }
      }
      /**
       * <code>optional .pb.Emc_Spindle_Orient spindle_orient = 420;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Spindle_Orient, pb.Canon.Emc_Spindle_Orient.Builder, pb.Canon.Emc_Spindle_OrientOrBuilder> 
          getSpindleOrientFieldBuilder() {
        if (spindleOrientBuilder_ == null) {
          spindleOrientBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Spindle_Orient, pb.Canon.Emc_Spindle_Orient.Builder, pb.Canon.Emc_Spindle_OrientOrBuilder>(
                  getSpindleOrient(),
                  getParentForChildren(),
                  isClean());
          spindleOrient_ = null;
        }
        return spindleOrientBuilder_;
      }

      private pb.Canon.Emc_Spindle_Wait_Orient_Complete spindleWaitOrientComplete_ = pb.Canon.Emc_Spindle_Wait_Orient_Complete.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Spindle_Wait_Orient_Complete, pb.Canon.Emc_Spindle_Wait_Orient_Complete.Builder, pb.Canon.Emc_Spindle_Wait_Orient_CompleteOrBuilder> spindleWaitOrientCompleteBuilder_;
      /**
       * <code>optional .pb.Emc_Spindle_Wait_Orient_Complete spindle_wait_orient_complete = 430;</code>
       */
      public boolean hasSpindleWaitOrientComplete() {
        return ((bitField2_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .pb.Emc_Spindle_Wait_Orient_Complete spindle_wait_orient_complete = 430;</code>
       */
      public pb.Canon.Emc_Spindle_Wait_Orient_Complete getSpindleWaitOrientComplete() {
        if (spindleWaitOrientCompleteBuilder_ == null) {
          return spindleWaitOrientComplete_;
        } else {
          return spindleWaitOrientCompleteBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Spindle_Wait_Orient_Complete spindle_wait_orient_complete = 430;</code>
       */
      public Builder setSpindleWaitOrientComplete(pb.Canon.Emc_Spindle_Wait_Orient_Complete value) {
        if (spindleWaitOrientCompleteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spindleWaitOrientComplete_ = value;
          onChanged();
        } else {
          spindleWaitOrientCompleteBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Spindle_Wait_Orient_Complete spindle_wait_orient_complete = 430;</code>
       */
      public Builder setSpindleWaitOrientComplete(
          pb.Canon.Emc_Spindle_Wait_Orient_Complete.Builder builderForValue) {
        if (spindleWaitOrientCompleteBuilder_ == null) {
          spindleWaitOrientComplete_ = builderForValue.build();
          onChanged();
        } else {
          spindleWaitOrientCompleteBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Spindle_Wait_Orient_Complete spindle_wait_orient_complete = 430;</code>
       */
      public Builder mergeSpindleWaitOrientComplete(pb.Canon.Emc_Spindle_Wait_Orient_Complete value) {
        if (spindleWaitOrientCompleteBuilder_ == null) {
          if (((bitField2_ & 0x00000200) == 0x00000200) &&
              spindleWaitOrientComplete_ != pb.Canon.Emc_Spindle_Wait_Orient_Complete.getDefaultInstance()) {
            spindleWaitOrientComplete_ =
              pb.Canon.Emc_Spindle_Wait_Orient_Complete.newBuilder(spindleWaitOrientComplete_).mergeFrom(value).buildPartial();
          } else {
            spindleWaitOrientComplete_ = value;
          }
          onChanged();
        } else {
          spindleWaitOrientCompleteBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Spindle_Wait_Orient_Complete spindle_wait_orient_complete = 430;</code>
       */
      public Builder clearSpindleWaitOrientComplete() {
        if (spindleWaitOrientCompleteBuilder_ == null) {
          spindleWaitOrientComplete_ = pb.Canon.Emc_Spindle_Wait_Orient_Complete.getDefaultInstance();
          onChanged();
        } else {
          spindleWaitOrientCompleteBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Spindle_Wait_Orient_Complete spindle_wait_orient_complete = 430;</code>
       */
      public pb.Canon.Emc_Spindle_Wait_Orient_Complete.Builder getSpindleWaitOrientCompleteBuilder() {
        bitField2_ |= 0x00000200;
        onChanged();
        return getSpindleWaitOrientCompleteFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Spindle_Wait_Orient_Complete spindle_wait_orient_complete = 430;</code>
       */
      public pb.Canon.Emc_Spindle_Wait_Orient_CompleteOrBuilder getSpindleWaitOrientCompleteOrBuilder() {
        if (spindleWaitOrientCompleteBuilder_ != null) {
          return spindleWaitOrientCompleteBuilder_.getMessageOrBuilder();
        } else {
          return spindleWaitOrientComplete_;
        }
      }
      /**
       * <code>optional .pb.Emc_Spindle_Wait_Orient_Complete spindle_wait_orient_complete = 430;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Spindle_Wait_Orient_Complete, pb.Canon.Emc_Spindle_Wait_Orient_Complete.Builder, pb.Canon.Emc_Spindle_Wait_Orient_CompleteOrBuilder> 
          getSpindleWaitOrientCompleteFieldBuilder() {
        if (spindleWaitOrientCompleteBuilder_ == null) {
          spindleWaitOrientCompleteBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Spindle_Wait_Orient_Complete, pb.Canon.Emc_Spindle_Wait_Orient_Complete.Builder, pb.Canon.Emc_Spindle_Wait_Orient_CompleteOrBuilder>(
                  getSpindleWaitOrientComplete(),
                  getParentForChildren(),
                  isClean());
          spindleWaitOrientComplete_ = null;
        }
        return spindleWaitOrientCompleteBuilder_;
      }

      private pb.Canon.Emc_Tool_Set_Offset toolSetOffet_ = pb.Canon.Emc_Tool_Set_Offset.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Tool_Set_Offset, pb.Canon.Emc_Tool_Set_Offset.Builder, pb.Canon.Emc_Tool_Set_OffsetOrBuilder> toolSetOffetBuilder_;
      /**
       * <code>optional .pb.Emc_Tool_Set_Offset tool_set_offet = 440;</code>
       */
      public boolean hasToolSetOffet() {
        return ((bitField2_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .pb.Emc_Tool_Set_Offset tool_set_offet = 440;</code>
       */
      public pb.Canon.Emc_Tool_Set_Offset getToolSetOffet() {
        if (toolSetOffetBuilder_ == null) {
          return toolSetOffet_;
        } else {
          return toolSetOffetBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Tool_Set_Offset tool_set_offet = 440;</code>
       */
      public Builder setToolSetOffet(pb.Canon.Emc_Tool_Set_Offset value) {
        if (toolSetOffetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toolSetOffet_ = value;
          onChanged();
        } else {
          toolSetOffetBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Tool_Set_Offset tool_set_offet = 440;</code>
       */
      public Builder setToolSetOffet(
          pb.Canon.Emc_Tool_Set_Offset.Builder builderForValue) {
        if (toolSetOffetBuilder_ == null) {
          toolSetOffet_ = builderForValue.build();
          onChanged();
        } else {
          toolSetOffetBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Tool_Set_Offset tool_set_offet = 440;</code>
       */
      public Builder mergeToolSetOffet(pb.Canon.Emc_Tool_Set_Offset value) {
        if (toolSetOffetBuilder_ == null) {
          if (((bitField2_ & 0x00000400) == 0x00000400) &&
              toolSetOffet_ != pb.Canon.Emc_Tool_Set_Offset.getDefaultInstance()) {
            toolSetOffet_ =
              pb.Canon.Emc_Tool_Set_Offset.newBuilder(toolSetOffet_).mergeFrom(value).buildPartial();
          } else {
            toolSetOffet_ = value;
          }
          onChanged();
        } else {
          toolSetOffetBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Tool_Set_Offset tool_set_offet = 440;</code>
       */
      public Builder clearToolSetOffet() {
        if (toolSetOffetBuilder_ == null) {
          toolSetOffet_ = pb.Canon.Emc_Tool_Set_Offset.getDefaultInstance();
          onChanged();
        } else {
          toolSetOffetBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Tool_Set_Offset tool_set_offet = 440;</code>
       */
      public pb.Canon.Emc_Tool_Set_Offset.Builder getToolSetOffetBuilder() {
        bitField2_ |= 0x00000400;
        onChanged();
        return getToolSetOffetFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Tool_Set_Offset tool_set_offet = 440;</code>
       */
      public pb.Canon.Emc_Tool_Set_OffsetOrBuilder getToolSetOffetOrBuilder() {
        if (toolSetOffetBuilder_ != null) {
          return toolSetOffetBuilder_.getMessageOrBuilder();
        } else {
          return toolSetOffet_;
        }
      }
      /**
       * <code>optional .pb.Emc_Tool_Set_Offset tool_set_offet = 440;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Tool_Set_Offset, pb.Canon.Emc_Tool_Set_Offset.Builder, pb.Canon.Emc_Tool_Set_OffsetOrBuilder> 
          getToolSetOffetFieldBuilder() {
        if (toolSetOffetBuilder_ == null) {
          toolSetOffetBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Tool_Set_Offset, pb.Canon.Emc_Tool_Set_Offset.Builder, pb.Canon.Emc_Tool_Set_OffsetOrBuilder>(
                  getToolSetOffet(),
                  getParentForChildren(),
                  isClean());
          toolSetOffet_ = null;
        }
        return toolSetOffetBuilder_;
      }

      private pb.Canon.Emc_Traj_Set_Offset trajSetOffset_ = pb.Canon.Emc_Traj_Set_Offset.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_Offset, pb.Canon.Emc_Traj_Set_Offset.Builder, pb.Canon.Emc_Traj_Set_OffsetOrBuilder> trajSetOffsetBuilder_;
      /**
       * <code>optional .pb.Emc_Traj_Set_Offset traj_set_offset = 450;</code>
       */
      public boolean hasTrajSetOffset() {
        return ((bitField2_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Offset traj_set_offset = 450;</code>
       */
      public pb.Canon.Emc_Traj_Set_Offset getTrajSetOffset() {
        if (trajSetOffsetBuilder_ == null) {
          return trajSetOffset_;
        } else {
          return trajSetOffsetBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Offset traj_set_offset = 450;</code>
       */
      public Builder setTrajSetOffset(pb.Canon.Emc_Traj_Set_Offset value) {
        if (trajSetOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trajSetOffset_ = value;
          onChanged();
        } else {
          trajSetOffsetBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Offset traj_set_offset = 450;</code>
       */
      public Builder setTrajSetOffset(
          pb.Canon.Emc_Traj_Set_Offset.Builder builderForValue) {
        if (trajSetOffsetBuilder_ == null) {
          trajSetOffset_ = builderForValue.build();
          onChanged();
        } else {
          trajSetOffsetBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Offset traj_set_offset = 450;</code>
       */
      public Builder mergeTrajSetOffset(pb.Canon.Emc_Traj_Set_Offset value) {
        if (trajSetOffsetBuilder_ == null) {
          if (((bitField2_ & 0x00000800) == 0x00000800) &&
              trajSetOffset_ != pb.Canon.Emc_Traj_Set_Offset.getDefaultInstance()) {
            trajSetOffset_ =
              pb.Canon.Emc_Traj_Set_Offset.newBuilder(trajSetOffset_).mergeFrom(value).buildPartial();
          } else {
            trajSetOffset_ = value;
          }
          onChanged();
        } else {
          trajSetOffsetBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Offset traj_set_offset = 450;</code>
       */
      public Builder clearTrajSetOffset() {
        if (trajSetOffsetBuilder_ == null) {
          trajSetOffset_ = pb.Canon.Emc_Traj_Set_Offset.getDefaultInstance();
          onChanged();
        } else {
          trajSetOffsetBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Offset traj_set_offset = 450;</code>
       */
      public pb.Canon.Emc_Traj_Set_Offset.Builder getTrajSetOffsetBuilder() {
        bitField2_ |= 0x00000800;
        onChanged();
        return getTrajSetOffsetFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Offset traj_set_offset = 450;</code>
       */
      public pb.Canon.Emc_Traj_Set_OffsetOrBuilder getTrajSetOffsetOrBuilder() {
        if (trajSetOffsetBuilder_ != null) {
          return trajSetOffsetBuilder_.getMessageOrBuilder();
        } else {
          return trajSetOffset_;
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Offset traj_set_offset = 450;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_Offset, pb.Canon.Emc_Traj_Set_Offset.Builder, pb.Canon.Emc_Traj_Set_OffsetOrBuilder> 
          getTrajSetOffsetFieldBuilder() {
        if (trajSetOffsetBuilder_ == null) {
          trajSetOffsetBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Traj_Set_Offset, pb.Canon.Emc_Traj_Set_Offset.Builder, pb.Canon.Emc_Traj_Set_OffsetOrBuilder>(
                  getTrajSetOffset(),
                  getParentForChildren(),
                  isClean());
          trajSetOffset_ = null;
        }
        return trajSetOffsetBuilder_;
      }

      private pb.Canon.Emc_Tool_Prepare toolPrepare_ = pb.Canon.Emc_Tool_Prepare.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Tool_Prepare, pb.Canon.Emc_Tool_Prepare.Builder, pb.Canon.Emc_Tool_PrepareOrBuilder> toolPrepareBuilder_;
      /**
       * <code>optional .pb.Emc_Tool_Prepare tool_prepare = 460;</code>
       */
      public boolean hasToolPrepare() {
        return ((bitField2_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .pb.Emc_Tool_Prepare tool_prepare = 460;</code>
       */
      public pb.Canon.Emc_Tool_Prepare getToolPrepare() {
        if (toolPrepareBuilder_ == null) {
          return toolPrepare_;
        } else {
          return toolPrepareBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Tool_Prepare tool_prepare = 460;</code>
       */
      public Builder setToolPrepare(pb.Canon.Emc_Tool_Prepare value) {
        if (toolPrepareBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toolPrepare_ = value;
          onChanged();
        } else {
          toolPrepareBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Tool_Prepare tool_prepare = 460;</code>
       */
      public Builder setToolPrepare(
          pb.Canon.Emc_Tool_Prepare.Builder builderForValue) {
        if (toolPrepareBuilder_ == null) {
          toolPrepare_ = builderForValue.build();
          onChanged();
        } else {
          toolPrepareBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Tool_Prepare tool_prepare = 460;</code>
       */
      public Builder mergeToolPrepare(pb.Canon.Emc_Tool_Prepare value) {
        if (toolPrepareBuilder_ == null) {
          if (((bitField2_ & 0x00001000) == 0x00001000) &&
              toolPrepare_ != pb.Canon.Emc_Tool_Prepare.getDefaultInstance()) {
            toolPrepare_ =
              pb.Canon.Emc_Tool_Prepare.newBuilder(toolPrepare_).mergeFrom(value).buildPartial();
          } else {
            toolPrepare_ = value;
          }
          onChanged();
        } else {
          toolPrepareBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Tool_Prepare tool_prepare = 460;</code>
       */
      public Builder clearToolPrepare() {
        if (toolPrepareBuilder_ == null) {
          toolPrepare_ = pb.Canon.Emc_Tool_Prepare.getDefaultInstance();
          onChanged();
        } else {
          toolPrepareBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Tool_Prepare tool_prepare = 460;</code>
       */
      public pb.Canon.Emc_Tool_Prepare.Builder getToolPrepareBuilder() {
        bitField2_ |= 0x00001000;
        onChanged();
        return getToolPrepareFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Tool_Prepare tool_prepare = 460;</code>
       */
      public pb.Canon.Emc_Tool_PrepareOrBuilder getToolPrepareOrBuilder() {
        if (toolPrepareBuilder_ != null) {
          return toolPrepareBuilder_.getMessageOrBuilder();
        } else {
          return toolPrepare_;
        }
      }
      /**
       * <code>optional .pb.Emc_Tool_Prepare tool_prepare = 460;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Tool_Prepare, pb.Canon.Emc_Tool_Prepare.Builder, pb.Canon.Emc_Tool_PrepareOrBuilder> 
          getToolPrepareFieldBuilder() {
        if (toolPrepareBuilder_ == null) {
          toolPrepareBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Tool_Prepare, pb.Canon.Emc_Tool_Prepare.Builder, pb.Canon.Emc_Tool_PrepareOrBuilder>(
                  getToolPrepare(),
                  getParentForChildren(),
                  isClean());
          toolPrepare_ = null;
        }
        return toolPrepareBuilder_;
      }

      private pb.Canon.Emc_Tool_Set_Number toolSetNumber_ = pb.Canon.Emc_Tool_Set_Number.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Tool_Set_Number, pb.Canon.Emc_Tool_Set_Number.Builder, pb.Canon.Emc_Tool_Set_NumberOrBuilder> toolSetNumberBuilder_;
      /**
       * <code>optional .pb.Emc_Tool_Set_Number tool_set_number = 470;</code>
       */
      public boolean hasToolSetNumber() {
        return ((bitField2_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .pb.Emc_Tool_Set_Number tool_set_number = 470;</code>
       */
      public pb.Canon.Emc_Tool_Set_Number getToolSetNumber() {
        if (toolSetNumberBuilder_ == null) {
          return toolSetNumber_;
        } else {
          return toolSetNumberBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Tool_Set_Number tool_set_number = 470;</code>
       */
      public Builder setToolSetNumber(pb.Canon.Emc_Tool_Set_Number value) {
        if (toolSetNumberBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toolSetNumber_ = value;
          onChanged();
        } else {
          toolSetNumberBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Tool_Set_Number tool_set_number = 470;</code>
       */
      public Builder setToolSetNumber(
          pb.Canon.Emc_Tool_Set_Number.Builder builderForValue) {
        if (toolSetNumberBuilder_ == null) {
          toolSetNumber_ = builderForValue.build();
          onChanged();
        } else {
          toolSetNumberBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Tool_Set_Number tool_set_number = 470;</code>
       */
      public Builder mergeToolSetNumber(pb.Canon.Emc_Tool_Set_Number value) {
        if (toolSetNumberBuilder_ == null) {
          if (((bitField2_ & 0x00002000) == 0x00002000) &&
              toolSetNumber_ != pb.Canon.Emc_Tool_Set_Number.getDefaultInstance()) {
            toolSetNumber_ =
              pb.Canon.Emc_Tool_Set_Number.newBuilder(toolSetNumber_).mergeFrom(value).buildPartial();
          } else {
            toolSetNumber_ = value;
          }
          onChanged();
        } else {
          toolSetNumberBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Tool_Set_Number tool_set_number = 470;</code>
       */
      public Builder clearToolSetNumber() {
        if (toolSetNumberBuilder_ == null) {
          toolSetNumber_ = pb.Canon.Emc_Tool_Set_Number.getDefaultInstance();
          onChanged();
        } else {
          toolSetNumberBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Tool_Set_Number tool_set_number = 470;</code>
       */
      public pb.Canon.Emc_Tool_Set_Number.Builder getToolSetNumberBuilder() {
        bitField2_ |= 0x00002000;
        onChanged();
        return getToolSetNumberFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Tool_Set_Number tool_set_number = 470;</code>
       */
      public pb.Canon.Emc_Tool_Set_NumberOrBuilder getToolSetNumberOrBuilder() {
        if (toolSetNumberBuilder_ != null) {
          return toolSetNumberBuilder_.getMessageOrBuilder();
        } else {
          return toolSetNumber_;
        }
      }
      /**
       * <code>optional .pb.Emc_Tool_Set_Number tool_set_number = 470;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Tool_Set_Number, pb.Canon.Emc_Tool_Set_Number.Builder, pb.Canon.Emc_Tool_Set_NumberOrBuilder> 
          getToolSetNumberFieldBuilder() {
        if (toolSetNumberBuilder_ == null) {
          toolSetNumberBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Tool_Set_Number, pb.Canon.Emc_Tool_Set_Number.Builder, pb.Canon.Emc_Tool_Set_NumberOrBuilder>(
                  getToolSetNumber(),
                  getParentForChildren(),
                  isClean());
          toolSetNumber_ = null;
        }
        return toolSetNumberBuilder_;
      }

      private pb.Canon.Emc_Traj_Set_Fo_Enable trajSetFoEnable_ = pb.Canon.Emc_Traj_Set_Fo_Enable.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_Fo_Enable, pb.Canon.Emc_Traj_Set_Fo_Enable.Builder, pb.Canon.Emc_Traj_Set_Fo_EnableOrBuilder> trajSetFoEnableBuilder_;
      /**
       * <code>optional .pb.Emc_Traj_Set_Fo_Enable traj_set_fo_enable = 480;</code>
       */
      public boolean hasTrajSetFoEnable() {
        return ((bitField2_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Fo_Enable traj_set_fo_enable = 480;</code>
       */
      public pb.Canon.Emc_Traj_Set_Fo_Enable getTrajSetFoEnable() {
        if (trajSetFoEnableBuilder_ == null) {
          return trajSetFoEnable_;
        } else {
          return trajSetFoEnableBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Fo_Enable traj_set_fo_enable = 480;</code>
       */
      public Builder setTrajSetFoEnable(pb.Canon.Emc_Traj_Set_Fo_Enable value) {
        if (trajSetFoEnableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trajSetFoEnable_ = value;
          onChanged();
        } else {
          trajSetFoEnableBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Fo_Enable traj_set_fo_enable = 480;</code>
       */
      public Builder setTrajSetFoEnable(
          pb.Canon.Emc_Traj_Set_Fo_Enable.Builder builderForValue) {
        if (trajSetFoEnableBuilder_ == null) {
          trajSetFoEnable_ = builderForValue.build();
          onChanged();
        } else {
          trajSetFoEnableBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Fo_Enable traj_set_fo_enable = 480;</code>
       */
      public Builder mergeTrajSetFoEnable(pb.Canon.Emc_Traj_Set_Fo_Enable value) {
        if (trajSetFoEnableBuilder_ == null) {
          if (((bitField2_ & 0x00004000) == 0x00004000) &&
              trajSetFoEnable_ != pb.Canon.Emc_Traj_Set_Fo_Enable.getDefaultInstance()) {
            trajSetFoEnable_ =
              pb.Canon.Emc_Traj_Set_Fo_Enable.newBuilder(trajSetFoEnable_).mergeFrom(value).buildPartial();
          } else {
            trajSetFoEnable_ = value;
          }
          onChanged();
        } else {
          trajSetFoEnableBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Fo_Enable traj_set_fo_enable = 480;</code>
       */
      public Builder clearTrajSetFoEnable() {
        if (trajSetFoEnableBuilder_ == null) {
          trajSetFoEnable_ = pb.Canon.Emc_Traj_Set_Fo_Enable.getDefaultInstance();
          onChanged();
        } else {
          trajSetFoEnableBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Fo_Enable traj_set_fo_enable = 480;</code>
       */
      public pb.Canon.Emc_Traj_Set_Fo_Enable.Builder getTrajSetFoEnableBuilder() {
        bitField2_ |= 0x00004000;
        onChanged();
        return getTrajSetFoEnableFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Fo_Enable traj_set_fo_enable = 480;</code>
       */
      public pb.Canon.Emc_Traj_Set_Fo_EnableOrBuilder getTrajSetFoEnableOrBuilder() {
        if (trajSetFoEnableBuilder_ != null) {
          return trajSetFoEnableBuilder_.getMessageOrBuilder();
        } else {
          return trajSetFoEnable_;
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Fo_Enable traj_set_fo_enable = 480;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_Fo_Enable, pb.Canon.Emc_Traj_Set_Fo_Enable.Builder, pb.Canon.Emc_Traj_Set_Fo_EnableOrBuilder> 
          getTrajSetFoEnableFieldBuilder() {
        if (trajSetFoEnableBuilder_ == null) {
          trajSetFoEnableBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Traj_Set_Fo_Enable, pb.Canon.Emc_Traj_Set_Fo_Enable.Builder, pb.Canon.Emc_Traj_Set_Fo_EnableOrBuilder>(
                  getTrajSetFoEnable(),
                  getParentForChildren(),
                  isClean());
          trajSetFoEnable_ = null;
        }
        return trajSetFoEnableBuilder_;
      }

      private pb.Canon.Emc_Traj_Set_So_Enable trajSetSoEnable_ = pb.Canon.Emc_Traj_Set_So_Enable.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_So_Enable, pb.Canon.Emc_Traj_Set_So_Enable.Builder, pb.Canon.Emc_Traj_Set_So_EnableOrBuilder> trajSetSoEnableBuilder_;
      /**
       * <code>optional .pb.Emc_Traj_Set_So_Enable traj_set_so_enable = 490;</code>
       */
      public boolean hasTrajSetSoEnable() {
        return ((bitField2_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_So_Enable traj_set_so_enable = 490;</code>
       */
      public pb.Canon.Emc_Traj_Set_So_Enable getTrajSetSoEnable() {
        if (trajSetSoEnableBuilder_ == null) {
          return trajSetSoEnable_;
        } else {
          return trajSetSoEnableBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_So_Enable traj_set_so_enable = 490;</code>
       */
      public Builder setTrajSetSoEnable(pb.Canon.Emc_Traj_Set_So_Enable value) {
        if (trajSetSoEnableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trajSetSoEnable_ = value;
          onChanged();
        } else {
          trajSetSoEnableBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_So_Enable traj_set_so_enable = 490;</code>
       */
      public Builder setTrajSetSoEnable(
          pb.Canon.Emc_Traj_Set_So_Enable.Builder builderForValue) {
        if (trajSetSoEnableBuilder_ == null) {
          trajSetSoEnable_ = builderForValue.build();
          onChanged();
        } else {
          trajSetSoEnableBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_So_Enable traj_set_so_enable = 490;</code>
       */
      public Builder mergeTrajSetSoEnable(pb.Canon.Emc_Traj_Set_So_Enable value) {
        if (trajSetSoEnableBuilder_ == null) {
          if (((bitField2_ & 0x00008000) == 0x00008000) &&
              trajSetSoEnable_ != pb.Canon.Emc_Traj_Set_So_Enable.getDefaultInstance()) {
            trajSetSoEnable_ =
              pb.Canon.Emc_Traj_Set_So_Enable.newBuilder(trajSetSoEnable_).mergeFrom(value).buildPartial();
          } else {
            trajSetSoEnable_ = value;
          }
          onChanged();
        } else {
          trajSetSoEnableBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_So_Enable traj_set_so_enable = 490;</code>
       */
      public Builder clearTrajSetSoEnable() {
        if (trajSetSoEnableBuilder_ == null) {
          trajSetSoEnable_ = pb.Canon.Emc_Traj_Set_So_Enable.getDefaultInstance();
          onChanged();
        } else {
          trajSetSoEnableBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_So_Enable traj_set_so_enable = 490;</code>
       */
      public pb.Canon.Emc_Traj_Set_So_Enable.Builder getTrajSetSoEnableBuilder() {
        bitField2_ |= 0x00008000;
        onChanged();
        return getTrajSetSoEnableFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_So_Enable traj_set_so_enable = 490;</code>
       */
      public pb.Canon.Emc_Traj_Set_So_EnableOrBuilder getTrajSetSoEnableOrBuilder() {
        if (trajSetSoEnableBuilder_ != null) {
          return trajSetSoEnableBuilder_.getMessageOrBuilder();
        } else {
          return trajSetSoEnable_;
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_So_Enable traj_set_so_enable = 490;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_So_Enable, pb.Canon.Emc_Traj_Set_So_Enable.Builder, pb.Canon.Emc_Traj_Set_So_EnableOrBuilder> 
          getTrajSetSoEnableFieldBuilder() {
        if (trajSetSoEnableBuilder_ == null) {
          trajSetSoEnableBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Traj_Set_So_Enable, pb.Canon.Emc_Traj_Set_So_Enable.Builder, pb.Canon.Emc_Traj_Set_So_EnableOrBuilder>(
                  getTrajSetSoEnable(),
                  getParentForChildren(),
                  isClean());
          trajSetSoEnable_ = null;
        }
        return trajSetSoEnableBuilder_;
      }

      private pb.Canon.Emc_Traj_Set_Fh_Enable trajSetFhEnable_ = pb.Canon.Emc_Traj_Set_Fh_Enable.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_Fh_Enable, pb.Canon.Emc_Traj_Set_Fh_Enable.Builder, pb.Canon.Emc_Traj_Set_Fh_EnableOrBuilder> trajSetFhEnableBuilder_;
      /**
       * <code>optional .pb.Emc_Traj_Set_Fh_Enable traj_set_fh_enable = 500;</code>
       */
      public boolean hasTrajSetFhEnable() {
        return ((bitField2_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Fh_Enable traj_set_fh_enable = 500;</code>
       */
      public pb.Canon.Emc_Traj_Set_Fh_Enable getTrajSetFhEnable() {
        if (trajSetFhEnableBuilder_ == null) {
          return trajSetFhEnable_;
        } else {
          return trajSetFhEnableBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Fh_Enable traj_set_fh_enable = 500;</code>
       */
      public Builder setTrajSetFhEnable(pb.Canon.Emc_Traj_Set_Fh_Enable value) {
        if (trajSetFhEnableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trajSetFhEnable_ = value;
          onChanged();
        } else {
          trajSetFhEnableBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Fh_Enable traj_set_fh_enable = 500;</code>
       */
      public Builder setTrajSetFhEnable(
          pb.Canon.Emc_Traj_Set_Fh_Enable.Builder builderForValue) {
        if (trajSetFhEnableBuilder_ == null) {
          trajSetFhEnable_ = builderForValue.build();
          onChanged();
        } else {
          trajSetFhEnableBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Fh_Enable traj_set_fh_enable = 500;</code>
       */
      public Builder mergeTrajSetFhEnable(pb.Canon.Emc_Traj_Set_Fh_Enable value) {
        if (trajSetFhEnableBuilder_ == null) {
          if (((bitField2_ & 0x00010000) == 0x00010000) &&
              trajSetFhEnable_ != pb.Canon.Emc_Traj_Set_Fh_Enable.getDefaultInstance()) {
            trajSetFhEnable_ =
              pb.Canon.Emc_Traj_Set_Fh_Enable.newBuilder(trajSetFhEnable_).mergeFrom(value).buildPartial();
          } else {
            trajSetFhEnable_ = value;
          }
          onChanged();
        } else {
          trajSetFhEnableBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Fh_Enable traj_set_fh_enable = 500;</code>
       */
      public Builder clearTrajSetFhEnable() {
        if (trajSetFhEnableBuilder_ == null) {
          trajSetFhEnable_ = pb.Canon.Emc_Traj_Set_Fh_Enable.getDefaultInstance();
          onChanged();
        } else {
          trajSetFhEnableBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Fh_Enable traj_set_fh_enable = 500;</code>
       */
      public pb.Canon.Emc_Traj_Set_Fh_Enable.Builder getTrajSetFhEnableBuilder() {
        bitField2_ |= 0x00010000;
        onChanged();
        return getTrajSetFhEnableFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Fh_Enable traj_set_fh_enable = 500;</code>
       */
      public pb.Canon.Emc_Traj_Set_Fh_EnableOrBuilder getTrajSetFhEnableOrBuilder() {
        if (trajSetFhEnableBuilder_ != null) {
          return trajSetFhEnableBuilder_.getMessageOrBuilder();
        } else {
          return trajSetFhEnable_;
        }
      }
      /**
       * <code>optional .pb.Emc_Traj_Set_Fh_Enable traj_set_fh_enable = 500;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Traj_Set_Fh_Enable, pb.Canon.Emc_Traj_Set_Fh_Enable.Builder, pb.Canon.Emc_Traj_Set_Fh_EnableOrBuilder> 
          getTrajSetFhEnableFieldBuilder() {
        if (trajSetFhEnableBuilder_ == null) {
          trajSetFhEnableBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Traj_Set_Fh_Enable, pb.Canon.Emc_Traj_Set_Fh_Enable.Builder, pb.Canon.Emc_Traj_Set_Fh_EnableOrBuilder>(
                  getTrajSetFhEnable(),
                  getParentForChildren(),
                  isClean());
          trajSetFhEnable_ = null;
        }
        return trajSetFhEnableBuilder_;
      }

      private pb.Canon.Emc_Motion_Adaptive motionAdaptive_ = pb.Canon.Emc_Motion_Adaptive.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Motion_Adaptive, pb.Canon.Emc_Motion_Adaptive.Builder, pb.Canon.Emc_Motion_AdaptiveOrBuilder> motionAdaptiveBuilder_;
      /**
       * <code>optional .pb.Emc_Motion_Adaptive motion_adaptive = 510;</code>
       */
      public boolean hasMotionAdaptive() {
        return ((bitField2_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .pb.Emc_Motion_Adaptive motion_adaptive = 510;</code>
       */
      public pb.Canon.Emc_Motion_Adaptive getMotionAdaptive() {
        if (motionAdaptiveBuilder_ == null) {
          return motionAdaptive_;
        } else {
          return motionAdaptiveBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Motion_Adaptive motion_adaptive = 510;</code>
       */
      public Builder setMotionAdaptive(pb.Canon.Emc_Motion_Adaptive value) {
        if (motionAdaptiveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          motionAdaptive_ = value;
          onChanged();
        } else {
          motionAdaptiveBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Motion_Adaptive motion_adaptive = 510;</code>
       */
      public Builder setMotionAdaptive(
          pb.Canon.Emc_Motion_Adaptive.Builder builderForValue) {
        if (motionAdaptiveBuilder_ == null) {
          motionAdaptive_ = builderForValue.build();
          onChanged();
        } else {
          motionAdaptiveBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Motion_Adaptive motion_adaptive = 510;</code>
       */
      public Builder mergeMotionAdaptive(pb.Canon.Emc_Motion_Adaptive value) {
        if (motionAdaptiveBuilder_ == null) {
          if (((bitField2_ & 0x00020000) == 0x00020000) &&
              motionAdaptive_ != pb.Canon.Emc_Motion_Adaptive.getDefaultInstance()) {
            motionAdaptive_ =
              pb.Canon.Emc_Motion_Adaptive.newBuilder(motionAdaptive_).mergeFrom(value).buildPartial();
          } else {
            motionAdaptive_ = value;
          }
          onChanged();
        } else {
          motionAdaptiveBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Motion_Adaptive motion_adaptive = 510;</code>
       */
      public Builder clearMotionAdaptive() {
        if (motionAdaptiveBuilder_ == null) {
          motionAdaptive_ = pb.Canon.Emc_Motion_Adaptive.getDefaultInstance();
          onChanged();
        } else {
          motionAdaptiveBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Motion_Adaptive motion_adaptive = 510;</code>
       */
      public pb.Canon.Emc_Motion_Adaptive.Builder getMotionAdaptiveBuilder() {
        bitField2_ |= 0x00020000;
        onChanged();
        return getMotionAdaptiveFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Motion_Adaptive motion_adaptive = 510;</code>
       */
      public pb.Canon.Emc_Motion_AdaptiveOrBuilder getMotionAdaptiveOrBuilder() {
        if (motionAdaptiveBuilder_ != null) {
          return motionAdaptiveBuilder_.getMessageOrBuilder();
        } else {
          return motionAdaptive_;
        }
      }
      /**
       * <code>optional .pb.Emc_Motion_Adaptive motion_adaptive = 510;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Motion_Adaptive, pb.Canon.Emc_Motion_Adaptive.Builder, pb.Canon.Emc_Motion_AdaptiveOrBuilder> 
          getMotionAdaptiveFieldBuilder() {
        if (motionAdaptiveBuilder_ == null) {
          motionAdaptiveBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Motion_Adaptive, pb.Canon.Emc_Motion_Adaptive.Builder, pb.Canon.Emc_Motion_AdaptiveOrBuilder>(
                  getMotionAdaptive(),
                  getParentForChildren(),
                  isClean());
          motionAdaptive_ = null;
        }
        return motionAdaptiveBuilder_;
      }

      private pb.Canon.Emc_Operator_Display operatorDisplay_ = pb.Canon.Emc_Operator_Display.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Operator_Display, pb.Canon.Emc_Operator_Display.Builder, pb.Canon.Emc_Operator_DisplayOrBuilder> operatorDisplayBuilder_;
      /**
       * <code>optional .pb.Emc_Operator_Display operator_display = 520;</code>
       */
      public boolean hasOperatorDisplay() {
        return ((bitField2_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .pb.Emc_Operator_Display operator_display = 520;</code>
       */
      public pb.Canon.Emc_Operator_Display getOperatorDisplay() {
        if (operatorDisplayBuilder_ == null) {
          return operatorDisplay_;
        } else {
          return operatorDisplayBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Operator_Display operator_display = 520;</code>
       */
      public Builder setOperatorDisplay(pb.Canon.Emc_Operator_Display value) {
        if (operatorDisplayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          operatorDisplay_ = value;
          onChanged();
        } else {
          operatorDisplayBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Operator_Display operator_display = 520;</code>
       */
      public Builder setOperatorDisplay(
          pb.Canon.Emc_Operator_Display.Builder builderForValue) {
        if (operatorDisplayBuilder_ == null) {
          operatorDisplay_ = builderForValue.build();
          onChanged();
        } else {
          operatorDisplayBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Operator_Display operator_display = 520;</code>
       */
      public Builder mergeOperatorDisplay(pb.Canon.Emc_Operator_Display value) {
        if (operatorDisplayBuilder_ == null) {
          if (((bitField2_ & 0x00040000) == 0x00040000) &&
              operatorDisplay_ != pb.Canon.Emc_Operator_Display.getDefaultInstance()) {
            operatorDisplay_ =
              pb.Canon.Emc_Operator_Display.newBuilder(operatorDisplay_).mergeFrom(value).buildPartial();
          } else {
            operatorDisplay_ = value;
          }
          onChanged();
        } else {
          operatorDisplayBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Operator_Display operator_display = 520;</code>
       */
      public Builder clearOperatorDisplay() {
        if (operatorDisplayBuilder_ == null) {
          operatorDisplay_ = pb.Canon.Emc_Operator_Display.getDefaultInstance();
          onChanged();
        } else {
          operatorDisplayBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Operator_Display operator_display = 520;</code>
       */
      public pb.Canon.Emc_Operator_Display.Builder getOperatorDisplayBuilder() {
        bitField2_ |= 0x00040000;
        onChanged();
        return getOperatorDisplayFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Operator_Display operator_display = 520;</code>
       */
      public pb.Canon.Emc_Operator_DisplayOrBuilder getOperatorDisplayOrBuilder() {
        if (operatorDisplayBuilder_ != null) {
          return operatorDisplayBuilder_.getMessageOrBuilder();
        } else {
          return operatorDisplay_;
        }
      }
      /**
       * <code>optional .pb.Emc_Operator_Display operator_display = 520;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Operator_Display, pb.Canon.Emc_Operator_Display.Builder, pb.Canon.Emc_Operator_DisplayOrBuilder> 
          getOperatorDisplayFieldBuilder() {
        if (operatorDisplayBuilder_ == null) {
          operatorDisplayBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Operator_Display, pb.Canon.Emc_Operator_Display.Builder, pb.Canon.Emc_Operator_DisplayOrBuilder>(
                  getOperatorDisplay(),
                  getParentForChildren(),
                  isClean());
          operatorDisplay_ = null;
        }
        return operatorDisplayBuilder_;
      }

      private pb.Canon.Emc_Operator_Text operatorText_ = pb.Canon.Emc_Operator_Text.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Operator_Text, pb.Canon.Emc_Operator_Text.Builder, pb.Canon.Emc_Operator_TextOrBuilder> operatorTextBuilder_;
      /**
       * <code>optional .pb.Emc_Operator_Text operator_text = 530;</code>
       */
      public boolean hasOperatorText() {
        return ((bitField2_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .pb.Emc_Operator_Text operator_text = 530;</code>
       */
      public pb.Canon.Emc_Operator_Text getOperatorText() {
        if (operatorTextBuilder_ == null) {
          return operatorText_;
        } else {
          return operatorTextBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Operator_Text operator_text = 530;</code>
       */
      public Builder setOperatorText(pb.Canon.Emc_Operator_Text value) {
        if (operatorTextBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          operatorText_ = value;
          onChanged();
        } else {
          operatorTextBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Operator_Text operator_text = 530;</code>
       */
      public Builder setOperatorText(
          pb.Canon.Emc_Operator_Text.Builder builderForValue) {
        if (operatorTextBuilder_ == null) {
          operatorText_ = builderForValue.build();
          onChanged();
        } else {
          operatorTextBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Operator_Text operator_text = 530;</code>
       */
      public Builder mergeOperatorText(pb.Canon.Emc_Operator_Text value) {
        if (operatorTextBuilder_ == null) {
          if (((bitField2_ & 0x00080000) == 0x00080000) &&
              operatorText_ != pb.Canon.Emc_Operator_Text.getDefaultInstance()) {
            operatorText_ =
              pb.Canon.Emc_Operator_Text.newBuilder(operatorText_).mergeFrom(value).buildPartial();
          } else {
            operatorText_ = value;
          }
          onChanged();
        } else {
          operatorTextBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Operator_Text operator_text = 530;</code>
       */
      public Builder clearOperatorText() {
        if (operatorTextBuilder_ == null) {
          operatorText_ = pb.Canon.Emc_Operator_Text.getDefaultInstance();
          onChanged();
        } else {
          operatorTextBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00080000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Operator_Text operator_text = 530;</code>
       */
      public pb.Canon.Emc_Operator_Text.Builder getOperatorTextBuilder() {
        bitField2_ |= 0x00080000;
        onChanged();
        return getOperatorTextFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Operator_Text operator_text = 530;</code>
       */
      public pb.Canon.Emc_Operator_TextOrBuilder getOperatorTextOrBuilder() {
        if (operatorTextBuilder_ != null) {
          return operatorTextBuilder_.getMessageOrBuilder();
        } else {
          return operatorText_;
        }
      }
      /**
       * <code>optional .pb.Emc_Operator_Text operator_text = 530;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Operator_Text, pb.Canon.Emc_Operator_Text.Builder, pb.Canon.Emc_Operator_TextOrBuilder> 
          getOperatorTextFieldBuilder() {
        if (operatorTextBuilder_ == null) {
          operatorTextBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Operator_Text, pb.Canon.Emc_Operator_Text.Builder, pb.Canon.Emc_Operator_TextOrBuilder>(
                  getOperatorText(),
                  getParentForChildren(),
                  isClean());
          operatorText_ = null;
        }
        return operatorTextBuilder_;
      }

      private pb.Canon.Emc_Operator_Error operatorError_ = pb.Canon.Emc_Operator_Error.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Operator_Error, pb.Canon.Emc_Operator_Error.Builder, pb.Canon.Emc_Operator_ErrorOrBuilder> operatorErrorBuilder_;
      /**
       * <code>optional .pb.Emc_Operator_Error operator_error = 540;</code>
       */
      public boolean hasOperatorError() {
        return ((bitField2_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .pb.Emc_Operator_Error operator_error = 540;</code>
       */
      public pb.Canon.Emc_Operator_Error getOperatorError() {
        if (operatorErrorBuilder_ == null) {
          return operatorError_;
        } else {
          return operatorErrorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Operator_Error operator_error = 540;</code>
       */
      public Builder setOperatorError(pb.Canon.Emc_Operator_Error value) {
        if (operatorErrorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          operatorError_ = value;
          onChanged();
        } else {
          operatorErrorBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Operator_Error operator_error = 540;</code>
       */
      public Builder setOperatorError(
          pb.Canon.Emc_Operator_Error.Builder builderForValue) {
        if (operatorErrorBuilder_ == null) {
          operatorError_ = builderForValue.build();
          onChanged();
        } else {
          operatorErrorBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Operator_Error operator_error = 540;</code>
       */
      public Builder mergeOperatorError(pb.Canon.Emc_Operator_Error value) {
        if (operatorErrorBuilder_ == null) {
          if (((bitField2_ & 0x00100000) == 0x00100000) &&
              operatorError_ != pb.Canon.Emc_Operator_Error.getDefaultInstance()) {
            operatorError_ =
              pb.Canon.Emc_Operator_Error.newBuilder(operatorError_).mergeFrom(value).buildPartial();
          } else {
            operatorError_ = value;
          }
          onChanged();
        } else {
          operatorErrorBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Operator_Error operator_error = 540;</code>
       */
      public Builder clearOperatorError() {
        if (operatorErrorBuilder_ == null) {
          operatorError_ = pb.Canon.Emc_Operator_Error.getDefaultInstance();
          onChanged();
        } else {
          operatorErrorBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00100000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Operator_Error operator_error = 540;</code>
       */
      public pb.Canon.Emc_Operator_Error.Builder getOperatorErrorBuilder() {
        bitField2_ |= 0x00100000;
        onChanged();
        return getOperatorErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Operator_Error operator_error = 540;</code>
       */
      public pb.Canon.Emc_Operator_ErrorOrBuilder getOperatorErrorOrBuilder() {
        if (operatorErrorBuilder_ != null) {
          return operatorErrorBuilder_.getMessageOrBuilder();
        } else {
          return operatorError_;
        }
      }
      /**
       * <code>optional .pb.Emc_Operator_Error operator_error = 540;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Operator_Error, pb.Canon.Emc_Operator_Error.Builder, pb.Canon.Emc_Operator_ErrorOrBuilder> 
          getOperatorErrorFieldBuilder() {
        if (operatorErrorBuilder_ == null) {
          operatorErrorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Operator_Error, pb.Canon.Emc_Operator_Error.Builder, pb.Canon.Emc_Operator_ErrorOrBuilder>(
                  getOperatorError(),
                  getParentForChildren(),
                  isClean());
          operatorError_ = null;
        }
        return operatorErrorBuilder_;
      }

      private pb.Canon.Emc_Motion_Set_Dout motionSetDout_ = pb.Canon.Emc_Motion_Set_Dout.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Motion_Set_Dout, pb.Canon.Emc_Motion_Set_Dout.Builder, pb.Canon.Emc_Motion_Set_DoutOrBuilder> motionSetDoutBuilder_;
      /**
       * <code>optional .pb.Emc_Motion_Set_Dout motion_set_dout = 550;</code>
       */
      public boolean hasMotionSetDout() {
        return ((bitField2_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional .pb.Emc_Motion_Set_Dout motion_set_dout = 550;</code>
       */
      public pb.Canon.Emc_Motion_Set_Dout getMotionSetDout() {
        if (motionSetDoutBuilder_ == null) {
          return motionSetDout_;
        } else {
          return motionSetDoutBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Motion_Set_Dout motion_set_dout = 550;</code>
       */
      public Builder setMotionSetDout(pb.Canon.Emc_Motion_Set_Dout value) {
        if (motionSetDoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          motionSetDout_ = value;
          onChanged();
        } else {
          motionSetDoutBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Motion_Set_Dout motion_set_dout = 550;</code>
       */
      public Builder setMotionSetDout(
          pb.Canon.Emc_Motion_Set_Dout.Builder builderForValue) {
        if (motionSetDoutBuilder_ == null) {
          motionSetDout_ = builderForValue.build();
          onChanged();
        } else {
          motionSetDoutBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Motion_Set_Dout motion_set_dout = 550;</code>
       */
      public Builder mergeMotionSetDout(pb.Canon.Emc_Motion_Set_Dout value) {
        if (motionSetDoutBuilder_ == null) {
          if (((bitField2_ & 0x00200000) == 0x00200000) &&
              motionSetDout_ != pb.Canon.Emc_Motion_Set_Dout.getDefaultInstance()) {
            motionSetDout_ =
              pb.Canon.Emc_Motion_Set_Dout.newBuilder(motionSetDout_).mergeFrom(value).buildPartial();
          } else {
            motionSetDout_ = value;
          }
          onChanged();
        } else {
          motionSetDoutBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Motion_Set_Dout motion_set_dout = 550;</code>
       */
      public Builder clearMotionSetDout() {
        if (motionSetDoutBuilder_ == null) {
          motionSetDout_ = pb.Canon.Emc_Motion_Set_Dout.getDefaultInstance();
          onChanged();
        } else {
          motionSetDoutBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00200000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Motion_Set_Dout motion_set_dout = 550;</code>
       */
      public pb.Canon.Emc_Motion_Set_Dout.Builder getMotionSetDoutBuilder() {
        bitField2_ |= 0x00200000;
        onChanged();
        return getMotionSetDoutFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Motion_Set_Dout motion_set_dout = 550;</code>
       */
      public pb.Canon.Emc_Motion_Set_DoutOrBuilder getMotionSetDoutOrBuilder() {
        if (motionSetDoutBuilder_ != null) {
          return motionSetDoutBuilder_.getMessageOrBuilder();
        } else {
          return motionSetDout_;
        }
      }
      /**
       * <code>optional .pb.Emc_Motion_Set_Dout motion_set_dout = 550;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Motion_Set_Dout, pb.Canon.Emc_Motion_Set_Dout.Builder, pb.Canon.Emc_Motion_Set_DoutOrBuilder> 
          getMotionSetDoutFieldBuilder() {
        if (motionSetDoutBuilder_ == null) {
          motionSetDoutBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Motion_Set_Dout, pb.Canon.Emc_Motion_Set_Dout.Builder, pb.Canon.Emc_Motion_Set_DoutOrBuilder>(
                  getMotionSetDout(),
                  getParentForChildren(),
                  isClean());
          motionSetDout_ = null;
        }
        return motionSetDoutBuilder_;
      }

      private pb.Canon.Emc_Motion_Set_Aout motionSetAout_ = pb.Canon.Emc_Motion_Set_Aout.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Motion_Set_Aout, pb.Canon.Emc_Motion_Set_Aout.Builder, pb.Canon.Emc_Motion_Set_AoutOrBuilder> motionSetAoutBuilder_;
      /**
       * <code>optional .pb.Emc_Motion_Set_Aout motion_set_aout = 560;</code>
       */
      public boolean hasMotionSetAout() {
        return ((bitField2_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .pb.Emc_Motion_Set_Aout motion_set_aout = 560;</code>
       */
      public pb.Canon.Emc_Motion_Set_Aout getMotionSetAout() {
        if (motionSetAoutBuilder_ == null) {
          return motionSetAout_;
        } else {
          return motionSetAoutBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Motion_Set_Aout motion_set_aout = 560;</code>
       */
      public Builder setMotionSetAout(pb.Canon.Emc_Motion_Set_Aout value) {
        if (motionSetAoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          motionSetAout_ = value;
          onChanged();
        } else {
          motionSetAoutBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Motion_Set_Aout motion_set_aout = 560;</code>
       */
      public Builder setMotionSetAout(
          pb.Canon.Emc_Motion_Set_Aout.Builder builderForValue) {
        if (motionSetAoutBuilder_ == null) {
          motionSetAout_ = builderForValue.build();
          onChanged();
        } else {
          motionSetAoutBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Motion_Set_Aout motion_set_aout = 560;</code>
       */
      public Builder mergeMotionSetAout(pb.Canon.Emc_Motion_Set_Aout value) {
        if (motionSetAoutBuilder_ == null) {
          if (((bitField2_ & 0x00400000) == 0x00400000) &&
              motionSetAout_ != pb.Canon.Emc_Motion_Set_Aout.getDefaultInstance()) {
            motionSetAout_ =
              pb.Canon.Emc_Motion_Set_Aout.newBuilder(motionSetAout_).mergeFrom(value).buildPartial();
          } else {
            motionSetAout_ = value;
          }
          onChanged();
        } else {
          motionSetAoutBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Motion_Set_Aout motion_set_aout = 560;</code>
       */
      public Builder clearMotionSetAout() {
        if (motionSetAoutBuilder_ == null) {
          motionSetAout_ = pb.Canon.Emc_Motion_Set_Aout.getDefaultInstance();
          onChanged();
        } else {
          motionSetAoutBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00400000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Motion_Set_Aout motion_set_aout = 560;</code>
       */
      public pb.Canon.Emc_Motion_Set_Aout.Builder getMotionSetAoutBuilder() {
        bitField2_ |= 0x00400000;
        onChanged();
        return getMotionSetAoutFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Motion_Set_Aout motion_set_aout = 560;</code>
       */
      public pb.Canon.Emc_Motion_Set_AoutOrBuilder getMotionSetAoutOrBuilder() {
        if (motionSetAoutBuilder_ != null) {
          return motionSetAoutBuilder_.getMessageOrBuilder();
        } else {
          return motionSetAout_;
        }
      }
      /**
       * <code>optional .pb.Emc_Motion_Set_Aout motion_set_aout = 560;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Motion_Set_Aout, pb.Canon.Emc_Motion_Set_Aout.Builder, pb.Canon.Emc_Motion_Set_AoutOrBuilder> 
          getMotionSetAoutFieldBuilder() {
        if (motionSetAoutBuilder_ == null) {
          motionSetAoutBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Motion_Set_Aout, pb.Canon.Emc_Motion_Set_Aout.Builder, pb.Canon.Emc_Motion_Set_AoutOrBuilder>(
                  getMotionSetAout(),
                  getParentForChildren(),
                  isClean());
          motionSetAout_ = null;
        }
        return motionSetAoutBuilder_;
      }

      private pb.Canon.Emc_Aux_Input_Wait auxInputWait_ = pb.Canon.Emc_Aux_Input_Wait.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Aux_Input_Wait, pb.Canon.Emc_Aux_Input_Wait.Builder, pb.Canon.Emc_Aux_Input_WaitOrBuilder> auxInputWaitBuilder_;
      /**
       * <code>optional .pb.Emc_Aux_Input_Wait aux_input_wait = 570;</code>
       */
      public boolean hasAuxInputWait() {
        return ((bitField2_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional .pb.Emc_Aux_Input_Wait aux_input_wait = 570;</code>
       */
      public pb.Canon.Emc_Aux_Input_Wait getAuxInputWait() {
        if (auxInputWaitBuilder_ == null) {
          return auxInputWait_;
        } else {
          return auxInputWaitBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Aux_Input_Wait aux_input_wait = 570;</code>
       */
      public Builder setAuxInputWait(pb.Canon.Emc_Aux_Input_Wait value) {
        if (auxInputWaitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          auxInputWait_ = value;
          onChanged();
        } else {
          auxInputWaitBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Aux_Input_Wait aux_input_wait = 570;</code>
       */
      public Builder setAuxInputWait(
          pb.Canon.Emc_Aux_Input_Wait.Builder builderForValue) {
        if (auxInputWaitBuilder_ == null) {
          auxInputWait_ = builderForValue.build();
          onChanged();
        } else {
          auxInputWaitBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Aux_Input_Wait aux_input_wait = 570;</code>
       */
      public Builder mergeAuxInputWait(pb.Canon.Emc_Aux_Input_Wait value) {
        if (auxInputWaitBuilder_ == null) {
          if (((bitField2_ & 0x00800000) == 0x00800000) &&
              auxInputWait_ != pb.Canon.Emc_Aux_Input_Wait.getDefaultInstance()) {
            auxInputWait_ =
              pb.Canon.Emc_Aux_Input_Wait.newBuilder(auxInputWait_).mergeFrom(value).buildPartial();
          } else {
            auxInputWait_ = value;
          }
          onChanged();
        } else {
          auxInputWaitBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Aux_Input_Wait aux_input_wait = 570;</code>
       */
      public Builder clearAuxInputWait() {
        if (auxInputWaitBuilder_ == null) {
          auxInputWait_ = pb.Canon.Emc_Aux_Input_Wait.getDefaultInstance();
          onChanged();
        } else {
          auxInputWaitBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00800000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Aux_Input_Wait aux_input_wait = 570;</code>
       */
      public pb.Canon.Emc_Aux_Input_Wait.Builder getAuxInputWaitBuilder() {
        bitField2_ |= 0x00800000;
        onChanged();
        return getAuxInputWaitFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Aux_Input_Wait aux_input_wait = 570;</code>
       */
      public pb.Canon.Emc_Aux_Input_WaitOrBuilder getAuxInputWaitOrBuilder() {
        if (auxInputWaitBuilder_ != null) {
          return auxInputWaitBuilder_.getMessageOrBuilder();
        } else {
          return auxInputWait_;
        }
      }
      /**
       * <code>optional .pb.Emc_Aux_Input_Wait aux_input_wait = 570;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Aux_Input_Wait, pb.Canon.Emc_Aux_Input_Wait.Builder, pb.Canon.Emc_Aux_Input_WaitOrBuilder> 
          getAuxInputWaitFieldBuilder() {
        if (auxInputWaitBuilder_ == null) {
          auxInputWaitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Aux_Input_Wait, pb.Canon.Emc_Aux_Input_Wait.Builder, pb.Canon.Emc_Aux_Input_WaitOrBuilder>(
                  getAuxInputWait(),
                  getParentForChildren(),
                  isClean());
          auxInputWait_ = null;
        }
        return auxInputWaitBuilder_;
      }

      private pb.Canon.Emc_Exec_Plugin_Ca1l execPluginCall_ = pb.Canon.Emc_Exec_Plugin_Ca1l.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Exec_Plugin_Ca1l, pb.Canon.Emc_Exec_Plugin_Ca1l.Builder, pb.Canon.Emc_Exec_Plugin_Ca1lOrBuilder> execPluginCallBuilder_;
      /**
       * <code>optional .pb.Emc_Exec_Plugin_Ca1l exec_plugin_call = 580;</code>
       */
      public boolean hasExecPluginCall() {
        return ((bitField2_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .pb.Emc_Exec_Plugin_Ca1l exec_plugin_call = 580;</code>
       */
      public pb.Canon.Emc_Exec_Plugin_Ca1l getExecPluginCall() {
        if (execPluginCallBuilder_ == null) {
          return execPluginCall_;
        } else {
          return execPluginCallBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Exec_Plugin_Ca1l exec_plugin_call = 580;</code>
       */
      public Builder setExecPluginCall(pb.Canon.Emc_Exec_Plugin_Ca1l value) {
        if (execPluginCallBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          execPluginCall_ = value;
          onChanged();
        } else {
          execPluginCallBuilder_.setMessage(value);
        }
        bitField2_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Exec_Plugin_Ca1l exec_plugin_call = 580;</code>
       */
      public Builder setExecPluginCall(
          pb.Canon.Emc_Exec_Plugin_Ca1l.Builder builderForValue) {
        if (execPluginCallBuilder_ == null) {
          execPluginCall_ = builderForValue.build();
          onChanged();
        } else {
          execPluginCallBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Exec_Plugin_Ca1l exec_plugin_call = 580;</code>
       */
      public Builder mergeExecPluginCall(pb.Canon.Emc_Exec_Plugin_Ca1l value) {
        if (execPluginCallBuilder_ == null) {
          if (((bitField2_ & 0x01000000) == 0x01000000) &&
              execPluginCall_ != pb.Canon.Emc_Exec_Plugin_Ca1l.getDefaultInstance()) {
            execPluginCall_ =
              pb.Canon.Emc_Exec_Plugin_Ca1l.newBuilder(execPluginCall_).mergeFrom(value).buildPartial();
          } else {
            execPluginCall_ = value;
          }
          onChanged();
        } else {
          execPluginCallBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Exec_Plugin_Ca1l exec_plugin_call = 580;</code>
       */
      public Builder clearExecPluginCall() {
        if (execPluginCallBuilder_ == null) {
          execPluginCall_ = pb.Canon.Emc_Exec_Plugin_Ca1l.getDefaultInstance();
          onChanged();
        } else {
          execPluginCallBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x01000000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Exec_Plugin_Ca1l exec_plugin_call = 580;</code>
       */
      public pb.Canon.Emc_Exec_Plugin_Ca1l.Builder getExecPluginCallBuilder() {
        bitField2_ |= 0x01000000;
        onChanged();
        return getExecPluginCallFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Exec_Plugin_Ca1l exec_plugin_call = 580;</code>
       */
      public pb.Canon.Emc_Exec_Plugin_Ca1lOrBuilder getExecPluginCallOrBuilder() {
        if (execPluginCallBuilder_ != null) {
          return execPluginCallBuilder_.getMessageOrBuilder();
        } else {
          return execPluginCall_;
        }
      }
      /**
       * <code>optional .pb.Emc_Exec_Plugin_Ca1l exec_plugin_call = 580;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Exec_Plugin_Ca1l, pb.Canon.Emc_Exec_Plugin_Ca1l.Builder, pb.Canon.Emc_Exec_Plugin_Ca1lOrBuilder> 
          getExecPluginCallFieldBuilder() {
        if (execPluginCallBuilder_ == null) {
          execPluginCallBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Exec_Plugin_Ca1l, pb.Canon.Emc_Exec_Plugin_Ca1l.Builder, pb.Canon.Emc_Exec_Plugin_Ca1lOrBuilder>(
                  getExecPluginCall(),
                  getParentForChildren(),
                  isClean());
          execPluginCall_ = null;
        }
        return execPluginCallBuilder_;
      }

      private pb.Canon.Emc_Io_Plugin_Call ioPluginCall_ = pb.Canon.Emc_Io_Plugin_Call.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Io_Plugin_Call, pb.Canon.Emc_Io_Plugin_Call.Builder, pb.Canon.Emc_Io_Plugin_CallOrBuilder> ioPluginCallBuilder_;
      /**
       * <code>optional .pb.Emc_Io_Plugin_Call io_plugin_call = 590;</code>
       */
      public boolean hasIoPluginCall() {
        return ((bitField2_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional .pb.Emc_Io_Plugin_Call io_plugin_call = 590;</code>
       */
      public pb.Canon.Emc_Io_Plugin_Call getIoPluginCall() {
        if (ioPluginCallBuilder_ == null) {
          return ioPluginCall_;
        } else {
          return ioPluginCallBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.Emc_Io_Plugin_Call io_plugin_call = 590;</code>
       */
      public Builder setIoPluginCall(pb.Canon.Emc_Io_Plugin_Call value) {
        if (ioPluginCallBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ioPluginCall_ = value;
          onChanged();
        } else {
          ioPluginCallBuilder_.setMessage(value);
        }
        bitField2_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Io_Plugin_Call io_plugin_call = 590;</code>
       */
      public Builder setIoPluginCall(
          pb.Canon.Emc_Io_Plugin_Call.Builder builderForValue) {
        if (ioPluginCallBuilder_ == null) {
          ioPluginCall_ = builderForValue.build();
          onChanged();
        } else {
          ioPluginCallBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Io_Plugin_Call io_plugin_call = 590;</code>
       */
      public Builder mergeIoPluginCall(pb.Canon.Emc_Io_Plugin_Call value) {
        if (ioPluginCallBuilder_ == null) {
          if (((bitField2_ & 0x02000000) == 0x02000000) &&
              ioPluginCall_ != pb.Canon.Emc_Io_Plugin_Call.getDefaultInstance()) {
            ioPluginCall_ =
              pb.Canon.Emc_Io_Plugin_Call.newBuilder(ioPluginCall_).mergeFrom(value).buildPartial();
          } else {
            ioPluginCall_ = value;
          }
          onChanged();
        } else {
          ioPluginCallBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .pb.Emc_Io_Plugin_Call io_plugin_call = 590;</code>
       */
      public Builder clearIoPluginCall() {
        if (ioPluginCallBuilder_ == null) {
          ioPluginCall_ = pb.Canon.Emc_Io_Plugin_Call.getDefaultInstance();
          onChanged();
        } else {
          ioPluginCallBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x02000000);
        return this;
      }
      /**
       * <code>optional .pb.Emc_Io_Plugin_Call io_plugin_call = 590;</code>
       */
      public pb.Canon.Emc_Io_Plugin_Call.Builder getIoPluginCallBuilder() {
        bitField2_ |= 0x02000000;
        onChanged();
        return getIoPluginCallFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.Emc_Io_Plugin_Call io_plugin_call = 590;</code>
       */
      public pb.Canon.Emc_Io_Plugin_CallOrBuilder getIoPluginCallOrBuilder() {
        if (ioPluginCallBuilder_ != null) {
          return ioPluginCallBuilder_.getMessageOrBuilder();
        } else {
          return ioPluginCall_;
        }
      }
      /**
       * <code>optional .pb.Emc_Io_Plugin_Call io_plugin_call = 590;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Canon.Emc_Io_Plugin_Call, pb.Canon.Emc_Io_Plugin_Call.Builder, pb.Canon.Emc_Io_Plugin_CallOrBuilder> 
          getIoPluginCallFieldBuilder() {
        if (ioPluginCallBuilder_ == null) {
          ioPluginCallBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Canon.Emc_Io_Plugin_Call, pb.Canon.Emc_Io_Plugin_Call.Builder, pb.Canon.Emc_Io_Plugin_CallOrBuilder>(
                  getIoPluginCall(),
                  getParentForChildren(),
                  isClean());
          ioPluginCall_ = null;
        }
        return ioPluginCallBuilder_;
      }

      private pb.Status.EmcStatusConfig emcStatusConfig_ = pb.Status.EmcStatusConfig.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Status.EmcStatusConfig, pb.Status.EmcStatusConfig.Builder, pb.Status.EmcStatusConfigOrBuilder> emcStatusConfigBuilder_;
      /**
       * <code>optional .pb.EmcStatusConfig emc_status_config = 600;</code>
       */
      public boolean hasEmcStatusConfig() {
        return ((bitField2_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .pb.EmcStatusConfig emc_status_config = 600;</code>
       */
      public pb.Status.EmcStatusConfig getEmcStatusConfig() {
        if (emcStatusConfigBuilder_ == null) {
          return emcStatusConfig_;
        } else {
          return emcStatusConfigBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.EmcStatusConfig emc_status_config = 600;</code>
       */
      public Builder setEmcStatusConfig(pb.Status.EmcStatusConfig value) {
        if (emcStatusConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          emcStatusConfig_ = value;
          onChanged();
        } else {
          emcStatusConfigBuilder_.setMessage(value);
        }
        bitField2_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusConfig emc_status_config = 600;</code>
       */
      public Builder setEmcStatusConfig(
          pb.Status.EmcStatusConfig.Builder builderForValue) {
        if (emcStatusConfigBuilder_ == null) {
          emcStatusConfig_ = builderForValue.build();
          onChanged();
        } else {
          emcStatusConfigBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusConfig emc_status_config = 600;</code>
       */
      public Builder mergeEmcStatusConfig(pb.Status.EmcStatusConfig value) {
        if (emcStatusConfigBuilder_ == null) {
          if (((bitField2_ & 0x04000000) == 0x04000000) &&
              emcStatusConfig_ != pb.Status.EmcStatusConfig.getDefaultInstance()) {
            emcStatusConfig_ =
              pb.Status.EmcStatusConfig.newBuilder(emcStatusConfig_).mergeFrom(value).buildPartial();
          } else {
            emcStatusConfig_ = value;
          }
          onChanged();
        } else {
          emcStatusConfigBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusConfig emc_status_config = 600;</code>
       */
      public Builder clearEmcStatusConfig() {
        if (emcStatusConfigBuilder_ == null) {
          emcStatusConfig_ = pb.Status.EmcStatusConfig.getDefaultInstance();
          onChanged();
        } else {
          emcStatusConfigBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x04000000);
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusConfig emc_status_config = 600;</code>
       */
      public pb.Status.EmcStatusConfig.Builder getEmcStatusConfigBuilder() {
        bitField2_ |= 0x04000000;
        onChanged();
        return getEmcStatusConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.EmcStatusConfig emc_status_config = 600;</code>
       */
      public pb.Status.EmcStatusConfigOrBuilder getEmcStatusConfigOrBuilder() {
        if (emcStatusConfigBuilder_ != null) {
          return emcStatusConfigBuilder_.getMessageOrBuilder();
        } else {
          return emcStatusConfig_;
        }
      }
      /**
       * <code>optional .pb.EmcStatusConfig emc_status_config = 600;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Status.EmcStatusConfig, pb.Status.EmcStatusConfig.Builder, pb.Status.EmcStatusConfigOrBuilder> 
          getEmcStatusConfigFieldBuilder() {
        if (emcStatusConfigBuilder_ == null) {
          emcStatusConfigBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Status.EmcStatusConfig, pb.Status.EmcStatusConfig.Builder, pb.Status.EmcStatusConfigOrBuilder>(
                  getEmcStatusConfig(),
                  getParentForChildren(),
                  isClean());
          emcStatusConfig_ = null;
        }
        return emcStatusConfigBuilder_;
      }

      private pb.Status.EmcStatusMotion emcStatusMotion_ = pb.Status.EmcStatusMotion.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Status.EmcStatusMotion, pb.Status.EmcStatusMotion.Builder, pb.Status.EmcStatusMotionOrBuilder> emcStatusMotionBuilder_;
      /**
       * <code>optional .pb.EmcStatusMotion emc_status_motion = 601;</code>
       */
      public boolean hasEmcStatusMotion() {
        return ((bitField2_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional .pb.EmcStatusMotion emc_status_motion = 601;</code>
       */
      public pb.Status.EmcStatusMotion getEmcStatusMotion() {
        if (emcStatusMotionBuilder_ == null) {
          return emcStatusMotion_;
        } else {
          return emcStatusMotionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.EmcStatusMotion emc_status_motion = 601;</code>
       */
      public Builder setEmcStatusMotion(pb.Status.EmcStatusMotion value) {
        if (emcStatusMotionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          emcStatusMotion_ = value;
          onChanged();
        } else {
          emcStatusMotionBuilder_.setMessage(value);
        }
        bitField2_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusMotion emc_status_motion = 601;</code>
       */
      public Builder setEmcStatusMotion(
          pb.Status.EmcStatusMotion.Builder builderForValue) {
        if (emcStatusMotionBuilder_ == null) {
          emcStatusMotion_ = builderForValue.build();
          onChanged();
        } else {
          emcStatusMotionBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusMotion emc_status_motion = 601;</code>
       */
      public Builder mergeEmcStatusMotion(pb.Status.EmcStatusMotion value) {
        if (emcStatusMotionBuilder_ == null) {
          if (((bitField2_ & 0x08000000) == 0x08000000) &&
              emcStatusMotion_ != pb.Status.EmcStatusMotion.getDefaultInstance()) {
            emcStatusMotion_ =
              pb.Status.EmcStatusMotion.newBuilder(emcStatusMotion_).mergeFrom(value).buildPartial();
          } else {
            emcStatusMotion_ = value;
          }
          onChanged();
        } else {
          emcStatusMotionBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusMotion emc_status_motion = 601;</code>
       */
      public Builder clearEmcStatusMotion() {
        if (emcStatusMotionBuilder_ == null) {
          emcStatusMotion_ = pb.Status.EmcStatusMotion.getDefaultInstance();
          onChanged();
        } else {
          emcStatusMotionBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x08000000);
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusMotion emc_status_motion = 601;</code>
       */
      public pb.Status.EmcStatusMotion.Builder getEmcStatusMotionBuilder() {
        bitField2_ |= 0x08000000;
        onChanged();
        return getEmcStatusMotionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.EmcStatusMotion emc_status_motion = 601;</code>
       */
      public pb.Status.EmcStatusMotionOrBuilder getEmcStatusMotionOrBuilder() {
        if (emcStatusMotionBuilder_ != null) {
          return emcStatusMotionBuilder_.getMessageOrBuilder();
        } else {
          return emcStatusMotion_;
        }
      }
      /**
       * <code>optional .pb.EmcStatusMotion emc_status_motion = 601;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Status.EmcStatusMotion, pb.Status.EmcStatusMotion.Builder, pb.Status.EmcStatusMotionOrBuilder> 
          getEmcStatusMotionFieldBuilder() {
        if (emcStatusMotionBuilder_ == null) {
          emcStatusMotionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Status.EmcStatusMotion, pb.Status.EmcStatusMotion.Builder, pb.Status.EmcStatusMotionOrBuilder>(
                  getEmcStatusMotion(),
                  getParentForChildren(),
                  isClean());
          emcStatusMotion_ = null;
        }
        return emcStatusMotionBuilder_;
      }

      private pb.Status.EmcStatusIo emcStatusIo_ = pb.Status.EmcStatusIo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Status.EmcStatusIo, pb.Status.EmcStatusIo.Builder, pb.Status.EmcStatusIoOrBuilder> emcStatusIoBuilder_;
      /**
       * <code>optional .pb.EmcStatusIo emc_status_io = 602;</code>
       */
      public boolean hasEmcStatusIo() {
        return ((bitField2_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional .pb.EmcStatusIo emc_status_io = 602;</code>
       */
      public pb.Status.EmcStatusIo getEmcStatusIo() {
        if (emcStatusIoBuilder_ == null) {
          return emcStatusIo_;
        } else {
          return emcStatusIoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.EmcStatusIo emc_status_io = 602;</code>
       */
      public Builder setEmcStatusIo(pb.Status.EmcStatusIo value) {
        if (emcStatusIoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          emcStatusIo_ = value;
          onChanged();
        } else {
          emcStatusIoBuilder_.setMessage(value);
        }
        bitField2_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusIo emc_status_io = 602;</code>
       */
      public Builder setEmcStatusIo(
          pb.Status.EmcStatusIo.Builder builderForValue) {
        if (emcStatusIoBuilder_ == null) {
          emcStatusIo_ = builderForValue.build();
          onChanged();
        } else {
          emcStatusIoBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusIo emc_status_io = 602;</code>
       */
      public Builder mergeEmcStatusIo(pb.Status.EmcStatusIo value) {
        if (emcStatusIoBuilder_ == null) {
          if (((bitField2_ & 0x10000000) == 0x10000000) &&
              emcStatusIo_ != pb.Status.EmcStatusIo.getDefaultInstance()) {
            emcStatusIo_ =
              pb.Status.EmcStatusIo.newBuilder(emcStatusIo_).mergeFrom(value).buildPartial();
          } else {
            emcStatusIo_ = value;
          }
          onChanged();
        } else {
          emcStatusIoBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusIo emc_status_io = 602;</code>
       */
      public Builder clearEmcStatusIo() {
        if (emcStatusIoBuilder_ == null) {
          emcStatusIo_ = pb.Status.EmcStatusIo.getDefaultInstance();
          onChanged();
        } else {
          emcStatusIoBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x10000000);
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusIo emc_status_io = 602;</code>
       */
      public pb.Status.EmcStatusIo.Builder getEmcStatusIoBuilder() {
        bitField2_ |= 0x10000000;
        onChanged();
        return getEmcStatusIoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.EmcStatusIo emc_status_io = 602;</code>
       */
      public pb.Status.EmcStatusIoOrBuilder getEmcStatusIoOrBuilder() {
        if (emcStatusIoBuilder_ != null) {
          return emcStatusIoBuilder_.getMessageOrBuilder();
        } else {
          return emcStatusIo_;
        }
      }
      /**
       * <code>optional .pb.EmcStatusIo emc_status_io = 602;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Status.EmcStatusIo, pb.Status.EmcStatusIo.Builder, pb.Status.EmcStatusIoOrBuilder> 
          getEmcStatusIoFieldBuilder() {
        if (emcStatusIoBuilder_ == null) {
          emcStatusIoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Status.EmcStatusIo, pb.Status.EmcStatusIo.Builder, pb.Status.EmcStatusIoOrBuilder>(
                  getEmcStatusIo(),
                  getParentForChildren(),
                  isClean());
          emcStatusIo_ = null;
        }
        return emcStatusIoBuilder_;
      }

      private pb.Status.EmcStatusTask emcStatusTask_ = pb.Status.EmcStatusTask.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Status.EmcStatusTask, pb.Status.EmcStatusTask.Builder, pb.Status.EmcStatusTaskOrBuilder> emcStatusTaskBuilder_;
      /**
       * <code>optional .pb.EmcStatusTask emc_status_task = 603;</code>
       */
      public boolean hasEmcStatusTask() {
        return ((bitField2_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional .pb.EmcStatusTask emc_status_task = 603;</code>
       */
      public pb.Status.EmcStatusTask getEmcStatusTask() {
        if (emcStatusTaskBuilder_ == null) {
          return emcStatusTask_;
        } else {
          return emcStatusTaskBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.EmcStatusTask emc_status_task = 603;</code>
       */
      public Builder setEmcStatusTask(pb.Status.EmcStatusTask value) {
        if (emcStatusTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          emcStatusTask_ = value;
          onChanged();
        } else {
          emcStatusTaskBuilder_.setMessage(value);
        }
        bitField2_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusTask emc_status_task = 603;</code>
       */
      public Builder setEmcStatusTask(
          pb.Status.EmcStatusTask.Builder builderForValue) {
        if (emcStatusTaskBuilder_ == null) {
          emcStatusTask_ = builderForValue.build();
          onChanged();
        } else {
          emcStatusTaskBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusTask emc_status_task = 603;</code>
       */
      public Builder mergeEmcStatusTask(pb.Status.EmcStatusTask value) {
        if (emcStatusTaskBuilder_ == null) {
          if (((bitField2_ & 0x20000000) == 0x20000000) &&
              emcStatusTask_ != pb.Status.EmcStatusTask.getDefaultInstance()) {
            emcStatusTask_ =
              pb.Status.EmcStatusTask.newBuilder(emcStatusTask_).mergeFrom(value).buildPartial();
          } else {
            emcStatusTask_ = value;
          }
          onChanged();
        } else {
          emcStatusTaskBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusTask emc_status_task = 603;</code>
       */
      public Builder clearEmcStatusTask() {
        if (emcStatusTaskBuilder_ == null) {
          emcStatusTask_ = pb.Status.EmcStatusTask.getDefaultInstance();
          onChanged();
        } else {
          emcStatusTaskBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x20000000);
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusTask emc_status_task = 603;</code>
       */
      public pb.Status.EmcStatusTask.Builder getEmcStatusTaskBuilder() {
        bitField2_ |= 0x20000000;
        onChanged();
        return getEmcStatusTaskFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.EmcStatusTask emc_status_task = 603;</code>
       */
      public pb.Status.EmcStatusTaskOrBuilder getEmcStatusTaskOrBuilder() {
        if (emcStatusTaskBuilder_ != null) {
          return emcStatusTaskBuilder_.getMessageOrBuilder();
        } else {
          return emcStatusTask_;
        }
      }
      /**
       * <code>optional .pb.EmcStatusTask emc_status_task = 603;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Status.EmcStatusTask, pb.Status.EmcStatusTask.Builder, pb.Status.EmcStatusTaskOrBuilder> 
          getEmcStatusTaskFieldBuilder() {
        if (emcStatusTaskBuilder_ == null) {
          emcStatusTaskBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Status.EmcStatusTask, pb.Status.EmcStatusTask.Builder, pb.Status.EmcStatusTaskOrBuilder>(
                  getEmcStatusTask(),
                  getParentForChildren(),
                  isClean());
          emcStatusTask_ = null;
        }
        return emcStatusTaskBuilder_;
      }

      private pb.Status.EmcStatusInterp emcStatusInterp_ = pb.Status.EmcStatusInterp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Status.EmcStatusInterp, pb.Status.EmcStatusInterp.Builder, pb.Status.EmcStatusInterpOrBuilder> emcStatusInterpBuilder_;
      /**
       * <code>optional .pb.EmcStatusInterp emc_status_interp = 604;</code>
       */
      public boolean hasEmcStatusInterp() {
        return ((bitField2_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional .pb.EmcStatusInterp emc_status_interp = 604;</code>
       */
      public pb.Status.EmcStatusInterp getEmcStatusInterp() {
        if (emcStatusInterpBuilder_ == null) {
          return emcStatusInterp_;
        } else {
          return emcStatusInterpBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.EmcStatusInterp emc_status_interp = 604;</code>
       */
      public Builder setEmcStatusInterp(pb.Status.EmcStatusInterp value) {
        if (emcStatusInterpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          emcStatusInterp_ = value;
          onChanged();
        } else {
          emcStatusInterpBuilder_.setMessage(value);
        }
        bitField2_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusInterp emc_status_interp = 604;</code>
       */
      public Builder setEmcStatusInterp(
          pb.Status.EmcStatusInterp.Builder builderForValue) {
        if (emcStatusInterpBuilder_ == null) {
          emcStatusInterp_ = builderForValue.build();
          onChanged();
        } else {
          emcStatusInterpBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusInterp emc_status_interp = 604;</code>
       */
      public Builder mergeEmcStatusInterp(pb.Status.EmcStatusInterp value) {
        if (emcStatusInterpBuilder_ == null) {
          if (((bitField2_ & 0x40000000) == 0x40000000) &&
              emcStatusInterp_ != pb.Status.EmcStatusInterp.getDefaultInstance()) {
            emcStatusInterp_ =
              pb.Status.EmcStatusInterp.newBuilder(emcStatusInterp_).mergeFrom(value).buildPartial();
          } else {
            emcStatusInterp_ = value;
          }
          onChanged();
        } else {
          emcStatusInterpBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusInterp emc_status_interp = 604;</code>
       */
      public Builder clearEmcStatusInterp() {
        if (emcStatusInterpBuilder_ == null) {
          emcStatusInterp_ = pb.Status.EmcStatusInterp.getDefaultInstance();
          onChanged();
        } else {
          emcStatusInterpBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x40000000);
        return this;
      }
      /**
       * <code>optional .pb.EmcStatusInterp emc_status_interp = 604;</code>
       */
      public pb.Status.EmcStatusInterp.Builder getEmcStatusInterpBuilder() {
        bitField2_ |= 0x40000000;
        onChanged();
        return getEmcStatusInterpFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.EmcStatusInterp emc_status_interp = 604;</code>
       */
      public pb.Status.EmcStatusInterpOrBuilder getEmcStatusInterpOrBuilder() {
        if (emcStatusInterpBuilder_ != null) {
          return emcStatusInterpBuilder_.getMessageOrBuilder();
        } else {
          return emcStatusInterp_;
        }
      }
      /**
       * <code>optional .pb.EmcStatusInterp emc_status_interp = 604;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Status.EmcStatusInterp, pb.Status.EmcStatusInterp.Builder, pb.Status.EmcStatusInterpOrBuilder> 
          getEmcStatusInterpFieldBuilder() {
        if (emcStatusInterpBuilder_ == null) {
          emcStatusInterpBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Status.EmcStatusInterp, pb.Status.EmcStatusInterp.Builder, pb.Status.EmcStatusInterpOrBuilder>(
                  getEmcStatusInterp(),
                  getParentForChildren(),
                  isClean());
          emcStatusInterp_ = null;
        }
        return emcStatusInterpBuilder_;
      }

      private pb.Status.EmcCommandParameters emcCommandParams_ = pb.Status.EmcCommandParameters.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Status.EmcCommandParameters, pb.Status.EmcCommandParameters.Builder, pb.Status.EmcCommandParametersOrBuilder> emcCommandParamsBuilder_;
      /**
       * <code>optional .pb.EmcCommandParameters emc_command_params = 610;</code>
       */
      public boolean hasEmcCommandParams() {
        return ((bitField2_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional .pb.EmcCommandParameters emc_command_params = 610;</code>
       */
      public pb.Status.EmcCommandParameters getEmcCommandParams() {
        if (emcCommandParamsBuilder_ == null) {
          return emcCommandParams_;
        } else {
          return emcCommandParamsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.EmcCommandParameters emc_command_params = 610;</code>
       */
      public Builder setEmcCommandParams(pb.Status.EmcCommandParameters value) {
        if (emcCommandParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          emcCommandParams_ = value;
          onChanged();
        } else {
          emcCommandParamsBuilder_.setMessage(value);
        }
        bitField2_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcCommandParameters emc_command_params = 610;</code>
       */
      public Builder setEmcCommandParams(
          pb.Status.EmcCommandParameters.Builder builderForValue) {
        if (emcCommandParamsBuilder_ == null) {
          emcCommandParams_ = builderForValue.build();
          onChanged();
        } else {
          emcCommandParamsBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcCommandParameters emc_command_params = 610;</code>
       */
      public Builder mergeEmcCommandParams(pb.Status.EmcCommandParameters value) {
        if (emcCommandParamsBuilder_ == null) {
          if (((bitField2_ & 0x80000000) == 0x80000000) &&
              emcCommandParams_ != pb.Status.EmcCommandParameters.getDefaultInstance()) {
            emcCommandParams_ =
              pb.Status.EmcCommandParameters.newBuilder(emcCommandParams_).mergeFrom(value).buildPartial();
          } else {
            emcCommandParams_ = value;
          }
          onChanged();
        } else {
          emcCommandParamsBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .pb.EmcCommandParameters emc_command_params = 610;</code>
       */
      public Builder clearEmcCommandParams() {
        if (emcCommandParamsBuilder_ == null) {
          emcCommandParams_ = pb.Status.EmcCommandParameters.getDefaultInstance();
          onChanged();
        } else {
          emcCommandParamsBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x80000000);
        return this;
      }
      /**
       * <code>optional .pb.EmcCommandParameters emc_command_params = 610;</code>
       */
      public pb.Status.EmcCommandParameters.Builder getEmcCommandParamsBuilder() {
        bitField2_ |= 0x80000000;
        onChanged();
        return getEmcCommandParamsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.EmcCommandParameters emc_command_params = 610;</code>
       */
      public pb.Status.EmcCommandParametersOrBuilder getEmcCommandParamsOrBuilder() {
        if (emcCommandParamsBuilder_ != null) {
          return emcCommandParamsBuilder_.getMessageOrBuilder();
        } else {
          return emcCommandParams_;
        }
      }
      /**
       * <code>optional .pb.EmcCommandParameters emc_command_params = 610;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Status.EmcCommandParameters, pb.Status.EmcCommandParameters.Builder, pb.Status.EmcCommandParametersOrBuilder> 
          getEmcCommandParamsFieldBuilder() {
        if (emcCommandParamsBuilder_ == null) {
          emcCommandParamsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Status.EmcCommandParameters, pb.Status.EmcCommandParameters.Builder, pb.Status.EmcCommandParametersOrBuilder>(
                  getEmcCommandParams(),
                  getParentForChildren(),
                  isClean());
          emcCommandParams_ = null;
        }
        return emcCommandParamsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:pb.Container)
    }

    static {
      defaultInstance = new Container(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pb.Container)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_Container_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_Container_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"machinetalk/protobuf/message.proto\022\002pb" +
      "\032!machinetalk/protobuf/nanopb.proto\032 mac" +
      "hinetalk/protobuf/types.proto\032!machineta" +
      "lk/protobuf/object.proto\032\036machinetalk/pr" +
      "otobuf/log.proto\032\"machinetalk/protobuf/m" +
      "otcmds.proto\032\037machinetalk/protobuf/task." +
      "proto\032 machinetalk/protobuf/canon.proto\032" +
      " machinetalk/protobuf/value.proto\032\'machi" +
      "netalk/protobuf/rtapicommand.proto\032(mach" +
      "inetalk/protobuf/rtapi_message.proto\032!ma",
      "chinetalk/protobuf/config.proto\032\"machine" +
      "talk/protobuf/preview.proto\032!machinetalk" +
      "/protobuf/status.proto\"\276\035\n\tContainer\022\037\n\004" +
      "type\030\001 \002(\0162\021.pb.ContainerType\022\013\n\003tsc\030\007 \001" +
      "(\020\022#\n\007preview\030\010 \003(\0132\013.pb.PreviewB\005\222?\002\030\003\022" +
      "!\n\006motcmd\030\t \001(\0132\021.pb.MotionCommand\022!\n\007mo" +
      "tstat\030\n \001(\0132\020.pb.MotionStatus\022\034\n\rlegacy_" +
      "motcmd\030\013 \001(\014B\005\222?\002\030\003\022\035\n\016legacy_motstat\030\014 " +
      "\001(\014B\005\222?\002\030\003\022(\n\rrtapi_message\030\r \001(\0132\021.pb.R" +
      "TAPI_Message\022(\n\ntask_reply\030\016 \001(\0132\r.pb.Ta",
      "skReplyB\005\222?\002\030\003\022\'\n\rticket_update\030\017 \001(\0132\020." +
      "pb.TicketUpdate\022\025\n\006syslog\030\022 \001(\014B\005\222?\002\030\003\022\031" +
      "\n\nlegacy_nml\030\023 \001(\014B\005\222?\002\030\003\022\037\n\020legacy_motc" +
      "onfig\030\024 \001(\014B\005\222?\002\030\003\022\016\n\006tv_sec\030\025 \001(\005\022\017\n\007tv" +
      "_nsec\030\026 \001(\005\022\r\n\005topic\030\027 \001(\t\022\026\n\016reply_requ" +
      "ired\030\030 \001(\010\0225\n\014interp_state\030\031 \001(\0162\030.pb.In" +
      "terpreterStateTypeB\005\222?\002\030\003\022\023\n\013interp_name" +
      "\030\032 \001(\t\022\014\n\004rsvp\030\036 \001(\005\022&\n\013in_reply_to\030! \001(" +
      "\0162\021.pb.ContainerType\022\"\n\nrcs_status\030# \001(\016" +
      "2\016.pb.RCS_STATUS\022\036\n\006status\030( \001(\0162\016.pb.St",
      "atusType\022\016\n\006serial\030- \001(\005\022\024\n\014reply_serial" +
      "\0302 \001(\005\022\016\n\006ticket\0307 \001(\005\022\024\n\014reply_ticket\030<" +
      " \001(\005\022\020\n\010sequence\030> \001(\005\022\016\n\006credit\030A \001(\005\022\023" +
      "\n\013line_number\030B \001(\005\022\023\n\004name\030C \001(\tB\005\222?\002\030\003" +
      "\022\014\n\004note\030D \003(\t\022\017\n\007retcode\030E \001(\005\022\023\n\004uuid\030" +
      "H \001(\014B\005\222?\002\030\003\022\r\n\005trace\030K \001(\010\022\020\n\010instance\030" +
      "M \001(\005\022\037\n\005value\030U \003(\0132\t.pb.ValueB\005\222?\002\030\003\022)" +
      "\n\010rtapicmd\030V \001(\0132\020.pb.RTAPICommandB\005\222?\002\030" +
      "\003\022<\n\024service_announcement\030X \003(\0132\027.pb.Ser" +
      "viceAnnouncementB\005\222?\002\030\003\022\"\n\004comp\030d \003(\0132\r.",
      "pb.ComponentB\005\222?\002\030\003\022\033\n\003pin\030\002 \003(\0132\007.pb.Pi" +
      "nB\005\222?\002\030\003\022!\n\006signal\030\003 \003(\0132\n.pb.SignalB\005\222?" +
      "\002\030\003\022\037\n\005param\030g \003(\0132\t.pb.ParamB\005\222?\002\030\003\022!\n\006" +
      "thread\030h \003(\0132\n.pb.ThreadB\005\222?\002\030\003\022\035\n\004ring\030" +
      "i \003(\0132\010.pb.RingB\005\222?\002\030\003\022\037\n\005group\030j \003(\0132\t." +
      "pb.GroupB\005\222?\002\030\003\022!\n\006member\030k \003(\0132\n.pb.Mem" +
      "berB\005\222?\002\030\003\022%\n\010function\030l \003(\0132\014.pb.Functi" +
      "onB\005\222?\002\030\003\022.\n\007pparams\030m \001(\0132\026.pb.Protocol" +
      "ParametersB\005\222?\002\030\003\022!\n\006vtable\030n \003(\0132\n.pb.V" +
      "tableB\005\222?\002\030\003\022\035\n\004inst\030o \003(\0132\010.pb.InstB\005\222?",
      "\002\030\003\022#\n\003app\030x \003(\0132\017.pb.ApplicationB\005\222?\002\030\003" +
      "\022&\n\010launcher\030\202\001 \003(\0132\014.pb.LauncherB\005\222?\002\030\003" +
      "\022\025\n\005index\030\203\001 \001(\005B\005\222?\002\030\003\022*\n\013log_message\030W" +
      " \001(\0132\016.pb.LogMessageB\005\222?\002\030\003\022.\n\ttpexecute" +
      "\030\310\001 \001(\0132\023.pb.TaskPlanExecuteB\005\222?\002\030\003\0226\n\rt" +
      "pblockdelete\030\311\001 \001(\0132\027.pb.TaskPlanBlockDe" +
      "leteB\005\222?\002\030\003\0228\n\016tpoptionalstop\030\312\001 \001(\0132\030.p" +
      "b.TaskPlanOptionalStopB\005\222?\002\030\003\022(\n\006tpopen\030" +
      "\313\001 \001(\0132\020.pb.TaskPlanOpenB\005\222?\002\030\003\0221\n\016taskp" +
      "lan_reply\030\322\001 \001(\0132\021.pb.TaskPlanReplyB\005\222?\002",
      "\030\003\022+\n\014traj_set_g5x\030\254\002 \001(\0132\024.pb.Emc_Traj_" +
      "Set_G5x\022+\n\014traj_set_g92\030\266\002 \001(\0132\024.pb.Emc_" +
      "Traj_Set_G92\0225\n\021traj_set_rotation\030\300\002 \001(\013" +
      "2\031.pb.Emc_Traj_Set_Rotation\0223\n\020traj_line" +
      "ar_move\030\312\002 \001(\0132\030.pb.Emc_Traj_Linear_Move" +
      "\022\'\n\ntraj_probe\030\324\002 \001(\0132\022.pb.Emc_Traj_Prob" +
      "e\0227\n\022traj_circular_move\030\336\002 \001(\0132\032.pb.Emc_" +
      "Traj_Circular_Move\022/\n\016traj_rigid_tap\030\350\002 " +
      "\001(\0132\026.pb.Emc_Traj_Rigid_Tap\0227\n\022traj_set_" +
      "term_cond\030\362\002 \001(\0132\032.pb.Emc_Traj_Set_Term_",
      "Cond\022;\n\024traj_set_spindlesync\030\374\002 \001(\0132\034.pb" +
      ".Emc_Traj_Set_Spindlesync\022\'\n\ntraj_delay\030" +
      "\206\003 \001(\0132\022.pb.Emc_Traj_Delay\022\'\n\nspindle_on" +
      "\030\220\003 \001(\0132\022.pb.Emc_Spindle_On\022-\n\rspindle_s" +
      "peed\030\232\003 \001(\0132\025.pb.Emc_Spindle_Speed\022/\n\016sp" +
      "indle_orient\030\244\003 \001(\0132\026.pb.Emc_Spindle_Ori" +
      "ent\022K\n\034spindle_wait_orient_complete\030\256\003 \001" +
      "(\0132$.pb.Emc_Spindle_Wait_Orient_Complete" +
      "\0220\n\016tool_set_offet\030\270\003 \001(\0132\027.pb.Emc_Tool_" +
      "Set_Offset\0221\n\017traj_set_offset\030\302\003 \001(\0132\027.p",
      "b.Emc_Traj_Set_Offset\022+\n\014tool_prepare\030\314\003" +
      " \001(\0132\024.pb.Emc_Tool_Prepare\0221\n\017tool_set_n" +
      "umber\030\326\003 \001(\0132\027.pb.Emc_Tool_Set_Number\0227\n" +
      "\022traj_set_fo_enable\030\340\003 \001(\0132\032.pb.Emc_Traj" +
      "_Set_Fo_Enable\0227\n\022traj_set_so_enable\030\352\003 " +
      "\001(\0132\032.pb.Emc_Traj_Set_So_Enable\0227\n\022traj_" +
      "set_fh_enable\030\364\003 \001(\0132\032.pb.Emc_Traj_Set_F" +
      "h_Enable\0221\n\017motion_adaptive\030\376\003 \001(\0132\027.pb." +
      "Emc_Motion_Adaptive\0223\n\020operator_display\030" +
      "\210\004 \001(\0132\030.pb.Emc_Operator_Display\022-\n\roper",
      "ator_text\030\222\004 \001(\0132\025.pb.Emc_Operator_Text\022" +
      "/\n\016operator_error\030\234\004 \001(\0132\026.pb.Emc_Operat" +
      "or_Error\0221\n\017motion_set_dout\030\246\004 \001(\0132\027.pb." +
      "Emc_Motion_Set_Dout\0221\n\017motion_set_aout\030\260" +
      "\004 \001(\0132\027.pb.Emc_Motion_Set_Aout\022/\n\016aux_in" +
      "put_wait\030\272\004 \001(\0132\026.pb.Emc_Aux_Input_Wait\022" +
      "3\n\020exec_plugin_call\030\304\004 \001(\0132\030.pb.Emc_Exec" +
      "_Plugin_Ca1l\022/\n\016io_plugin_call\030\316\004 \001(\0132\026." +
      "pb.Emc_Io_Plugin_Call\0226\n\021emc_status_conf" +
      "ig\030\330\004 \001(\0132\023.pb.EmcStatusConfigB\005\222?\002\030\003\0226\n",
      "\021emc_status_motion\030\331\004 \001(\0132\023.pb.EmcStatus" +
      "MotionB\005\222?\002\030\003\022.\n\remc_status_io\030\332\004 \001(\0132\017." +
      "pb.EmcStatusIoB\005\222?\002\030\003\0222\n\017emc_status_task" +
      "\030\333\004 \001(\0132\021.pb.EmcStatusTaskB\005\222?\002\030\003\0226\n\021emc" +
      "_status_interp\030\334\004 \001(\0132\023.pb.EmcStatusInte" +
      "rpB\005\222?\002\030\003\022<\n\022emc_command_params\030\342\004 \001(\0132\030" +
      ".pb.EmcCommandParametersB\005\222?\002\030\003:\006\222?\003H\364\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          fi.kapsi.koti.jpa.nanopb.Nanopb.getDescriptor(),
          pb.Types.getDescriptor(),
          pb.Object.getDescriptor(),
          pb.Log.getDescriptor(),
          pb.Motcmds.getDescriptor(),
          pb.Task.getDescriptor(),
          pb.Canon.getDescriptor(),
          pb.ValueOuterClass.getDescriptor(),
          pb.Rtapicommand.getDescriptor(),
          pb.RtapiMessage.getDescriptor(),
          pb.Config.getDescriptor(),
          pb.PreviewOuterClass.getDescriptor(),
          pb.Status.getDescriptor(),
        }, assigner);
    internal_static_pb_Container_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_pb_Container_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pb_Container_descriptor,
        new java.lang.String[] { "Type", "Tsc", "Preview", "Motcmd", "Motstat", "LegacyMotcmd", "LegacyMotstat", "RtapiMessage", "TaskReply", "TicketUpdate", "Syslog", "LegacyNml", "LegacyMotconfig", "TvSec", "TvNsec", "Topic", "ReplyRequired", "InterpState", "InterpName", "Rsvp", "InReplyTo", "RcsStatus", "Status", "Serial", "ReplySerial", "Ticket", "ReplyTicket", "Sequence", "Credit", "LineNumber", "Name", "Note", "Retcode", "Uuid", "Trace", "Instance", "Value", "Rtapicmd", "ServiceAnnouncement", "Comp", "Pin", "Signal", "Param", "Thread", "Ring", "Group", "Member", "Function", "Pparams", "Vtable", "Inst", "App", "Launcher", "Index", "LogMessage", "Tpexecute", "Tpblockdelete", "Tpoptionalstop", "Tpopen", "TaskplanReply", "TrajSetG5X", "TrajSetG92", "TrajSetRotation", "TrajLinearMove", "TrajProbe", "TrajCircularMove", "TrajRigidTap", "TrajSetTermCond", "TrajSetSpindlesync", "TrajDelay", "SpindleOn", "SpindleSpeed", "SpindleOrient", "SpindleWaitOrientComplete", "ToolSetOffet", "TrajSetOffset", "ToolPrepare", "ToolSetNumber", "TrajSetFoEnable", "TrajSetSoEnable", "TrajSetFhEnable", "MotionAdaptive", "OperatorDisplay", "OperatorText", "OperatorError", "MotionSetDout", "MotionSetAout", "AuxInputWait", "ExecPluginCall", "IoPluginCall", "EmcStatusConfig", "EmcStatusMotion", "EmcStatusIo", "EmcStatusTask", "EmcStatusInterp", "EmcCommandParams", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopbMsgopt);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    fi.kapsi.koti.jpa.nanopb.Nanopb.getDescriptor();
    pb.Types.getDescriptor();
    pb.Object.getDescriptor();
    pb.Log.getDescriptor();
    pb.Motcmds.getDescriptor();
    pb.Task.getDescriptor();
    pb.Canon.getDescriptor();
    pb.ValueOuterClass.getDescriptor();
    pb.Rtapicommand.getDescriptor();
    pb.RtapiMessage.getDescriptor();
    pb.Config.getDescriptor();
    pb.PreviewOuterClass.getDescriptor();
    pb.Status.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
