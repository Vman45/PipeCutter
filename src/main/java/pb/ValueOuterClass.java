// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: machinetalk/protobuf/value.proto

package pb;

public final class ValueOuterClass {
  private ValueOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb.Value)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .pb.ValueType type = 10;</code>
     *
     * <pre>
     * actual values
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required .pb.ValueType type = 10;</code>
     *
     * <pre>
     * actual values
     * </pre>
     */
    pb.Types.ValueType getType();

    /**
     * <code>optional bool halbit = 100;</code>
     *
     * <pre>
     * scalars
     * </pre>
     */
    boolean hasHalbit();
    /**
     * <code>optional bool halbit = 100;</code>
     *
     * <pre>
     * scalars
     * </pre>
     */
    boolean getHalbit();

    /**
     * <code>optional double halfloat = 101;</code>
     */
    boolean hasHalfloat();
    /**
     * <code>optional double halfloat = 101;</code>
     */
    double getHalfloat();

    /**
     * <code>optional sfixed32 hals32 = 102;</code>
     */
    boolean hasHals32();
    /**
     * <code>optional sfixed32 hals32 = 102;</code>
     */
    int getHals32();

    /**
     * <code>optional fixed32 halu32 = 103;</code>
     */
    boolean hasHalu32();
    /**
     * <code>optional fixed32 halu32 = 103;</code>
     */
    int getHalu32();

    /**
     * <code>optional bytes v_bytes = 120;</code>
     */
    boolean hasVBytes();
    /**
     * <code>optional bytes v_bytes = 120;</code>
     */
    com.google.protobuf.ByteString getVBytes();

    /**
     * <code>optional sfixed32 v_int32 = 130;</code>
     */
    boolean hasVInt32();
    /**
     * <code>optional sfixed32 v_int32 = 130;</code>
     */
    int getVInt32();

    /**
     * <code>optional sfixed64 v_int64 = 140;</code>
     */
    boolean hasVInt64();
    /**
     * <code>optional sfixed64 v_int64 = 140;</code>
     */
    long getVInt64();

    /**
     * <code>optional fixed32 v_uint32 = 150;</code>
     */
    boolean hasVUint32();
    /**
     * <code>optional fixed32 v_uint32 = 150;</code>
     */
    int getVUint32();

    /**
     * <code>optional fixed64 v_uint64 = 160;</code>
     */
    boolean hasVUint64();
    /**
     * <code>optional fixed64 v_uint64 = 160;</code>
     */
    long getVUint64();

    /**
     * <code>optional double v_double = 170;</code>
     */
    boolean hasVDouble();
    /**
     * <code>optional double v_double = 170;</code>
     */
    double getVDouble();

    /**
     * <code>optional string v_string = 180;</code>
     */
    boolean hasVString();
    /**
     * <code>optional string v_string = 180;</code>
     */
    java.lang.String getVString();
    /**
     * <code>optional string v_string = 180;</code>
     */
    com.google.protobuf.ByteString
        getVStringBytes();

    /**
     * <code>optional bool v_bool = 190;</code>
     */
    boolean hasVBool();
    /**
     * <code>optional bool v_bool = 190;</code>
     */
    boolean getVBool();

    /**
     * <code>optional .pb.PmCartesian carte = 200;</code>
     *
     * <pre>
     * compound types
     * </pre>
     */
    boolean hasCarte();
    /**
     * <code>optional .pb.PmCartesian carte = 200;</code>
     *
     * <pre>
     * compound types
     * </pre>
     */
    pb.Emcclass.PmCartesian getCarte();
    /**
     * <code>optional .pb.PmCartesian carte = 200;</code>
     *
     * <pre>
     * compound types
     * </pre>
     */
    pb.Emcclass.PmCartesianOrBuilder getCarteOrBuilder();

    /**
     * <code>optional .pb.EmcPose pose = 220;</code>
     */
    boolean hasPose();
    /**
     * <code>optional .pb.EmcPose pose = 220;</code>
     */
    pb.Emcclass.EmcPose getPose();
    /**
     * <code>optional .pb.EmcPose pose = 220;</code>
     */
    pb.Emcclass.EmcPoseOrBuilder getPoseOrBuilder();
  }
  /**
   * Protobuf type {@code pb.Value}
   */
  public static final class Value extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pb.Value)
      ValueOrBuilder {
    // Use Value.newBuilder() to construct.
    private Value(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Value(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Value defaultInstance;
    public static Value getDefaultInstance() {
      return defaultInstance;
    }

    public Value getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Value(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
              pb.Types.ValueType value = pb.Types.ValueType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(10, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 800: {
              bitField0_ |= 0x00000002;
              halbit_ = input.readBool();
              break;
            }
            case 809: {
              bitField0_ |= 0x00000004;
              halfloat_ = input.readDouble();
              break;
            }
            case 821: {
              bitField0_ |= 0x00000008;
              hals32_ = input.readSFixed32();
              break;
            }
            case 829: {
              bitField0_ |= 0x00000010;
              halu32_ = input.readFixed32();
              break;
            }
            case 962: {
              bitField0_ |= 0x00000020;
              vBytes_ = input.readBytes();
              break;
            }
            case 1045: {
              bitField0_ |= 0x00000040;
              vInt32_ = input.readSFixed32();
              break;
            }
            case 1121: {
              bitField0_ |= 0x00000080;
              vInt64_ = input.readSFixed64();
              break;
            }
            case 1205: {
              bitField0_ |= 0x00000100;
              vUint32_ = input.readFixed32();
              break;
            }
            case 1281: {
              bitField0_ |= 0x00000200;
              vUint64_ = input.readFixed64();
              break;
            }
            case 1361: {
              bitField0_ |= 0x00000400;
              vDouble_ = input.readDouble();
              break;
            }
            case 1442: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              vString_ = bs;
              break;
            }
            case 1520: {
              bitField0_ |= 0x00001000;
              vBool_ = input.readBool();
              break;
            }
            case 1602: {
              pb.Emcclass.PmCartesian.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = carte_.toBuilder();
              }
              carte_ = input.readMessage(pb.Emcclass.PmCartesian.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(carte_);
                carte_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 1762: {
              pb.Emcclass.EmcPose.Builder subBuilder = null;
              if (((bitField0_ & 0x00004000) == 0x00004000)) {
                subBuilder = pose_.toBuilder();
              }
              pose_ = input.readMessage(pb.Emcclass.EmcPose.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pose_);
                pose_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00004000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pb.ValueOuterClass.internal_static_pb_Value_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pb.ValueOuterClass.internal_static_pb_Value_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pb.ValueOuterClass.Value.class, pb.ValueOuterClass.Value.Builder.class);
    }

    public static com.google.protobuf.Parser<Value> PARSER =
        new com.google.protobuf.AbstractParser<Value>() {
      public Value parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Value(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Value> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 10;
    private pb.Types.ValueType type_;
    /**
     * <code>required .pb.ValueType type = 10;</code>
     *
     * <pre>
     * actual values
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .pb.ValueType type = 10;</code>
     *
     * <pre>
     * actual values
     * </pre>
     */
    public pb.Types.ValueType getType() {
      return type_;
    }

    public static final int HALBIT_FIELD_NUMBER = 100;
    private boolean halbit_;
    /**
     * <code>optional bool halbit = 100;</code>
     *
     * <pre>
     * scalars
     * </pre>
     */
    public boolean hasHalbit() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool halbit = 100;</code>
     *
     * <pre>
     * scalars
     * </pre>
     */
    public boolean getHalbit() {
      return halbit_;
    }

    public static final int HALFLOAT_FIELD_NUMBER = 101;
    private double halfloat_;
    /**
     * <code>optional double halfloat = 101;</code>
     */
    public boolean hasHalfloat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional double halfloat = 101;</code>
     */
    public double getHalfloat() {
      return halfloat_;
    }

    public static final int HALS32_FIELD_NUMBER = 102;
    private int hals32_;
    /**
     * <code>optional sfixed32 hals32 = 102;</code>
     */
    public boolean hasHals32() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sfixed32 hals32 = 102;</code>
     */
    public int getHals32() {
      return hals32_;
    }

    public static final int HALU32_FIELD_NUMBER = 103;
    private int halu32_;
    /**
     * <code>optional fixed32 halu32 = 103;</code>
     */
    public boolean hasHalu32() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional fixed32 halu32 = 103;</code>
     */
    public int getHalu32() {
      return halu32_;
    }

    public static final int V_BYTES_FIELD_NUMBER = 120;
    private com.google.protobuf.ByteString vBytes_;
    /**
     * <code>optional bytes v_bytes = 120;</code>
     */
    public boolean hasVBytes() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bytes v_bytes = 120;</code>
     */
    public com.google.protobuf.ByteString getVBytes() {
      return vBytes_;
    }

    public static final int V_INT32_FIELD_NUMBER = 130;
    private int vInt32_;
    /**
     * <code>optional sfixed32 v_int32 = 130;</code>
     */
    public boolean hasVInt32() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sfixed32 v_int32 = 130;</code>
     */
    public int getVInt32() {
      return vInt32_;
    }

    public static final int V_INT64_FIELD_NUMBER = 140;
    private long vInt64_;
    /**
     * <code>optional sfixed64 v_int64 = 140;</code>
     */
    public boolean hasVInt64() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional sfixed64 v_int64 = 140;</code>
     */
    public long getVInt64() {
      return vInt64_;
    }

    public static final int V_UINT32_FIELD_NUMBER = 150;
    private int vUint32_;
    /**
     * <code>optional fixed32 v_uint32 = 150;</code>
     */
    public boolean hasVUint32() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional fixed32 v_uint32 = 150;</code>
     */
    public int getVUint32() {
      return vUint32_;
    }

    public static final int V_UINT64_FIELD_NUMBER = 160;
    private long vUint64_;
    /**
     * <code>optional fixed64 v_uint64 = 160;</code>
     */
    public boolean hasVUint64() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional fixed64 v_uint64 = 160;</code>
     */
    public long getVUint64() {
      return vUint64_;
    }

    public static final int V_DOUBLE_FIELD_NUMBER = 170;
    private double vDouble_;
    /**
     * <code>optional double v_double = 170;</code>
     */
    public boolean hasVDouble() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional double v_double = 170;</code>
     */
    public double getVDouble() {
      return vDouble_;
    }

    public static final int V_STRING_FIELD_NUMBER = 180;
    private java.lang.Object vString_;
    /**
     * <code>optional string v_string = 180;</code>
     */
    public boolean hasVString() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string v_string = 180;</code>
     */
    public java.lang.String getVString() {
      java.lang.Object ref = vString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          vString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string v_string = 180;</code>
     */
    public com.google.protobuf.ByteString
        getVStringBytes() {
      java.lang.Object ref = vString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int V_BOOL_FIELD_NUMBER = 190;
    private boolean vBool_;
    /**
     * <code>optional bool v_bool = 190;</code>
     */
    public boolean hasVBool() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool v_bool = 190;</code>
     */
    public boolean getVBool() {
      return vBool_;
    }

    public static final int CARTE_FIELD_NUMBER = 200;
    private pb.Emcclass.PmCartesian carte_;
    /**
     * <code>optional .pb.PmCartesian carte = 200;</code>
     *
     * <pre>
     * compound types
     * </pre>
     */
    public boolean hasCarte() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .pb.PmCartesian carte = 200;</code>
     *
     * <pre>
     * compound types
     * </pre>
     */
    public pb.Emcclass.PmCartesian getCarte() {
      return carte_;
    }
    /**
     * <code>optional .pb.PmCartesian carte = 200;</code>
     *
     * <pre>
     * compound types
     * </pre>
     */
    public pb.Emcclass.PmCartesianOrBuilder getCarteOrBuilder() {
      return carte_;
    }

    public static final int POSE_FIELD_NUMBER = 220;
    private pb.Emcclass.EmcPose pose_;
    /**
     * <code>optional .pb.EmcPose pose = 220;</code>
     */
    public boolean hasPose() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .pb.EmcPose pose = 220;</code>
     */
    public pb.Emcclass.EmcPose getPose() {
      return pose_;
    }
    /**
     * <code>optional .pb.EmcPose pose = 220;</code>
     */
    public pb.Emcclass.EmcPoseOrBuilder getPoseOrBuilder() {
      return pose_;
    }

    private void initFields() {
      type_ = pb.Types.ValueType.HAL_BIT;
      halbit_ = false;
      halfloat_ = 0D;
      hals32_ = 0;
      halu32_ = 0;
      vBytes_ = com.google.protobuf.ByteString.EMPTY;
      vInt32_ = 0;
      vInt64_ = 0L;
      vUint32_ = 0;
      vUint64_ = 0L;
      vDouble_ = 0D;
      vString_ = "";
      vBool_ = false;
      carte_ = pb.Emcclass.PmCartesian.getDefaultInstance();
      pose_ = pb.Emcclass.EmcPose.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasPose()) {
        if (!getPose().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(10, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(100, halbit_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(101, halfloat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSFixed32(102, hals32_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFixed32(103, halu32_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(120, vBytes_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSFixed32(130, vInt32_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSFixed64(140, vInt64_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFixed32(150, vUint32_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFixed64(160, vUint64_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(170, vDouble_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(180, getVStringBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(190, vBool_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(200, carte_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(220, pose_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(100, halbit_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(101, halfloat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(102, hals32_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(103, halu32_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(120, vBytes_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(130, vInt32_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(140, vInt64_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(150, vUint32_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(160, vUint64_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(170, vDouble_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(180, getVStringBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(190, vBool_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(200, carte_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(220, pose_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pb.ValueOuterClass.Value parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pb.ValueOuterClass.Value parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pb.ValueOuterClass.Value parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pb.ValueOuterClass.Value parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pb.ValueOuterClass.Value parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pb.ValueOuterClass.Value parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pb.ValueOuterClass.Value parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pb.ValueOuterClass.Value parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pb.ValueOuterClass.Value parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pb.ValueOuterClass.Value parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pb.ValueOuterClass.Value prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pb.Value}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb.Value)
        pb.ValueOuterClass.ValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pb.ValueOuterClass.internal_static_pb_Value_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pb.ValueOuterClass.internal_static_pb_Value_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pb.ValueOuterClass.Value.class, pb.ValueOuterClass.Value.Builder.class);
      }

      // Construct using pb.ValueOuterClass.Value.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCarteFieldBuilder();
          getPoseFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = pb.Types.ValueType.HAL_BIT;
        bitField0_ = (bitField0_ & ~0x00000001);
        halbit_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        halfloat_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        hals32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        halu32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        vBytes_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        vInt32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        vInt64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        vUint32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        vUint64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        vDouble_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        vString_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        vBool_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (carteBuilder_ == null) {
          carte_ = pb.Emcclass.PmCartesian.getDefaultInstance();
        } else {
          carteBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (poseBuilder_ == null) {
          pose_ = pb.Emcclass.EmcPose.getDefaultInstance();
        } else {
          poseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pb.ValueOuterClass.internal_static_pb_Value_descriptor;
      }

      public pb.ValueOuterClass.Value getDefaultInstanceForType() {
        return pb.ValueOuterClass.Value.getDefaultInstance();
      }

      public pb.ValueOuterClass.Value build() {
        pb.ValueOuterClass.Value result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pb.ValueOuterClass.Value buildPartial() {
        pb.ValueOuterClass.Value result = new pb.ValueOuterClass.Value(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.halbit_ = halbit_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.halfloat_ = halfloat_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hals32_ = hals32_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.halu32_ = halu32_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.vBytes_ = vBytes_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.vInt32_ = vInt32_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.vInt64_ = vInt64_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.vUint32_ = vUint32_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.vUint64_ = vUint64_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.vDouble_ = vDouble_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.vString_ = vString_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.vBool_ = vBool_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (carteBuilder_ == null) {
          result.carte_ = carte_;
        } else {
          result.carte_ = carteBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        if (poseBuilder_ == null) {
          result.pose_ = pose_;
        } else {
          result.pose_ = poseBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pb.ValueOuterClass.Value) {
          return mergeFrom((pb.ValueOuterClass.Value)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pb.ValueOuterClass.Value other) {
        if (other == pb.ValueOuterClass.Value.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasHalbit()) {
          setHalbit(other.getHalbit());
        }
        if (other.hasHalfloat()) {
          setHalfloat(other.getHalfloat());
        }
        if (other.hasHals32()) {
          setHals32(other.getHals32());
        }
        if (other.hasHalu32()) {
          setHalu32(other.getHalu32());
        }
        if (other.hasVBytes()) {
          setVBytes(other.getVBytes());
        }
        if (other.hasVInt32()) {
          setVInt32(other.getVInt32());
        }
        if (other.hasVInt64()) {
          setVInt64(other.getVInt64());
        }
        if (other.hasVUint32()) {
          setVUint32(other.getVUint32());
        }
        if (other.hasVUint64()) {
          setVUint64(other.getVUint64());
        }
        if (other.hasVDouble()) {
          setVDouble(other.getVDouble());
        }
        if (other.hasVString()) {
          bitField0_ |= 0x00000800;
          vString_ = other.vString_;
          onChanged();
        }
        if (other.hasVBool()) {
          setVBool(other.getVBool());
        }
        if (other.hasCarte()) {
          mergeCarte(other.getCarte());
        }
        if (other.hasPose()) {
          mergePose(other.getPose());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (hasPose()) {
          if (!getPose().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pb.ValueOuterClass.Value parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pb.ValueOuterClass.Value) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private pb.Types.ValueType type_ = pb.Types.ValueType.HAL_BIT;
      /**
       * <code>required .pb.ValueType type = 10;</code>
       *
       * <pre>
       * actual values
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .pb.ValueType type = 10;</code>
       *
       * <pre>
       * actual values
       * </pre>
       */
      public pb.Types.ValueType getType() {
        return type_;
      }
      /**
       * <code>required .pb.ValueType type = 10;</code>
       *
       * <pre>
       * actual values
       * </pre>
       */
      public Builder setType(pb.Types.ValueType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .pb.ValueType type = 10;</code>
       *
       * <pre>
       * actual values
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = pb.Types.ValueType.HAL_BIT;
        onChanged();
        return this;
      }

      private boolean halbit_ ;
      /**
       * <code>optional bool halbit = 100;</code>
       *
       * <pre>
       * scalars
       * </pre>
       */
      public boolean hasHalbit() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool halbit = 100;</code>
       *
       * <pre>
       * scalars
       * </pre>
       */
      public boolean getHalbit() {
        return halbit_;
      }
      /**
       * <code>optional bool halbit = 100;</code>
       *
       * <pre>
       * scalars
       * </pre>
       */
      public Builder setHalbit(boolean value) {
        bitField0_ |= 0x00000002;
        halbit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool halbit = 100;</code>
       *
       * <pre>
       * scalars
       * </pre>
       */
      public Builder clearHalbit() {
        bitField0_ = (bitField0_ & ~0x00000002);
        halbit_ = false;
        onChanged();
        return this;
      }

      private double halfloat_ ;
      /**
       * <code>optional double halfloat = 101;</code>
       */
      public boolean hasHalfloat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double halfloat = 101;</code>
       */
      public double getHalfloat() {
        return halfloat_;
      }
      /**
       * <code>optional double halfloat = 101;</code>
       */
      public Builder setHalfloat(double value) {
        bitField0_ |= 0x00000004;
        halfloat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double halfloat = 101;</code>
       */
      public Builder clearHalfloat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        halfloat_ = 0D;
        onChanged();
        return this;
      }

      private int hals32_ ;
      /**
       * <code>optional sfixed32 hals32 = 102;</code>
       */
      public boolean hasHals32() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sfixed32 hals32 = 102;</code>
       */
      public int getHals32() {
        return hals32_;
      }
      /**
       * <code>optional sfixed32 hals32 = 102;</code>
       */
      public Builder setHals32(int value) {
        bitField0_ |= 0x00000008;
        hals32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed32 hals32 = 102;</code>
       */
      public Builder clearHals32() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hals32_ = 0;
        onChanged();
        return this;
      }

      private int halu32_ ;
      /**
       * <code>optional fixed32 halu32 = 103;</code>
       */
      public boolean hasHalu32() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional fixed32 halu32 = 103;</code>
       */
      public int getHalu32() {
        return halu32_;
      }
      /**
       * <code>optional fixed32 halu32 = 103;</code>
       */
      public Builder setHalu32(int value) {
        bitField0_ |= 0x00000010;
        halu32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 halu32 = 103;</code>
       */
      public Builder clearHalu32() {
        bitField0_ = (bitField0_ & ~0x00000010);
        halu32_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString vBytes_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes v_bytes = 120;</code>
       */
      public boolean hasVBytes() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bytes v_bytes = 120;</code>
       */
      public com.google.protobuf.ByteString getVBytes() {
        return vBytes_;
      }
      /**
       * <code>optional bytes v_bytes = 120;</code>
       */
      public Builder setVBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        vBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes v_bytes = 120;</code>
       */
      public Builder clearVBytes() {
        bitField0_ = (bitField0_ & ~0x00000020);
        vBytes_ = getDefaultInstance().getVBytes();
        onChanged();
        return this;
      }

      private int vInt32_ ;
      /**
       * <code>optional sfixed32 v_int32 = 130;</code>
       */
      public boolean hasVInt32() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sfixed32 v_int32 = 130;</code>
       */
      public int getVInt32() {
        return vInt32_;
      }
      /**
       * <code>optional sfixed32 v_int32 = 130;</code>
       */
      public Builder setVInt32(int value) {
        bitField0_ |= 0x00000040;
        vInt32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed32 v_int32 = 130;</code>
       */
      public Builder clearVInt32() {
        bitField0_ = (bitField0_ & ~0x00000040);
        vInt32_ = 0;
        onChanged();
        return this;
      }

      private long vInt64_ ;
      /**
       * <code>optional sfixed64 v_int64 = 140;</code>
       */
      public boolean hasVInt64() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sfixed64 v_int64 = 140;</code>
       */
      public long getVInt64() {
        return vInt64_;
      }
      /**
       * <code>optional sfixed64 v_int64 = 140;</code>
       */
      public Builder setVInt64(long value) {
        bitField0_ |= 0x00000080;
        vInt64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed64 v_int64 = 140;</code>
       */
      public Builder clearVInt64() {
        bitField0_ = (bitField0_ & ~0x00000080);
        vInt64_ = 0L;
        onChanged();
        return this;
      }

      private int vUint32_ ;
      /**
       * <code>optional fixed32 v_uint32 = 150;</code>
       */
      public boolean hasVUint32() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional fixed32 v_uint32 = 150;</code>
       */
      public int getVUint32() {
        return vUint32_;
      }
      /**
       * <code>optional fixed32 v_uint32 = 150;</code>
       */
      public Builder setVUint32(int value) {
        bitField0_ |= 0x00000100;
        vUint32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 v_uint32 = 150;</code>
       */
      public Builder clearVUint32() {
        bitField0_ = (bitField0_ & ~0x00000100);
        vUint32_ = 0;
        onChanged();
        return this;
      }

      private long vUint64_ ;
      /**
       * <code>optional fixed64 v_uint64 = 160;</code>
       */
      public boolean hasVUint64() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional fixed64 v_uint64 = 160;</code>
       */
      public long getVUint64() {
        return vUint64_;
      }
      /**
       * <code>optional fixed64 v_uint64 = 160;</code>
       */
      public Builder setVUint64(long value) {
        bitField0_ |= 0x00000200;
        vUint64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 v_uint64 = 160;</code>
       */
      public Builder clearVUint64() {
        bitField0_ = (bitField0_ & ~0x00000200);
        vUint64_ = 0L;
        onChanged();
        return this;
      }

      private double vDouble_ ;
      /**
       * <code>optional double v_double = 170;</code>
       */
      public boolean hasVDouble() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional double v_double = 170;</code>
       */
      public double getVDouble() {
        return vDouble_;
      }
      /**
       * <code>optional double v_double = 170;</code>
       */
      public Builder setVDouble(double value) {
        bitField0_ |= 0x00000400;
        vDouble_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double v_double = 170;</code>
       */
      public Builder clearVDouble() {
        bitField0_ = (bitField0_ & ~0x00000400);
        vDouble_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object vString_ = "";
      /**
       * <code>optional string v_string = 180;</code>
       */
      public boolean hasVString() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string v_string = 180;</code>
       */
      public java.lang.String getVString() {
        java.lang.Object ref = vString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            vString_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string v_string = 180;</code>
       */
      public com.google.protobuf.ByteString
          getVStringBytes() {
        java.lang.Object ref = vString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string v_string = 180;</code>
       */
      public Builder setVString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        vString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string v_string = 180;</code>
       */
      public Builder clearVString() {
        bitField0_ = (bitField0_ & ~0x00000800);
        vString_ = getDefaultInstance().getVString();
        onChanged();
        return this;
      }
      /**
       * <code>optional string v_string = 180;</code>
       */
      public Builder setVStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        vString_ = value;
        onChanged();
        return this;
      }

      private boolean vBool_ ;
      /**
       * <code>optional bool v_bool = 190;</code>
       */
      public boolean hasVBool() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool v_bool = 190;</code>
       */
      public boolean getVBool() {
        return vBool_;
      }
      /**
       * <code>optional bool v_bool = 190;</code>
       */
      public Builder setVBool(boolean value) {
        bitField0_ |= 0x00001000;
        vBool_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool v_bool = 190;</code>
       */
      public Builder clearVBool() {
        bitField0_ = (bitField0_ & ~0x00001000);
        vBool_ = false;
        onChanged();
        return this;
      }

      private pb.Emcclass.PmCartesian carte_ = pb.Emcclass.PmCartesian.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Emcclass.PmCartesian, pb.Emcclass.PmCartesian.Builder, pb.Emcclass.PmCartesianOrBuilder> carteBuilder_;
      /**
       * <code>optional .pb.PmCartesian carte = 200;</code>
       *
       * <pre>
       * compound types
       * </pre>
       */
      public boolean hasCarte() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .pb.PmCartesian carte = 200;</code>
       *
       * <pre>
       * compound types
       * </pre>
       */
      public pb.Emcclass.PmCartesian getCarte() {
        if (carteBuilder_ == null) {
          return carte_;
        } else {
          return carteBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.PmCartesian carte = 200;</code>
       *
       * <pre>
       * compound types
       * </pre>
       */
      public Builder setCarte(pb.Emcclass.PmCartesian value) {
        if (carteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          carte_ = value;
          onChanged();
        } else {
          carteBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .pb.PmCartesian carte = 200;</code>
       *
       * <pre>
       * compound types
       * </pre>
       */
      public Builder setCarte(
          pb.Emcclass.PmCartesian.Builder builderForValue) {
        if (carteBuilder_ == null) {
          carte_ = builderForValue.build();
          onChanged();
        } else {
          carteBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .pb.PmCartesian carte = 200;</code>
       *
       * <pre>
       * compound types
       * </pre>
       */
      public Builder mergeCarte(pb.Emcclass.PmCartesian value) {
        if (carteBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              carte_ != pb.Emcclass.PmCartesian.getDefaultInstance()) {
            carte_ =
              pb.Emcclass.PmCartesian.newBuilder(carte_).mergeFrom(value).buildPartial();
          } else {
            carte_ = value;
          }
          onChanged();
        } else {
          carteBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .pb.PmCartesian carte = 200;</code>
       *
       * <pre>
       * compound types
       * </pre>
       */
      public Builder clearCarte() {
        if (carteBuilder_ == null) {
          carte_ = pb.Emcclass.PmCartesian.getDefaultInstance();
          onChanged();
        } else {
          carteBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .pb.PmCartesian carte = 200;</code>
       *
       * <pre>
       * compound types
       * </pre>
       */
      public pb.Emcclass.PmCartesian.Builder getCarteBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getCarteFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.PmCartesian carte = 200;</code>
       *
       * <pre>
       * compound types
       * </pre>
       */
      public pb.Emcclass.PmCartesianOrBuilder getCarteOrBuilder() {
        if (carteBuilder_ != null) {
          return carteBuilder_.getMessageOrBuilder();
        } else {
          return carte_;
        }
      }
      /**
       * <code>optional .pb.PmCartesian carte = 200;</code>
       *
       * <pre>
       * compound types
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Emcclass.PmCartesian, pb.Emcclass.PmCartesian.Builder, pb.Emcclass.PmCartesianOrBuilder> 
          getCarteFieldBuilder() {
        if (carteBuilder_ == null) {
          carteBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Emcclass.PmCartesian, pb.Emcclass.PmCartesian.Builder, pb.Emcclass.PmCartesianOrBuilder>(
                  getCarte(),
                  getParentForChildren(),
                  isClean());
          carte_ = null;
        }
        return carteBuilder_;
      }

      private pb.Emcclass.EmcPose pose_ = pb.Emcclass.EmcPose.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pb.Emcclass.EmcPose, pb.Emcclass.EmcPose.Builder, pb.Emcclass.EmcPoseOrBuilder> poseBuilder_;
      /**
       * <code>optional .pb.EmcPose pose = 220;</code>
       */
      public boolean hasPose() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .pb.EmcPose pose = 220;</code>
       */
      public pb.Emcclass.EmcPose getPose() {
        if (poseBuilder_ == null) {
          return pose_;
        } else {
          return poseBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .pb.EmcPose pose = 220;</code>
       */
      public Builder setPose(pb.Emcclass.EmcPose value) {
        if (poseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pose_ = value;
          onChanged();
        } else {
          poseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .pb.EmcPose pose = 220;</code>
       */
      public Builder setPose(
          pb.Emcclass.EmcPose.Builder builderForValue) {
        if (poseBuilder_ == null) {
          pose_ = builderForValue.build();
          onChanged();
        } else {
          poseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .pb.EmcPose pose = 220;</code>
       */
      public Builder mergePose(pb.Emcclass.EmcPose value) {
        if (poseBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              pose_ != pb.Emcclass.EmcPose.getDefaultInstance()) {
            pose_ =
              pb.Emcclass.EmcPose.newBuilder(pose_).mergeFrom(value).buildPartial();
          } else {
            pose_ = value;
          }
          onChanged();
        } else {
          poseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .pb.EmcPose pose = 220;</code>
       */
      public Builder clearPose() {
        if (poseBuilder_ == null) {
          pose_ = pb.Emcclass.EmcPose.getDefaultInstance();
          onChanged();
        } else {
          poseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .pb.EmcPose pose = 220;</code>
       */
      public pb.Emcclass.EmcPose.Builder getPoseBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getPoseFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .pb.EmcPose pose = 220;</code>
       */
      public pb.Emcclass.EmcPoseOrBuilder getPoseOrBuilder() {
        if (poseBuilder_ != null) {
          return poseBuilder_.getMessageOrBuilder();
        } else {
          return pose_;
        }
      }
      /**
       * <code>optional .pb.EmcPose pose = 220;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pb.Emcclass.EmcPose, pb.Emcclass.EmcPose.Builder, pb.Emcclass.EmcPoseOrBuilder> 
          getPoseFieldBuilder() {
        if (poseBuilder_ == null) {
          poseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pb.Emcclass.EmcPose, pb.Emcclass.EmcPose.Builder, pb.Emcclass.EmcPoseOrBuilder>(
                  getPose(),
                  getParentForChildren(),
                  isClean());
          pose_ = null;
        }
        return poseBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:pb.Value)
    }

    static {
      defaultInstance = new Value(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pb.Value)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_Value_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_Value_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n machinetalk/protobuf/value.proto\022\002pb\032!" +
      "machinetalk/protobuf/nanopb.proto\032#machi" +
      "netalk/protobuf/emcclass.proto\032 machinet" +
      "alk/protobuf/types.proto\"\304\002\n\005Value\022\033\n\004ty" +
      "pe\030\n \002(\0162\r.pb.ValueType\022\016\n\006halbit\030d \001(\010\022" +
      "\020\n\010halfloat\030e \001(\001\022\016\n\006hals32\030f \001(\017\022\016\n\006hal" +
      "u32\030g \001(\007\022\017\n\007v_bytes\030x \001(\014\022\020\n\007v_int32\030\202\001" +
      " \001(\017\022\020\n\007v_int64\030\214\001 \001(\020\022\021\n\010v_uint32\030\226\001 \001(" +
      "\007\022\021\n\010v_uint64\030\240\001 \001(\006\022\021\n\010v_double\030\252\001 \001(\001\022" +
      "\030\n\010v_string\030\264\001 \001(\tB\005\222?\002\010)\022\017\n\006v_bool\030\276\001 \001",
      "(\010\022\037\n\005carte\030\310\001 \001(\0132\017.pb.PmCartesian\022\032\n\004p" +
      "ose\030\334\001 \001(\0132\013.pb.EmcPose:\006\222?\003H\334\013"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          fi.kapsi.koti.jpa.nanopb.Nanopb.getDescriptor(),
          pb.Emcclass.getDescriptor(),
          pb.Types.getDescriptor(),
        }, assigner);
    internal_static_pb_Value_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_pb_Value_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pb_Value_descriptor,
        new java.lang.String[] { "Type", "Halbit", "Halfloat", "Hals32", "Halu32", "VBytes", "VInt32", "VInt64", "VUint32", "VUint64", "VDouble", "VString", "VBool", "Carte", "Pose", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopb);
    registry.add(fi.kapsi.koti.jpa.nanopb.Nanopb.nanopbMsgopt);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    fi.kapsi.koti.jpa.nanopb.Nanopb.getDescriptor();
    pb.Emcclass.getDescriptor();
    pb.Types.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
